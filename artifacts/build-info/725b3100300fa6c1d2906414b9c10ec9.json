{
	"id": "725b3100300fa6c1d2906414b9c10ec9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/KipuBankV2.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.26;\r\n\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\n/// @notice Extensión común de metadatos para leer `decimals()` en muchos ERC20.\r\ninterface IERC20Metadata is IERC20 {\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\n/// @dev Interfaz mínima de Chainlink AggregatorV3 (TOKEN/USD).\r\ninterface AggregatorV3Interface {\r\n    function decimals() external view returns (uint8);\r\n    function latestRoundData() external view returns (\r\n        uint80 roundId,\r\n        int256 answer,\r\n        uint256 startedAt,\r\n        uint256 updatedAt,\r\n        uint80 answeredInRound\r\n    );\r\n}\r\n\r\n/// @dev Estructura de configuración por token. Almacena parámetros\r\n///      necesarios para depósitos/retiros y cálculos en USD\r\nstruct TokenConfig {\r\n    bool supported;         // Indica si el token está habilitado.\r\n    bool isNative;          // True si es ETH (address(0)).\r\n    uint8 tokenDecimals;    // Número de decimales del token.\r\n    uint256 withdrawLimit;  // Límite por retiro (en unidades del token).\r\n    address priceFeed;      // Dirección del agregador Chainlink TOKEN/USD.\r\n}\r\n\r\n/// @title KipuBankV2 (OpenZeppelin edition)\r\n/// @notice Versión multi-token con control de acceso, bank cap en USD y conversión de decimales\r\n/// @dev Usa `AccessControl` (roles) + `ReentrancyGuard` + `SafeERC20` + oráculos Chainlink\r\ncontract KipuBankV2 is AccessControl, ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                               CONSTANTES\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @notice Rol administrador. Puede configurar tokens y parámetros\r\n    bytes32 public constant ROLE_ADMIN = keccak256(\"ROLE_ADMIN\");\r\n\r\n    /// @notice Identificador del token nativo (ETH). Uso address(0)\r\n    address public constant NATIVE_TOKEN = address(0);\r\n\r\n    /// @notice Decimales internos de USD estilo USDC (6 decimales)\r\n    uint8 public constant USD_DECIMALS = 6;\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                               ESTADO\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @notice Límite global del banco en USD (6 decimales). Inmutable\r\n    uint256 public immutable bankCapUsd6;\r\n\r\n    /// @notice Total acumulado en USD(6) depositado en el banco\r\n    uint256 public totalDepositedUsd6;\r\n\r\n    /// @notice Contadores de operaciones\r\n    uint256 public depositCount;\r\n    uint256 public withdrawCount;\r\n\r\n    /// @notice Saldos: balances[token][usuario] en unidades nativas del token\r\n    mapping(address => mapping(address => uint256)) private balances;\r\n\r\n    /// @notice Configuración por token. address(0) = ETH\r\n    mapping(address => TokenConfig) public tokenConfig;\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                               ERRORES\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    error ZeroAmount();                     // Monto igual a cero\r\n    error UnsupportedToken(address token);  // Token no soportado o inválido\r\n    error PriceFeedNotSet(address token);   // Oráculo no configurado\r\n    error PriceNegative();                  // Precio inválido (<= 0)\r\n    error CapExceeded(uint256 attempted, uint256 cap);                 // Se supera el cap global\r\n    error WithdrawLimitExceeded(uint256 attempted, uint256 limit);      // Mayor al límite por retiro.\r\n    error InsufficientBalance(uint256 balance, uint256 needed);         // Saldo insuficiente\r\n    error EthTransferFailed();                                         // Fallo al transferir ETH\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                               EVENTOS\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    event TokenConfigured(\r\n        address indexed token,\r\n        bool supported,\r\n        bool isNative,\r\n        uint8 tokenDecimals,\r\n        uint256 withdrawLimit,\r\n        address priceFeed\r\n    );\r\n\r\n    event Deposit(\r\n        address indexed token,\r\n        address indexed account,\r\n        uint256 amountToken,\r\n        uint256 newBalanceToken,\r\n        uint256 amountUsd6\r\n    );\r\n\r\n    event Withdraw(\r\n        address indexed token,\r\n        address indexed account,\r\n        uint256 amountToken,\r\n        uint256 newBalanceToken,\r\n        uint256 amountUsd6\r\n    );\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                               CONSTRUCTOR\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @param _bankCapUsd6 Cap global del banco en USD con 6 decimales\r\n    /// @param ethPriceFeed Dirección del oráculo Chainlink ETH/USD\r\n    /// @param ethWithdrawLimit Límite por retiro en ETH (en wei)\r\n    constructor(\r\n        uint256 _bankCapUsd6,\r\n        address ethPriceFeed,\r\n        uint256 ethWithdrawLimit\r\n    ) {\r\n        if (_bankCapUsd6 == 0) revert ZeroAmount();\r\n\r\n\r\n        bankCapUsd6 = _bankCapUsd6;\r\n\r\n        // Otorgar roles al deployer:\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender); // super-admin para poder dar/quitar roles si hiciera falta\r\n        _grantRole(ROLE_ADMIN, msg.sender);         // admin operativo del contrato\r\n\r\n        // Configurar ETH (NATIVE_TOKEN)\r\n        TokenConfig memory cfg;\r\n        cfg.supported = true;\r\n        cfg.isNative = true;\r\n        cfg.tokenDecimals = 18;\r\n\r\n        cfg.withdrawLimit = ethWithdrawLimit;\r\n        cfg.priceFeed = ethPriceFeed;\r\n        tokenConfig[NATIVE_TOKEN] = cfg;\r\n\r\n        emit TokenConfigured(NATIVE_TOKEN, true, true, 18, ethWithdrawLimit, ethPriceFeed);\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                               MODIFIERS\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @notice Exige que el monto sea > 0 (para depósitos/retiros)\r\n    modifier nonZero(uint256 amount) {\r\n        if (amount == 0) revert ZeroAmount();\r\n        _;\r\n    }\r\n\r\n    /// @notice Exige que el token esté soportado (habilitado)\r\n    modifier tokenSupported(address token) {\r\n        if (!tokenConfig[token].supported) revert UnsupportedToken(token);\r\n        _;\r\n    }\r\n\r\n    /// @notice Exige que el token NO sea ETH (para funciones que esperan ERC-20)\r\n    modifier notNative(address token) {\r\n        if (token == NATIVE_TOKEN) revert UnsupportedToken(token);\r\n        _;\r\n    }\r\n\r\n    /// @notice Exige que el retiro no supere el límite por transacción del token.\r\n    modifier underWithdrawLimit(address token, uint256 amount) {\r\n        TokenConfig memory cfg = tokenConfig[token];\r\n        if (amount > cfg.withdrawLimit) revert WithdrawLimitExceeded(amount, cfg.withdrawLimit);\r\n        _;\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                           CONFIGURACIÓN DE TOKENS\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @notice Agrega o actualiza un token ERC-20 soportado\r\n    /// @dev Solo `ROLE_ADMIN`\r\n    function setTokenConfig(\r\n        address token,\r\n        bool supported,\r\n        uint8 tokenDecimals,\r\n        uint256 withdrawLimit,\r\n        address priceFeed\r\n    ) external onlyRole(ROLE_ADMIN) {\r\n        if (token == NATIVE_TOKEN) revert UnsupportedToken(token);\r\n\r\n        TokenConfig storage cfg = tokenConfig[token];\r\n        cfg.supported   = supported;\r\n        cfg.isNative    = false;\r\n\r\n        // Si tokenDecimals es 0, intentar leer `decimals()` directamente del token.\r\n        if (tokenDecimals == 0) {\r\n            // `try/catch` evita revertir si el token no implementa `decimals()`.\r\n            try IERC20Metadata(token).decimals() returns (uint8 dec) {\r\n                cfg.tokenDecimals = dec;\r\n            } catch {\r\n                // Si no implementa decimals(), asumir 18 (lo más común).\r\n                cfg.tokenDecimals = 18;\r\n            }\r\n        } else {\r\n            cfg.tokenDecimals = tokenDecimals;\r\n        }\r\n\r\n        cfg.withdrawLimit = withdrawLimit;\r\n        cfg.priceFeed     = priceFeed;\r\n\r\n        emit TokenConfigured(\r\n            token,\r\n            supported,\r\n            false,\r\n            cfg.tokenDecimals,\r\n            withdrawLimit,\r\n            priceFeed\r\n        );\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                               DEPÓSITOS\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @notice Deposita ETH en tu bóveda personal\r\n    /// @dev Suma el valor en USD(6) al total y verifica que no supere el cap global\r\n    function depositEth()\r\n        external\r\n        payable\r\n        nonReentrant\r\n        nonZero(msg.value)\r\n        tokenSupported(NATIVE_TOKEN)\r\n    {\r\n        // Calcular valor en USD(6) y verificar cap\r\n        uint256 usd6 = _toUsd(NATIVE_TOKEN, msg.value);\r\n        uint256 attemptedUsd = totalDepositedUsd6 + usd6;\r\n        if (attemptedUsd > bankCapUsd6) revert CapExceeded(attemptedUsd, bankCapUsd6);\r\n\r\n        // Effects\r\n        balances[NATIVE_TOKEN][msg.sender] += msg.value;\r\n        totalDepositedUsd6 = attemptedUsd;\r\n        unchecked { depositCount++; }\r\n\r\n        // Event\r\n        emit Deposit(NATIVE_TOKEN, msg.sender, msg.value, balances[NATIVE_TOKEN][msg.sender], usd6);\r\n    }\r\n\r\n    /// @notice Deposita un token ERC-20 habilitado\r\n    function depositToken(address token, uint256 amount)\r\n        external\r\n        nonReentrant\r\n        nonZero(amount)\r\n        notNative(token)\r\n        tokenSupported(token)\r\n    {\r\n        // Calcular valor en USD(6) y verificar cap\r\n        uint256 usd6 = _toUsd(token, amount);\r\n        uint256 attemptedUsd = totalDepositedUsd6 + usd6;\r\n        if (attemptedUsd > bankCapUsd6) revert CapExceeded(attemptedUsd, bankCapUsd6);\r\n\r\n        // Effects\r\n        balances[token][msg.sender] += amount;\r\n        totalDepositedUsd6 = attemptedUsd;\r\n        unchecked { depositCount++; }\r\n\r\n        // Interactions (transferencia segura)\r\n        IERC20(token).safeTransferFrom(msg.sender, address(this), amount);\r\n\r\n        // Event\r\n        emit Deposit(token, msg.sender, amount, balances[token][msg.sender], usd6);\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                                RETIROS\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @notice Retira ETH de tu bóveda personal.\r\n    function withdrawEth(uint256 amount)\r\n        external\r\n        nonReentrant\r\n        nonZero(amount)\r\n        tokenSupported(NATIVE_TOKEN)\r\n        underWithdrawLimit(NATIVE_TOKEN, amount)\r\n    {\r\n        uint256 userBal = balances[NATIVE_TOKEN][msg.sender];\r\n        if (userBal < amount) revert InsufficientBalance(userBal, amount);\r\n\r\n        // Effects\r\n        balances[NATIVE_TOKEN][msg.sender] = userBal - amount;\r\n        unchecked { withdrawCount++; }\r\n\r\n        // Interactions (transferencia nativa segura)\r\n        (bool sent, ) = msg.sender.call{value: amount}(\"\");\r\n        if (!sent) revert EthTransferFailed();\r\n\r\n        emit Withdraw(NATIVE_TOKEN, msg.sender, amount, balances[NATIVE_TOKEN][msg.sender], _toUsd(NATIVE_TOKEN, amount));\r\n    }\r\n\r\n    /// @notice Retira un token ERC-20   habilitado\r\n    function withdrawToken(address token, uint256 amount)\r\n        external\r\n        nonReentrant\r\n        nonZero(amount)\r\n        notNative(token)\r\n        tokenSupported(token)\r\n        underWithdrawLimit(token, amount)\r\n    {\r\n        uint256 userBal = balances[token][msg.sender];\r\n        if (userBal < amount) revert InsufficientBalance(userBal, amount);\r\n\r\n        // Effects\r\n        balances[token][msg.sender] = userBal - amount;\r\n        unchecked { withdrawCount++; }\r\n\r\n        // Interactions  (transferencia segura)\r\n        IERC20(token).safeTransfer(msg.sender, amount);\r\n\r\n        emit Withdraw(token, msg.sender, amount, balances[token][msg.sender], _toUsd(token, amount));\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                                  VISTAS\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @notice Devuelve el saldo del remitente para un token (en unidades del token)\r\n    function getBalance(address token) external view returns (uint256) {\r\n        return balances[token][msg.sender];\r\n    }\r\n\r\n    /// @notice Devuelve el saldo de un usuario en USD(6) estimado para un token\r\n    function getUsdBalance(address token, address user) external view returns (uint256) {\r\n        uint256 amt = balances[token][user];\r\n        return _toUsd(token, amt);\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                              FUNCIONES INTERNAS\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @dev Convierte un monto de `token` a USD con 6 decimales usando Chainlink\r\n    function _toUsd(address token, uint256 amount) internal view returns (uint256 usd6) {\r\n        if (amount == 0) return 0;\r\n        TokenConfig memory cfg = tokenConfig[token];\r\n        address feed = cfg.priceFeed;\r\n        if (feed == address(0)) revert PriceFeedNotSet(token);\r\n\r\n        // Obtener precio TOKEN/USD\r\n        (, int256 price,, ,) = AggregatorV3Interface(feed).latestRoundData();\r\n        if (price <= 0) revert PriceNegative();\r\n\r\n        uint8 priceDecimals = AggregatorV3Interface(feed).decimals();\r\n\r\n        // Multiplicar cantidad del token por su precio (ajustado al feed)\r\n        uint256 numerator = amount * uint256(price);\r\n\r\n        // Ajustar por decimales del feed → bajar a enteros\r\n        if (priceDecimals > 0) {\r\n            numerator = numerator / (10 ** priceDecimals);\r\n        }\r\n\r\n        // Ajustar por decimales del token a USD_DECIMALS (6)\r\n        if (cfg.tokenDecimals >= USD_DECIMALS) {\r\n            uint256 factor = 10 ** (cfg.tokenDecimals - USD_DECIMALS);\r\n            usd6 = numerator / factor;\r\n        } else {\r\n            uint256 factor = 10 ** (USD_DECIMALS - cfg.tokenDecimals);\r\n            usd6 = numerator * factor;\r\n        }\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 480,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b141175418ac5c4b276ec6b41361d0eb5836a7eebc1c6d19f00d8517e1050f6664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b141175418ac5c4b276ec6b41361d0eb5836a7eebc1c6d19f00d8517e1050f6664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 COINBASE OR SLOAD XOR 0xAC TLOAD 0x4B 0x27 PUSH15 0xC6B41361D0EB5836A7EEBC1C6D19F0 0xD DUP6 OR 0xE1 SDIV 0xF PUSH7 0x64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "698:9376:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b141175418ac5c4b276ec6b41361d0eb5836a7eebc1c6d19f00d8517e1050f6664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 COINBASE OR SLOAD XOR 0xAC TLOAD 0x4B 0x27 PUSH15 0xC6B41361D0EB5836A7EEBC1C6D19F0 0xD DUP6 OR 0xE1 SDIV 0xF PUSH7 0x64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "698:9376:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b141175418ac5c4b276ec6b41361d0eb5836a7eebc1c6d19f00d8517e1050f6664736f6c634300081a0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/KipuBankV2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/KipuBankV2.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interfaz mínima de Chainlink AggregatorV3 (TOKEN/USD).",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"latestRoundData()": "feaf968c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interfaz m\\u00ednima de Chainlink AggregatorV3 (TOKEN/USD).\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/KipuBankV2.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"src/KipuBankV2.sol\":{\"keccak256\":\"0xc504d808aa6755f48b12588d8dd6dfccd029c09f5463a726ad4f561f9977c548\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21213c02d10ae6c44edbbfdd83700c2050395e2d67f4de2f7e81b51c2535e35f\",\"dweb:/ipfs/QmbSdwYRtCfGJyUXRqKE6JnMuG88seTQZdiegxMxMqQNmE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Extensi\\u00f3n com\\u00fan de metadatos para leer `decimals()` en muchos ERC20.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/KipuBankV2.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"src/KipuBankV2.sol\":{\"keccak256\":\"0xc504d808aa6755f48b12588d8dd6dfccd029c09f5463a726ad4f561f9977c548\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21213c02d10ae6c44edbbfdd83700c2050395e2d67f4de2f7e81b51c2535e35f\",\"dweb:/ipfs/QmbSdwYRtCfGJyUXRqKE6JnMuG88seTQZdiegxMxMqQNmE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Extensión común de metadatos para leer `decimals()` en muchos ERC20.",
						"version": 1
					}
				},
				"KipuBankV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bankCapUsd6",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "ethPriceFeed",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "ethWithdrawLimit",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "attempted",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "CapExceeded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EthTransferFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "PriceFeedNotSet",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PriceNegative",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "UnsupportedToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "attempted",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "limit",
									"type": "uint256"
								}
							],
							"name": "WithdrawLimitExceeded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAmount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBalanceToken",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountUsd6",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "supported",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isNative",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "tokenDecimals",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "withdrawLimit",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "priceFeed",
									"type": "address"
								}
							],
							"name": "TokenConfigured",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBalanceToken",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountUsd6",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NATIVE_TOKEN",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROLE_ADMIN",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USD_DECIMALS",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bankCapUsd6",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositEth",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUsdBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "supported",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "tokenDecimals",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "withdrawLimit",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "priceFeed",
									"type": "address"
								}
							],
							"name": "setTokenConfig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenConfig",
							"outputs": [
								{
									"internalType": "bool",
									"name": "supported",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "isNative",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "tokenDecimals",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "withdrawLimit",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "priceFeed",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalDepositedUsd6",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawEth",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Usa `AccessControl` (roles) + `ReentrancyGuard` + `SafeERC20` + oráculos Chainlink",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_bankCapUsd6": "Cap global del banco en USD con 6 decimales",
									"ethPriceFeed": "Dirección del oráculo Chainlink ETH/USD",
									"ethWithdrawLimit": "Límite por retiro en ETH (en wei)"
								}
							},
							"depositEth()": {
								"details": "Suma el valor en USD(6) al total y verifica que no supere el cap global"
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"setTokenConfig(address,bool,uint8,uint256,address)": {
								"details": "Solo `ROLE_ADMIN`"
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"title": "KipuBankV2 (OpenZeppelin edition)",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/KipuBankV2.sol\":1607:14416  contract KipuBankV2 is AccessControl, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"src/KipuBankV2.sol\":5106:5959  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/KipuBankV2.sol\":5253:5254  0 */\n  0x00\n    /* \"src/KipuBankV2.sol\":5237:5249  _bankCapUsd6 */\n  dup4\n    /* \"src/KipuBankV2.sol\":5237:5254  _bankCapUsd6 == 0 */\n  sub\n    /* \"src/KipuBankV2.sol\":5233:5275  if (_bankCapUsd6 == 0) revert ZeroAmount() */\n  tag_8\n  jumpi\n    /* \"src/KipuBankV2.sol\":5263:5275  ZeroAmount() */\n  mload(0x40)\n  0x1f2a200500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"src/KipuBankV2.sol\":5233:5275  if (_bankCapUsd6 == 0) revert ZeroAmount() */\ntag_8:\n    /* \"src/KipuBankV2.sol\":5304:5316  _bankCapUsd6 */\n  dup3\n    /* \"src/KipuBankV2.sol\":5290:5316  bankCapUsd6 = _bankCapUsd6 */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/KipuBankV2.sol\":5368:5410  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_9\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  0x00\n    /* \"src/KipuBankV2.sol\":5379:5397  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"src/KipuBankV2.sol\":5399:5409  msg.sender */\n  caller\n    /* \"src/KipuBankV2.sol\":5368:5378  _grantRole */\n  shl(0x20, tag_10)\n    /* \"src/KipuBankV2.sol\":5368:5410  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n  pop\n    /* \"src/KipuBankV2.sol\":5481:5515  _grantRole(ROLE_ADMIN, msg.sender) */\n  tag_11\n    /* \"src/KipuBankV2.sol\":1999:2022  keccak256(\"ROLE_ADMIN\") */\n  0x2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096\n    /* \"src/KipuBankV2.sol\":5504:5514  msg.sender */\n  caller\n    /* \"src/KipuBankV2.sol\":5481:5491  _grantRole */\n  shl(0x20, tag_10)\n    /* \"src/KipuBankV2.sol\":5481:5515  _grantRole(ROLE_ADMIN, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n  pop\n    /* \"src/KipuBankV2.sol\":5610:5632  TokenConfig memory cfg */\n  tag_12\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"src/KipuBankV2.sol\":5659:5663  true */\n  0x01\n    /* \"src/KipuBankV2.sol\":5643:5646  cfg */\n  dup2\n    /* \"src/KipuBankV2.sol\":5643:5656  cfg.supported */\n  0x00\n  add\n    /* \"src/KipuBankV2.sol\":5643:5663  cfg.supported = true */\n  swap1\n  iszero\n  iszero\n  swap1\n  dup2\n  iszero\n  iszero\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/KipuBankV2.sol\":5689:5693  true */\n  0x01\n    /* \"src/KipuBankV2.sol\":5674:5677  cfg */\n  dup2\n    /* \"src/KipuBankV2.sol\":5674:5686  cfg.isNative */\n  0x20\n  add\n    /* \"src/KipuBankV2.sol\":5674:5693  cfg.isNative = true */\n  swap1\n  iszero\n  iszero\n  swap1\n  dup2\n  iszero\n  iszero\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/KipuBankV2.sol\":5724:5726  18 */\n  0x12\n    /* \"src/KipuBankV2.sol\":5704:5707  cfg */\n  dup2\n    /* \"src/KipuBankV2.sol\":5704:5721  cfg.tokenDecimals */\n  0x40\n  add\n    /* \"src/KipuBankV2.sol\":5704:5726  cfg.tokenDecimals = 18 */\n  swap1\n  0xff\n  and\n  swap1\n  dup2\n  0xff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/KipuBankV2.sol\":5759:5775  ethWithdrawLimit */\n  dup2\n    /* \"src/KipuBankV2.sol\":5739:5742  cfg */\n  dup2\n    /* \"src/KipuBankV2.sol\":5739:5756  cfg.withdrawLimit */\n  0x60\n  add\n    /* \"src/KipuBankV2.sol\":5739:5775  cfg.withdrawLimit = ethWithdrawLimit */\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/KipuBankV2.sol\":5802:5814  ethPriceFeed */\n  dup3\n    /* \"src/KipuBankV2.sol\":5786:5789  cfg */\n  dup2\n    /* \"src/KipuBankV2.sol\":5786:5799  cfg.priceFeed */\n  0x80\n  add\n    /* \"src/KipuBankV2.sol\":5786:5814  cfg.priceFeed = ethPriceFeed */\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  swap1\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/KipuBankV2.sol\":5853:5856  cfg */\n  dup1\n    /* \"src/KipuBankV2.sol\":5825:5836  tokenConfig */\n  0x06\n    /* \"src/KipuBankV2.sol\":5825:5850  tokenConfig[NATIVE_TOKEN] */\n  0x00\n    /* \"src/KipuBankV2.sol\":2148:2149  0 */\n  dup1\n    /* \"src/KipuBankV2.sol\":5825:5850  tokenConfig[NATIVE_TOKEN] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"src/KipuBankV2.sol\":5825:5856  tokenConfig[NATIVE_TOKEN] = cfg */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x01)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x02)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x60\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  0x80\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  swap1\n  pop\n  pop\n    /* \"src/KipuBankV2.sol\":2148:2149  0 */\n  0x00\n    /* \"src/KipuBankV2.sol\":5874:5951  TokenConfigured(NATIVE_TOKEN, true, true, 18, ethWithdrawLimit, ethPriceFeed) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xceec6d18b470b58eabbfc22b7d771c54609acb2bbe777747424f6e9a5a9d5a25\n    /* \"src/KipuBankV2.sol\":5904:5908  true */\n  0x01\n    /* \"src/KipuBankV2.sol\":5910:5914  true */\n  dup1\n    /* \"src/KipuBankV2.sol\":5916:5918  18 */\n  0x12\n    /* \"src/KipuBankV2.sol\":5920:5936  ethWithdrawLimit */\n  dup7\n    /* \"src/KipuBankV2.sol\":5938:5950  ethPriceFeed */\n  dup9\n    /* \"src/KipuBankV2.sol\":5874:5951  TokenConfigured(NATIVE_TOKEN, true, true, 18, ethWithdrawLimit, ethPriceFeed) */\n  mload(0x40)\n  tag_14\n  swap6\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"src/KipuBankV2.sol\":5222:5959  {... */\n  pop\n    /* \"src/KipuBankV2.sol\":5106:5959  constructor(... */\n  pop\n  pop\n  pop\n    /* \"src/KipuBankV2.sol\":1607:14416  contract KipuBankV2 is AccessControl, ReentrancyGuard {... */\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  tag_18\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n  shl(0x20, tag_19)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n  tag_20\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  tag_21\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n  shl(0x20, tag_22)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n  swap1\n  pop\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\ntag_20:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_17:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_22:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"src/KipuBankV2.sol\":1607:14416  contract KipuBankV2 is AccessControl, ReentrancyGuard {... */\ntag_13:\n  mload(0x40)\n  dup1\n  0xa0\n  add\n  0x40\n  mstore\n  dup1\n  iszero(iszero(0x00))\n  dup2\n  mstore\n  0x20\n  add\n  iszero(iszero(0x00))\n  dup2\n  mstore\n  0x20\n  add\n  and(0xff, 0x00)\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  dup2\n  mstore\n  0x20\n  add\n  and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n  dup2\n  mstore\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_27:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_29:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_30:\n    /* \"#utility.yul\":490:514   */\n  tag_51\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_29\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_52:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_31:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_54\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_30\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_32:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:922   */\ntag_33:\n    /* \"#utility.yul\":863:870   */\n  0x00\n    /* \"#utility.yul\":892:916   */\n  tag_57\n    /* \"#utility.yul\":910:915   */\n  dup3\n    /* \"#utility.yul\":892:916   */\n  tag_32\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":881:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_34:\n    /* \"#utility.yul\":1001:1025   */\n  tag_59\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_33\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_60:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_35:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_62\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_34\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  dup1\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_65\n  tag_27\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1326:1445   */\ntag_64:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_66\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_31\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_67\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_35\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_68\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_31\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1874:1964   */\ntag_36:\n    /* \"#utility.yul\":1908:1915   */\n  0x00\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1957   */\n  iszero\n    /* \"#utility.yul\":1937:1958   */\n  iszero\n    /* \"#utility.yul\":1926:1958   */\n  swap1\n  pop\n    /* \"#utility.yul\":1874:1964   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1970:2079   */\ntag_37:\n    /* \"#utility.yul\":2051:2072   */\n  tag_71\n    /* \"#utility.yul\":2066:2071   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  tag_36\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2046:2049   */\n  dup3\n    /* \"#utility.yul\":2039:2073   */\n  mstore\n    /* \"#utility.yul\":1970:2079   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2085:2171   */\ntag_38:\n    /* \"#utility.yul\":2131:2138   */\n  0x00\n    /* \"#utility.yul\":2160:2165   */\n  dup2\n    /* \"#utility.yul\":2149:2165   */\n  swap1\n  pop\n    /* \"#utility.yul\":2085:2171   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2177:2263   */\ntag_39:\n    /* \"#utility.yul\":2212:2219   */\n  0x00\n    /* \"#utility.yul\":2252:2256   */\n  0xff\n    /* \"#utility.yul\":2245:2250   */\n  dup3\n    /* \"#utility.yul\":2241:2257   */\n  and\n    /* \"#utility.yul\":2230:2257   */\n  swap1\n  pop\n    /* \"#utility.yul\":2177:2263   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2269:2329   */\ntag_40:\n    /* \"#utility.yul\":2297:2300   */\n  0x00\n    /* \"#utility.yul\":2318:2323   */\n  dup2\n    /* \"#utility.yul\":2311:2323   */\n  swap1\n  pop\n    /* \"#utility.yul\":2269:2329   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2335:2491   */\ntag_41:\n    /* \"#utility.yul\":2392:2401   */\n  0x00\n    /* \"#utility.yul\":2425:2485   */\n  tag_76\n    /* \"#utility.yul\":2441:2484   */\n  tag_77\n    /* \"#utility.yul\":2450:2483   */\n  tag_78\n    /* \"#utility.yul\":2477:2482   */\n  dup5\n    /* \"#utility.yul\":2450:2483   */\n  tag_38\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2441:2484   */\n  tag_40\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2425:2485   */\n  tag_39\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2412:2485   */\n  swap1\n  pop\n    /* \"#utility.yul\":2335:2491   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2497:2642   */\ntag_42:\n    /* \"#utility.yul\":2591:2635   */\n  tag_80\n    /* \"#utility.yul\":2629:2634   */\n  dup2\n    /* \"#utility.yul\":2591:2635   */\n  tag_41\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2586:2589   */\n  dup3\n    /* \"#utility.yul\":2579:2636   */\n  mstore\n    /* \"#utility.yul\":2497:2642   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2648:2766   */\ntag_43:\n    /* \"#utility.yul\":2735:2759   */\n  tag_82\n    /* \"#utility.yul\":2753:2758   */\n  dup2\n    /* \"#utility.yul\":2735:2759   */\n  tag_29\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2730:2733   */\n  dup3\n    /* \"#utility.yul\":2723:2760   */\n  mstore\n    /* \"#utility.yul\":2648:2766   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2772:2890   */\ntag_44:\n    /* \"#utility.yul\":2859:2883   */\n  tag_84\n    /* \"#utility.yul\":2877:2882   */\n  dup2\n    /* \"#utility.yul\":2859:2883   */\n  tag_33\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2854:2857   */\n  dup3\n    /* \"#utility.yul\":2847:2884   */\n  mstore\n    /* \"#utility.yul\":2772:2890   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2896:3550   */\ntag_15:\n    /* \"#utility.yul\":3096:3100   */\n  0x00\n    /* \"#utility.yul\":3134:3137   */\n  0xa0\n    /* \"#utility.yul\":3123:3132   */\n  dup3\n    /* \"#utility.yul\":3119:3138   */\n  add\n    /* \"#utility.yul\":3111:3138   */\n  swap1\n  pop\n    /* \"#utility.yul\":3148:3213   */\n  tag_86\n    /* \"#utility.yul\":3210:3211   */\n  0x00\n    /* \"#utility.yul\":3199:3208   */\n  dup4\n    /* \"#utility.yul\":3195:3212   */\n  add\n    /* \"#utility.yul\":3186:3192   */\n  dup9\n    /* \"#utility.yul\":3148:3213   */\n  tag_37\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3223:3289   */\n  tag_87\n    /* \"#utility.yul\":3285:3287   */\n  0x20\n    /* \"#utility.yul\":3274:3283   */\n  dup4\n    /* \"#utility.yul\":3270:3288   */\n  add\n    /* \"#utility.yul\":3261:3267   */\n  dup8\n    /* \"#utility.yul\":3223:3289   */\n  tag_37\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3299:3378   */\n  tag_88\n    /* \"#utility.yul\":3374:3376   */\n  0x40\n    /* \"#utility.yul\":3363:3372   */\n  dup4\n    /* \"#utility.yul\":3359:3377   */\n  add\n    /* \"#utility.yul\":3350:3356   */\n  dup7\n    /* \"#utility.yul\":3299:3378   */\n  tag_42\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3388:3460   */\n  tag_89\n    /* \"#utility.yul\":3456:3458   */\n  0x60\n    /* \"#utility.yul\":3445:3454   */\n  dup4\n    /* \"#utility.yul\":3441:3459   */\n  add\n    /* \"#utility.yul\":3432:3438   */\n  dup6\n    /* \"#utility.yul\":3388:3460   */\n  tag_43\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3470:3543   */\n  tag_90\n    /* \"#utility.yul\":3538:3541   */\n  0x80\n    /* \"#utility.yul\":3527:3536   */\n  dup4\n    /* \"#utility.yul\":3523:3542   */\n  add\n    /* \"#utility.yul\":3514:3520   */\n  dup5\n    /* \"#utility.yul\":3470:3543   */\n  tag_44\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":2896:3550   */\n  swap7\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"src/KipuBankV2.sol\":1607:14416  contract KipuBankV2 is AccessControl, ReentrancyGuard {... */\ntag_16:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x3fd68d21223d6fc23edec694e1b0dd90d283ae600f00f762095afcbb0d71f155\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/KipuBankV2.sol\":1607:14416  contract KipuBankV2 is AccessControl, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x91d14854\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xd391014b\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xd391014b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdcb6e250\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf8b2cb4f\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf9bda21f\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xfe136c4e\n      eq\n      tag_23\n      jumpi\n      jump(tag_1)\n    tag_25:\n      dup1\n      0x91d14854\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9c50adee\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9e281a98\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc311d049\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_24:\n      dup1\n      0x2f6ee695\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x2f6ee695\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x31f7d964\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x338b5dea\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x439370b1\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4cc05a71\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_26:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x29608ba6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2dfdf0b5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":2641:2674  uint256 public totalDepositedUsd6 */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":2726:2753  uint256 public depositCount */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"src/KipuBankV2.sol\":2228:2266  uint8 public constant USD_DECIMALS = 6 */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":2101:2150  address public constant NATIVE_TOKEN = address(0) */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":9693:10512  function depositToken(address token, uint256 amount)... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      stop\n        /* \"src/KipuBankV2.sol\":8932:9632  function depositEth()... */\n    tag_11:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      stop\n        /* \"src/KipuBankV2.sol\":2760:2788  uint256 public withdrawCount */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":7364:8600  function setTokenConfig(... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n    tag_86:\n      stop\n        /* \"src/KipuBankV2.sol\":11576:12272  function withdrawToken(address token, uint256 amount)... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":10755:11515  function withdrawEth(uint256 amount)... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n    tag_99:\n      stop\n        /* \"src/KipuBankV2.sol\":1962:2022  bytes32 public constant ROLE_ADMIN = keccak256(\"ROLE_ADMIN\") */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      stop\n        /* \"src/KipuBankV2.sol\":12761:12935  function getUsdBalance(address token, address user) external view returns (uint256) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      tag_115\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":12551:12671  function getBalance(address token) external view returns (uint256) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      tag_121\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":2530:2566  uint256 public immutable bankCapUsd6 */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/KipuBankV2.sol\":3010:3060  mapping(address => TokenConfig) public tokenConfig */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_131\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2626:2630  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2664:2696  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2660  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_134\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      tag_135\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2735  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2723  super.supportsInterface */\n      tag_136\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_134:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2736  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3884:3888  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3870:3899  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":2641:2674  uint256 public totalDepositedUsd6 */\n    tag_43:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":2726:2753  uint256 public depositCount */\n    tag_48:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      tag_138\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4289:4293  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4288  getRoleAdmin */\n      tag_38\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_140\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_141\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_143\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4317:4321  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4323:4330  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4316  _grantRole */\n      tag_144\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      jump\t// in\n    tag_143:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":2228:2266  uint8 public constant USD_DECIMALS = 6 */\n    tag_57:\n        /* \"src/KipuBankV2.sol\":2265:2266  6 */\n      0x06\n        /* \"src/KipuBankV2.sol\":2228:2266  uint8 public constant USD_DECIMALS = 6 */\n      dup2\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":2101:2150  address public constant NATIVE_TOKEN = address(0) */\n    tag_62:\n        /* \"src/KipuBankV2.sol\":2148:2149  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":2101:2150  address public constant NATIVE_TOKEN = address(0) */\n      dup2\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":9693:10512  function depositToken(address token, uint256 amount)... */\n    tag_69:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_146\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_147\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_146:\n        /* \"src/KipuBankV2.sol\":9803:9809  amount */\n      dup1\n        /* \"src/KipuBankV2.sol\":6279:6280  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":6269:6275  amount */\n      dup2\n        /* \"src/KipuBankV2.sol\":6269:6280  amount == 0 */\n      sub\n        /* \"src/KipuBankV2.sol\":6265:6301  if (amount == 0) revert ZeroAmount() */\n      tag_149\n      jumpi\n        /* \"src/KipuBankV2.sol\":6289:6301  ZeroAmount() */\n      mload(0x40)\n      0x1f2a200500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":6265:6301  if (amount == 0) revert ZeroAmount() */\n    tag_149:\n        /* \"src/KipuBankV2.sol\":9830:9835  token */\n      dup3\n        /* \"src/KipuBankV2.sol\":2148:2149  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":6669:6690  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":6669:6674  token */\n      dup2\n        /* \"src/KipuBankV2.sol\":6669:6690  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/KipuBankV2.sol\":6665:6722  if (token == NATIVE_TOKEN) revert UnsupportedToken(token) */\n      tag_151\n      jumpi\n        /* \"src/KipuBankV2.sol\":6716:6721  token */\n      dup1\n        /* \"src/KipuBankV2.sol\":6699:6722  UnsupportedToken(token) */\n      mload(0x40)\n      0xbf16aab600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":6665:6722  if (token == NATIVE_TOKEN) revert UnsupportedToken(token) */\n    tag_151:\n        /* \"src/KipuBankV2.sol\":9861:9866  token */\n      dup4\n        /* \"src/KipuBankV2.sol\":6449:6460  tokenConfig */\n      0x06\n        /* \"src/KipuBankV2.sol\":6449:6467  tokenConfig[token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":6461:6466  token */\n      dup3\n        /* \"src/KipuBankV2.sol\":6449:6467  tokenConfig[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":6449:6477  tokenConfig[token].supported */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/KipuBankV2.sol\":6444:6509  if (!tokenConfig[token].supported) revert UnsupportedToken(token) */\n      tag_154\n      jumpi\n        /* \"src/KipuBankV2.sol\":6503:6508  token */\n      dup1\n        /* \"src/KipuBankV2.sol\":6486:6509  UnsupportedToken(token) */\n      mload(0x40)\n      0xbf16aab600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":6444:6509  if (!tokenConfig[token].supported) revert UnsupportedToken(token) */\n    tag_154:\n        /* \"src/KipuBankV2.sol\":9937:9949  uint256 usd6 */\n      0x00\n        /* \"src/KipuBankV2.sol\":9952:9973  _toUsd(token, amount) */\n      tag_157\n        /* \"src/KipuBankV2.sol\":9959:9964  token */\n      dup7\n        /* \"src/KipuBankV2.sol\":9966:9972  amount */\n      dup7\n        /* \"src/KipuBankV2.sol\":9952:9958  _toUsd */\n      tag_158\n        /* \"src/KipuBankV2.sol\":9952:9973  _toUsd(token, amount) */\n      jump\t// in\n    tag_157:\n        /* \"src/KipuBankV2.sol\":9937:9973  uint256 usd6 = _toUsd(token, amount) */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":9984:10004  uint256 attemptedUsd */\n      0x00\n        /* \"src/KipuBankV2.sol\":10028:10032  usd6 */\n      dup2\n        /* \"src/KipuBankV2.sol\":10007:10025  totalDepositedUsd6 */\n      sload(0x02)\n        /* \"src/KipuBankV2.sol\":10007:10032  totalDepositedUsd6 + usd6 */\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"src/KipuBankV2.sol\":9984:10032  uint256 attemptedUsd = totalDepositedUsd6 + usd6 */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":10062:10073  bankCapUsd6 */\n      immutable(\"0x3fd68d21223d6fc23edec694e1b0dd90d283ae600f00f762095afcbb0d71f155\")\n        /* \"src/KipuBankV2.sol\":10047:10059  attemptedUsd */\n      dup2\n        /* \"src/KipuBankV2.sol\":10047:10073  attemptedUsd > bankCapUsd6 */\n      gt\n        /* \"src/KipuBankV2.sol\":10043:10120  if (attemptedUsd > bankCapUsd6) revert CapExceeded(attemptedUsd, bankCapUsd6) */\n      iszero\n      tag_161\n      jumpi\n        /* \"src/KipuBankV2.sol\":10094:10106  attemptedUsd */\n      dup1\n        /* \"src/KipuBankV2.sol\":10108:10119  bankCapUsd6 */\n      immutable(\"0x3fd68d21223d6fc23edec694e1b0dd90d283ae600f00f762095afcbb0d71f155\")\n        /* \"src/KipuBankV2.sol\":10082:10120  CapExceeded(attemptedUsd, bankCapUsd6) */\n      mload(0x40)\n      0xf480e28500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap3\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":10043:10120  if (attemptedUsd > bankCapUsd6) revert CapExceeded(attemptedUsd, bankCapUsd6) */\n    tag_161:\n        /* \"src/KipuBankV2.sol\":10184:10190  amount */\n      dup6\n        /* \"src/KipuBankV2.sol\":10153:10161  balances */\n      0x05\n        /* \"src/KipuBankV2.sol\":10153:10168  balances[token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":10162:10167  token */\n      dup10\n        /* \"src/KipuBankV2.sol\":10153:10168  balances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":10153:10180  balances[token][msg.sender] */\n      0x00\n        /* \"src/KipuBankV2.sol\":10169:10179  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":10153:10180  balances[token][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/KipuBankV2.sol\":10153:10190  balances[token][msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_164\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_164:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":10222:10234  attemptedUsd */\n      dup1\n        /* \"src/KipuBankV2.sol\":10201:10219  totalDepositedUsd6 */\n      0x02\n        /* \"src/KipuBankV2.sol\":10201:10234  totalDepositedUsd6 = attemptedUsd */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":10257:10269  depositCount */\n      0x03\n      0x00\n        /* \"src/KipuBankV2.sol\":10257:10271  depositCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":10334:10399  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      tag_165\n        /* \"src/KipuBankV2.sol\":10365:10375  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":10385:10389  this */\n      address\n        /* \"src/KipuBankV2.sol\":10392:10398  amount */\n      dup9\n        /* \"src/KipuBankV2.sol\":10341:10346  token */\n      dup11\n        /* \"src/KipuBankV2.sol\":10334:10364  IERC20(token).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_166\n      swap1\n        /* \"src/KipuBankV2.sol\":10334:10399  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_165:\n        /* \"src/KipuBankV2.sol\":10450:10460  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":10435:10504  Deposit(token, msg.sender, amount, balances[token][msg.sender], usd6) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":10443:10448  token */\n      dup8\n        /* \"src/KipuBankV2.sol\":10435:10504  Deposit(token, msg.sender, amount, balances[token][msg.sender], usd6) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4e2ca0515ed1aef1395f66b5303bb5d6f1bf9d61a353fa53f73f8ac9973fa9f6\n        /* \"src/KipuBankV2.sol\":10462:10468  amount */\n      dup9\n        /* \"src/KipuBankV2.sol\":10470:10478  balances */\n      0x05\n        /* \"src/KipuBankV2.sol\":10470:10485  balances[token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":10479:10484  token */\n      dup13\n        /* \"src/KipuBankV2.sol\":10470:10485  balances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":10470:10497  balances[token][msg.sender] */\n      0x00\n        /* \"src/KipuBankV2.sol\":10486:10496  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":10470:10497  balances[token][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/KipuBankV2.sol\":10499:10503  usd6 */\n      dup7\n        /* \"src/KipuBankV2.sol\":10435:10504  Deposit(token, msg.sender, amount, balances[token][msg.sender], usd6) */\n      mload(0x40)\n      tag_167\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/KipuBankV2.sol\":9873:10512  {... */\n      pop\n      pop\n        /* \"src/KipuBankV2.sol\":6733:6734  _ */\n      pop\n        /* \"src/KipuBankV2.sol\":6312:6313  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_169\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_170\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_169:\n        /* \"src/KipuBankV2.sol\":9693:10512  function depositToken(address token, uint256 amount)... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      tag_172\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5429  _msgSender */\n      tag_173\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5415  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n      tag_174\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_175\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5517:5521  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5523:5541  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5516  _revokeRole */\n      tag_176\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_175:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":8932:9632  function depositEth()... */\n    tag_75:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_178\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_147\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_178:\n        /* \"src/KipuBankV2.sol\":9028:9037  msg.value */\n      callvalue\n        /* \"src/KipuBankV2.sol\":6279:6280  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":6269:6275  amount */\n      dup2\n        /* \"src/KipuBankV2.sol\":6269:6280  amount == 0 */\n      sub\n        /* \"src/KipuBankV2.sol\":6265:6301  if (amount == 0) revert ZeroAmount() */\n      tag_180\n      jumpi\n        /* \"src/KipuBankV2.sol\":6289:6301  ZeroAmount() */\n      mload(0x40)\n      0x1f2a200500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":6265:6301  if (amount == 0) revert ZeroAmount() */\n    tag_180:\n        /* \"src/KipuBankV2.sol\":2148:2149  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":6449:6460  tokenConfig */\n      0x06\n        /* \"src/KipuBankV2.sol\":6449:6467  tokenConfig[token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":6461:6466  token */\n      dup3\n        /* \"src/KipuBankV2.sol\":6449:6467  tokenConfig[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":6449:6477  tokenConfig[token].supported */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/KipuBankV2.sol\":6444:6509  if (!tokenConfig[token].supported) revert UnsupportedToken(token) */\n      tag_182\n      jumpi\n        /* \"src/KipuBankV2.sol\":6503:6508  token */\n      dup1\n        /* \"src/KipuBankV2.sol\":6486:6509  UnsupportedToken(token) */\n      mload(0x40)\n      0xbf16aab600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":6444:6509  if (!tokenConfig[token].supported) revert UnsupportedToken(token) */\n    tag_182:\n        /* \"src/KipuBankV2.sol\":9146:9158  uint256 usd6 */\n      0x00\n        /* \"src/KipuBankV2.sol\":9161:9192  _toUsd(NATIVE_TOKEN, msg.value) */\n      tag_185\n        /* \"src/KipuBankV2.sol\":2148:2149  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":9182:9191  msg.value */\n      callvalue\n        /* \"src/KipuBankV2.sol\":9161:9167  _toUsd */\n      tag_158\n        /* \"src/KipuBankV2.sol\":9161:9192  _toUsd(NATIVE_TOKEN, msg.value) */\n      jump\t// in\n    tag_185:\n        /* \"src/KipuBankV2.sol\":9146:9192  uint256 usd6 = _toUsd(NATIVE_TOKEN, msg.value) */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":9203:9223  uint256 attemptedUsd */\n      0x00\n        /* \"src/KipuBankV2.sol\":9247:9251  usd6 */\n      dup2\n        /* \"src/KipuBankV2.sol\":9226:9244  totalDepositedUsd6 */\n      sload(0x02)\n        /* \"src/KipuBankV2.sol\":9226:9251  totalDepositedUsd6 + usd6 */\n      tag_186\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_186:\n        /* \"src/KipuBankV2.sol\":9203:9251  uint256 attemptedUsd = totalDepositedUsd6 + usd6 */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":9281:9292  bankCapUsd6 */\n      immutable(\"0x3fd68d21223d6fc23edec694e1b0dd90d283ae600f00f762095afcbb0d71f155\")\n        /* \"src/KipuBankV2.sol\":9266:9278  attemptedUsd */\n      dup2\n        /* \"src/KipuBankV2.sol\":9266:9292  attemptedUsd > bankCapUsd6 */\n      gt\n        /* \"src/KipuBankV2.sol\":9262:9339  if (attemptedUsd > bankCapUsd6) revert CapExceeded(attemptedUsd, bankCapUsd6) */\n      iszero\n      tag_187\n      jumpi\n        /* \"src/KipuBankV2.sol\":9313:9325  attemptedUsd */\n      dup1\n        /* \"src/KipuBankV2.sol\":9327:9338  bankCapUsd6 */\n      immutable(\"0x3fd68d21223d6fc23edec694e1b0dd90d283ae600f00f762095afcbb0d71f155\")\n        /* \"src/KipuBankV2.sol\":9301:9339  CapExceeded(attemptedUsd, bankCapUsd6) */\n      mload(0x40)\n      0xf480e28500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap3\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":9262:9339  if (attemptedUsd > bankCapUsd6) revert CapExceeded(attemptedUsd, bankCapUsd6) */\n    tag_187:\n        /* \"src/KipuBankV2.sol\":9410:9419  msg.value */\n      callvalue\n        /* \"src/KipuBankV2.sol\":9372:9380  balances */\n      0x05\n        /* \"src/KipuBankV2.sol\":9372:9394  balances[NATIVE_TOKEN] */\n      0x00\n        /* \"src/KipuBankV2.sol\":2148:2149  0 */\n      dup1\n        /* \"src/KipuBankV2.sol\":9372:9394  balances[NATIVE_TOKEN] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":9372:9406  balances[NATIVE_TOKEN][msg.sender] */\n      0x00\n        /* \"src/KipuBankV2.sol\":9395:9405  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":9372:9406  balances[NATIVE_TOKEN][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/KipuBankV2.sol\":9372:9419  balances[NATIVE_TOKEN][msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_189\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_189:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":9451:9463  attemptedUsd */\n      dup1\n        /* \"src/KipuBankV2.sol\":9430:9448  totalDepositedUsd6 */\n      0x02\n        /* \"src/KipuBankV2.sol\":9430:9463  totalDepositedUsd6 = attemptedUsd */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":9486:9498  depositCount */\n      0x03\n      0x00\n        /* \"src/KipuBankV2.sol\":9486:9500  depositCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":9560:9570  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":9538:9624  Deposit(NATIVE_TOKEN, msg.sender, msg.value, balances[NATIVE_TOKEN][msg.sender], usd6) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":2148:2149  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":9538:9624  Deposit(NATIVE_TOKEN, msg.sender, msg.value, balances[NATIVE_TOKEN][msg.sender], usd6) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4e2ca0515ed1aef1395f66b5303bb5d6f1bf9d61a353fa53f73f8ac9973fa9f6\n        /* \"src/KipuBankV2.sol\":9572:9581  msg.value */\n      callvalue\n        /* \"src/KipuBankV2.sol\":9583:9591  balances */\n      0x05\n        /* \"src/KipuBankV2.sol\":9583:9605  balances[NATIVE_TOKEN] */\n      0x00\n        /* \"src/KipuBankV2.sol\":2148:2149  0 */\n      dup1\n        /* \"src/KipuBankV2.sol\":9583:9605  balances[NATIVE_TOKEN] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":9583:9617  balances[NATIVE_TOKEN][msg.sender] */\n      0x00\n        /* \"src/KipuBankV2.sol\":9606:9616  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":9583:9617  balances[NATIVE_TOKEN][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/KipuBankV2.sol\":9619:9623  usd6 */\n      dup7\n        /* \"src/KipuBankV2.sol\":9538:9624  Deposit(NATIVE_TOKEN, msg.sender, msg.value, balances[NATIVE_TOKEN][msg.sender], usd6) */\n      mload(0x40)\n      tag_190\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/KipuBankV2.sol\":9082:9632  {... */\n      pop\n      pop\n        /* \"src/KipuBankV2.sol\":6312:6313  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_191\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_170\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_191:\n        /* \"src/KipuBankV2.sol\":8932:9632  function depositEth()... */\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":2760:2788  uint256 public withdrawCount */\n    tag_78:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":7364:8600  function setTokenConfig(... */\n    tag_89:\n        /* \"src/KipuBankV2.sol\":1999:2022  keccak256(\"ROLE_ADMIN\") */\n      0x2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_194\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_141\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_194:\n        /* \"src/KipuBankV2.sol\":2148:2149  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":7579:7600  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":7579:7584  token */\n      dup7\n        /* \"src/KipuBankV2.sol\":7579:7600  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/KipuBankV2.sol\":7575:7632  if (token == NATIVE_TOKEN) revert UnsupportedToken(token) */\n      tag_196\n      jumpi\n        /* \"src/KipuBankV2.sol\":7626:7631  token */\n      dup6\n        /* \"src/KipuBankV2.sol\":7609:7632  UnsupportedToken(token) */\n      mload(0x40)\n      0xbf16aab600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":7575:7632  if (token == NATIVE_TOKEN) revert UnsupportedToken(token) */\n    tag_196:\n        /* \"src/KipuBankV2.sol\":7645:7668  TokenConfig storage cfg */\n      0x00\n        /* \"src/KipuBankV2.sol\":7671:7682  tokenConfig */\n      0x06\n        /* \"src/KipuBankV2.sol\":7671:7689  tokenConfig[token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":7683:7688  token */\n      dup9\n        /* \"src/KipuBankV2.sol\":7671:7689  tokenConfig[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":7645:7689  TokenConfig storage cfg = tokenConfig[token] */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":7718:7727  supported */\n      dup6\n        /* \"src/KipuBankV2.sol\":7700:7703  cfg */\n      dup2\n        /* \"src/KipuBankV2.sol\":7700:7713  cfg.supported */\n      0x00\n      add\n      0x00\n        /* \"src/KipuBankV2.sol\":7700:7727  cfg.supported   = supported */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":7756:7761  false */\n      0x00\n        /* \"src/KipuBankV2.sol\":7738:7741  cfg */\n      dup2\n        /* \"src/KipuBankV2.sol\":7738:7750  cfg.isNative */\n      0x00\n      add\n      0x01\n        /* \"src/KipuBankV2.sol\":7738:7761  cfg.isNative    = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":7881:7882  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":7864:7877  tokenDecimals */\n      dup6\n        /* \"src/KipuBankV2.sol\":7864:7882  tokenDecimals == 0 */\n      0xff\n      and\n      sub\n        /* \"src/KipuBankV2.sol\":7860:8315  if (tokenDecimals == 0) {... */\n      tag_198\n      jumpi\n        /* \"src/KipuBankV2.sol\":8001:8006  token */\n      dup7\n        /* \"src/KipuBankV2.sol\":7986:8016  IERC20Metadata(token).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"src/KipuBankV2.sol\":7986:8018  IERC20Metadata(token).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_199\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      0x01\n    tag_199:\n        /* \"src/KipuBankV2.sol\":7982:8238  try IERC20Metadata(token).decimals() returns (uint8 dec) {... */\n      tag_202\n      jumpi\n        /* \"src/KipuBankV2.sol\":8220:8222  18 */\n      0x12\n        /* \"src/KipuBankV2.sol\":8200:8203  cfg */\n      dup2\n        /* \"src/KipuBankV2.sol\":8200:8217  cfg.tokenDecimals */\n      0x00\n      add\n      0x02\n        /* \"src/KipuBankV2.sol\":8200:8222  cfg.tokenDecimals = 18 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":7982:8238  try IERC20Metadata(token).decimals() returns (uint8 dec) {... */\n      jump(tag_206)\n    tag_202:\n        /* \"src/KipuBankV2.sol\":8078:8081  dec */\n      dup1\n        /* \"src/KipuBankV2.sol\":8058:8061  cfg */\n      dup3\n        /* \"src/KipuBankV2.sol\":8058:8075  cfg.tokenDecimals */\n      0x00\n      add\n      0x02\n        /* \"src/KipuBankV2.sol\":8058:8081  cfg.tokenDecimals = dec */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":8019:8097  returns (uint8 dec) {... */\n      pop\n        /* \"src/KipuBankV2.sol\":7982:8238  try IERC20Metadata(token).decimals() returns (uint8 dec) {... */\n    tag_206:\n        /* \"src/KipuBankV2.sol\":7860:8315  if (tokenDecimals == 0) {... */\n      jump(tag_207)\n    tag_198:\n        /* \"src/KipuBankV2.sol\":8290:8303  tokenDecimals */\n      dup5\n        /* \"src/KipuBankV2.sol\":8270:8273  cfg */\n      dup2\n        /* \"src/KipuBankV2.sol\":8270:8287  cfg.tokenDecimals */\n      0x00\n      add\n      0x02\n        /* \"src/KipuBankV2.sol\":8270:8303  cfg.tokenDecimals = tokenDecimals */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":7860:8315  if (tokenDecimals == 0) {... */\n    tag_207:\n        /* \"src/KipuBankV2.sol\":8347:8360  withdrawLimit */\n      dup4\n        /* \"src/KipuBankV2.sol\":8327:8330  cfg */\n      dup2\n        /* \"src/KipuBankV2.sol\":8327:8344  cfg.withdrawLimit */\n      0x01\n      add\n        /* \"src/KipuBankV2.sol\":8327:8360  cfg.withdrawLimit = withdrawLimit */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":8391:8400  priceFeed */\n      dup3\n        /* \"src/KipuBankV2.sol\":8371:8374  cfg */\n      dup2\n        /* \"src/KipuBankV2.sol\":8371:8384  cfg.priceFeed */\n      0x02\n      add\n      0x00\n        /* \"src/KipuBankV2.sol\":8371:8400  cfg.priceFeed     = priceFeed */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":8448:8453  token */\n      dup7\n        /* \"src/KipuBankV2.sol\":8418:8592  TokenConfigured(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xceec6d18b470b58eabbfc22b7d771c54609acb2bbe777747424f6e9a5a9d5a25\n        /* \"src/KipuBankV2.sol\":8468:8477  supported */\n      dup8\n        /* \"src/KipuBankV2.sol\":8492:8497  false */\n      0x00\n        /* \"src/KipuBankV2.sol\":8512:8515  cfg */\n      dup5\n        /* \"src/KipuBankV2.sol\":8512:8529  cfg.tokenDecimals */\n      0x00\n      add\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/KipuBankV2.sol\":8544:8557  withdrawLimit */\n      dup9\n        /* \"src/KipuBankV2.sol\":8572:8581  priceFeed */\n      dup9\n        /* \"src/KipuBankV2.sol\":8418:8592  TokenConfigured(... */\n      mload(0x40)\n      tag_208\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/KipuBankV2.sol\":7564:8600  {... */\n      pop\n        /* \"src/KipuBankV2.sol\":7364:8600  function setTokenConfig(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":11576:12272  function withdrawToken(address token, uint256 amount)... */\n    tag_93:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_210\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_147\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_210:\n        /* \"src/KipuBankV2.sol\":11687:11693  amount */\n      dup1\n        /* \"src/KipuBankV2.sol\":6279:6280  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":6269:6275  amount */\n      dup2\n        /* \"src/KipuBankV2.sol\":6269:6280  amount == 0 */\n      sub\n        /* \"src/KipuBankV2.sol\":6265:6301  if (amount == 0) revert ZeroAmount() */\n      tag_212\n      jumpi\n        /* \"src/KipuBankV2.sol\":6289:6301  ZeroAmount() */\n      mload(0x40)\n      0x1f2a200500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":6265:6301  if (amount == 0) revert ZeroAmount() */\n    tag_212:\n        /* \"src/KipuBankV2.sol\":11714:11719  token */\n      dup3\n        /* \"src/KipuBankV2.sol\":2148:2149  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":6669:6690  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":6669:6674  token */\n      dup2\n        /* \"src/KipuBankV2.sol\":6669:6690  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/KipuBankV2.sol\":6665:6722  if (token == NATIVE_TOKEN) revert UnsupportedToken(token) */\n      tag_214\n      jumpi\n        /* \"src/KipuBankV2.sol\":6716:6721  token */\n      dup1\n        /* \"src/KipuBankV2.sol\":6699:6722  UnsupportedToken(token) */\n      mload(0x40)\n      0xbf16aab600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":6665:6722  if (token == NATIVE_TOKEN) revert UnsupportedToken(token) */\n    tag_214:\n        /* \"src/KipuBankV2.sol\":11745:11750  token */\n      dup4\n        /* \"src/KipuBankV2.sol\":6449:6460  tokenConfig */\n      0x06\n        /* \"src/KipuBankV2.sol\":6449:6467  tokenConfig[token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":6461:6466  token */\n      dup3\n        /* \"src/KipuBankV2.sol\":6449:6467  tokenConfig[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":6449:6477  tokenConfig[token].supported */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/KipuBankV2.sol\":6444:6509  if (!tokenConfig[token].supported) revert UnsupportedToken(token) */\n      tag_217\n      jumpi\n        /* \"src/KipuBankV2.sol\":6503:6508  token */\n      dup1\n        /* \"src/KipuBankV2.sol\":6486:6509  UnsupportedToken(token) */\n      mload(0x40)\n      0xbf16aab600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":6444:6509  if (!tokenConfig[token].supported) revert UnsupportedToken(token) */\n    tag_217:\n        /* \"src/KipuBankV2.sol\":11780:11785  token */\n      dup5\n        /* \"src/KipuBankV2.sol\":11787:11793  amount */\n      dup5\n        /* \"src/KipuBankV2.sol\":6906:6928  TokenConfig memory cfg */\n      0x00\n        /* \"src/KipuBankV2.sol\":6931:6942  tokenConfig */\n      0x06\n        /* \"src/KipuBankV2.sol\":6931:6949  tokenConfig[token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":6943:6948  token */\n      dup5\n        /* \"src/KipuBankV2.sol\":6931:6949  tokenConfig[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":6906:6949  TokenConfig memory cfg = tokenConfig[token] */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":6973:6976  cfg */\n      dup1\n        /* \"src/KipuBankV2.sol\":6973:6990  cfg.withdrawLimit */\n      0x60\n      add\n      mload\n        /* \"src/KipuBankV2.sol\":6964:6970  amount */\n      dup3\n        /* \"src/KipuBankV2.sol\":6964:6990  amount > cfg.withdrawLimit */\n      gt\n        /* \"src/KipuBankV2.sol\":6960:7047  if (amount > cfg.withdrawLimit) revert WithdrawLimitExceeded(amount, cfg.withdrawLimit) */\n      iszero\n      tag_220\n      jumpi\n        /* \"src/KipuBankV2.sol\":7021:7027  amount */\n      dup2\n        /* \"src/KipuBankV2.sol\":7029:7032  cfg */\n      dup2\n        /* \"src/KipuBankV2.sol\":7029:7046  cfg.withdrawLimit */\n      0x60\n      add\n      mload\n        /* \"src/KipuBankV2.sol\":6999:7047  WithdrawLimitExceeded(amount, cfg.withdrawLimit) */\n      mload(0x40)\n      0x016d0ef100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap3\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":6960:7047  if (amount > cfg.withdrawLimit) revert WithdrawLimitExceeded(amount, cfg.withdrawLimit) */\n    tag_220:\n        /* \"src/KipuBankV2.sol\":11811:11826  uint256 userBal */\n      0x00\n        /* \"src/KipuBankV2.sol\":11829:11837  balances */\n      0x05\n        /* \"src/KipuBankV2.sol\":11829:11844  balances[token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":11838:11843  token */\n      dup11\n        /* \"src/KipuBankV2.sol\":11829:11844  balances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":11829:11856  balances[token][msg.sender] */\n      0x00\n        /* \"src/KipuBankV2.sol\":11845:11855  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":11829:11856  balances[token][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/KipuBankV2.sol\":11811:11856  uint256 userBal = balances[token][msg.sender] */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":11881:11887  amount */\n      dup8\n        /* \"src/KipuBankV2.sol\":11871:11878  userBal */\n      dup2\n        /* \"src/KipuBankV2.sol\":11871:11887  userBal < amount */\n      lt\n        /* \"src/KipuBankV2.sol\":11867:11932  if (userBal < amount) revert InsufficientBalance(userBal, amount) */\n      iszero\n      tag_223\n      jumpi\n        /* \"src/KipuBankV2.sol\":11916:11923  userBal */\n      dup1\n        /* \"src/KipuBankV2.sol\":11925:11931  amount */\n      dup9\n        /* \"src/KipuBankV2.sol\":11896:11932  InsufficientBalance(userBal, amount) */\n      mload(0x40)\n      0xcf47918100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap3\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":11867:11932  if (userBal < amount) revert InsufficientBalance(userBal, amount) */\n    tag_223:\n        /* \"src/KipuBankV2.sol\":12005:12011  amount */\n      dup8\n        /* \"src/KipuBankV2.sol\":11995:12002  userBal */\n      dup2\n        /* \"src/KipuBankV2.sol\":11995:12011  userBal - amount */\n      tag_225\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n        /* \"src/KipuBankV2.sol\":11965:11973  balances */\n      0x05\n        /* \"src/KipuBankV2.sol\":11965:11980  balances[token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":11974:11979  token */\n      dup12\n        /* \"src/KipuBankV2.sol\":11965:11980  balances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":11965:11992  balances[token][msg.sender] */\n      0x00\n        /* \"src/KipuBankV2.sol\":11981:11991  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":11965:11992  balances[token][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":11965:12011  balances[token][msg.sender] = userBal - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":12034:12047  withdrawCount */\n      0x04\n      0x00\n        /* \"src/KipuBankV2.sol\":12034:12049  withdrawCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":12113:12159  IERC20(token).safeTransfer(msg.sender, amount) */\n      tag_227\n        /* \"src/KipuBankV2.sol\":12140:12150  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":12152:12158  amount */\n      dup10\n        /* \"src/KipuBankV2.sol\":12120:12125  token */\n      dup12\n        /* \"src/KipuBankV2.sol\":12113:12139  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_228\n      swap1\n        /* \"src/KipuBankV2.sol\":12113:12159  IERC20(token).safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_227:\n        /* \"src/KipuBankV2.sol\":12193:12203  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":12177:12264  Withdraw(token, msg.sender, amount, balances[token][msg.sender], _toUsd(token, amount)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":12186:12191  token */\n      dup10\n        /* \"src/KipuBankV2.sol\":12177:12264  Withdraw(token, msg.sender, amount, balances[token][msg.sender], _toUsd(token, amount)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xebff2602b3f468259e1e99f613fed6691f3a6526effe6ef3e768ba7ae7a36c4f\n        /* \"src/KipuBankV2.sol\":12205:12211  amount */\n      dup11\n        /* \"src/KipuBankV2.sol\":12213:12221  balances */\n      0x05\n        /* \"src/KipuBankV2.sol\":12213:12228  balances[token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":12222:12227  token */\n      dup15\n        /* \"src/KipuBankV2.sol\":12213:12228  balances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":12213:12240  balances[token][msg.sender] */\n      0x00\n        /* \"src/KipuBankV2.sol\":12229:12239  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":12213:12240  balances[token][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/KipuBankV2.sol\":12242:12263  _toUsd(token, amount) */\n      tag_229\n        /* \"src/KipuBankV2.sol\":12249:12254  token */\n      dup15\n        /* \"src/KipuBankV2.sol\":12256:12262  amount */\n      dup15\n        /* \"src/KipuBankV2.sol\":12242:12248  _toUsd */\n      tag_158\n        /* \"src/KipuBankV2.sol\":12242:12263  _toUsd(token, amount) */\n      jump\t// in\n    tag_229:\n        /* \"src/KipuBankV2.sol\":12177:12264  Withdraw(token, msg.sender, amount, balances[token][msg.sender], _toUsd(token, amount)) */\n      mload(0x40)\n      tag_230\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/KipuBankV2.sol\":11800:12272  {... */\n      pop\n        /* \"src/KipuBankV2.sol\":6895:7067  {... */\n      pop\n        /* \"src/KipuBankV2.sol\":6520:6521  _ */\n      pop\n      pop\n        /* \"src/KipuBankV2.sol\":6733:6734  _ */\n      pop\n        /* \"src/KipuBankV2.sol\":6312:6313  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_231\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_170\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_231:\n        /* \"src/KipuBankV2.sol\":11576:12272  function withdrawToken(address token, uint256 amount)... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":10755:11515  function withdrawEth(uint256 amount)... */\n    tag_102:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_233\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_147\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_233:\n        /* \"src/KipuBankV2.sol\":10849:10855  amount */\n      dup1\n        /* \"src/KipuBankV2.sol\":6279:6280  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":6269:6275  amount */\n      dup2\n        /* \"src/KipuBankV2.sol\":6269:6280  amount == 0 */\n      sub\n        /* \"src/KipuBankV2.sol\":6265:6301  if (amount == 0) revert ZeroAmount() */\n      tag_235\n      jumpi\n        /* \"src/KipuBankV2.sol\":6289:6301  ZeroAmount() */\n      mload(0x40)\n      0x1f2a200500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":6265:6301  if (amount == 0) revert ZeroAmount() */\n    tag_235:\n        /* \"src/KipuBankV2.sol\":2148:2149  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":6449:6460  tokenConfig */\n      0x06\n        /* \"src/KipuBankV2.sol\":6449:6467  tokenConfig[token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":6461:6466  token */\n      dup3\n        /* \"src/KipuBankV2.sol\":6449:6467  tokenConfig[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":6449:6477  tokenConfig[token].supported */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/KipuBankV2.sol\":6444:6509  if (!tokenConfig[token].supported) revert UnsupportedToken(token) */\n      tag_237\n      jumpi\n        /* \"src/KipuBankV2.sol\":6503:6508  token */\n      dup1\n        /* \"src/KipuBankV2.sol\":6486:6509  UnsupportedToken(token) */\n      mload(0x40)\n      0xbf16aab600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":6444:6509  if (!tokenConfig[token].supported) revert UnsupportedToken(token) */\n    tag_237:\n        /* \"src/KipuBankV2.sol\":2148:2149  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":10937:10943  amount */\n      dup4\n        /* \"src/KipuBankV2.sol\":6906:6928  TokenConfig memory cfg */\n      0x00\n        /* \"src/KipuBankV2.sol\":6931:6942  tokenConfig */\n      0x06\n        /* \"src/KipuBankV2.sol\":6931:6949  tokenConfig[token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":6943:6948  token */\n      dup5\n        /* \"src/KipuBankV2.sol\":6931:6949  tokenConfig[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":6906:6949  TokenConfig memory cfg = tokenConfig[token] */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":6973:6976  cfg */\n      dup1\n        /* \"src/KipuBankV2.sol\":6973:6990  cfg.withdrawLimit */\n      0x60\n      add\n      mload\n        /* \"src/KipuBankV2.sol\":6964:6970  amount */\n      dup3\n        /* \"src/KipuBankV2.sol\":6964:6990  amount > cfg.withdrawLimit */\n      gt\n        /* \"src/KipuBankV2.sol\":6960:7047  if (amount > cfg.withdrawLimit) revert WithdrawLimitExceeded(amount, cfg.withdrawLimit) */\n      iszero\n      tag_240\n      jumpi\n        /* \"src/KipuBankV2.sol\":7021:7027  amount */\n      dup2\n        /* \"src/KipuBankV2.sol\":7029:7032  cfg */\n      dup2\n        /* \"src/KipuBankV2.sol\":7029:7046  cfg.withdrawLimit */\n      0x60\n      add\n      mload\n        /* \"src/KipuBankV2.sol\":6999:7047  WithdrawLimitExceeded(amount, cfg.withdrawLimit) */\n      mload(0x40)\n      0x016d0ef100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap3\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":6960:7047  if (amount > cfg.withdrawLimit) revert WithdrawLimitExceeded(amount, cfg.withdrawLimit) */\n    tag_240:\n        /* \"src/KipuBankV2.sol\":10961:10976  uint256 userBal */\n      0x00\n        /* \"src/KipuBankV2.sol\":10979:10987  balances */\n      0x05\n        /* \"src/KipuBankV2.sol\":10979:11001  balances[NATIVE_TOKEN] */\n      0x00\n        /* \"src/KipuBankV2.sol\":2148:2149  0 */\n      dup1\n        /* \"src/KipuBankV2.sol\":10979:11001  balances[NATIVE_TOKEN] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":10979:11013  balances[NATIVE_TOKEN][msg.sender] */\n      0x00\n        /* \"src/KipuBankV2.sol\":11002:11012  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":10979:11013  balances[NATIVE_TOKEN][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/KipuBankV2.sol\":10961:11013  uint256 userBal = balances[NATIVE_TOKEN][msg.sender] */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":11038:11044  amount */\n      dup7\n        /* \"src/KipuBankV2.sol\":11028:11035  userBal */\n      dup2\n        /* \"src/KipuBankV2.sol\":11028:11044  userBal < amount */\n      lt\n        /* \"src/KipuBankV2.sol\":11024:11089  if (userBal < amount) revert InsufficientBalance(userBal, amount) */\n      iszero\n      tag_243\n      jumpi\n        /* \"src/KipuBankV2.sol\":11073:11080  userBal */\n      dup1\n        /* \"src/KipuBankV2.sol\":11082:11088  amount */\n      dup8\n        /* \"src/KipuBankV2.sol\":11053:11089  InsufficientBalance(userBal, amount) */\n      mload(0x40)\n      0xcf47918100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap3\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":11024:11089  if (userBal < amount) revert InsufficientBalance(userBal, amount) */\n    tag_243:\n        /* \"src/KipuBankV2.sol\":11169:11175  amount */\n      dup7\n        /* \"src/KipuBankV2.sol\":11159:11166  userBal */\n      dup2\n        /* \"src/KipuBankV2.sol\":11159:11175  userBal - amount */\n      tag_245\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_245:\n        /* \"src/KipuBankV2.sol\":11122:11130  balances */\n      0x05\n        /* \"src/KipuBankV2.sol\":11122:11144  balances[NATIVE_TOKEN] */\n      0x00\n        /* \"src/KipuBankV2.sol\":2148:2149  0 */\n      dup1\n        /* \"src/KipuBankV2.sol\":11122:11144  balances[NATIVE_TOKEN] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":11122:11156  balances[NATIVE_TOKEN][msg.sender] */\n      0x00\n        /* \"src/KipuBankV2.sol\":11145:11155  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":11122:11156  balances[NATIVE_TOKEN][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":11122:11175  balances[NATIVE_TOKEN][msg.sender] = userBal - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":11198:11211  withdrawCount */\n      0x04\n      0x00\n        /* \"src/KipuBankV2.sol\":11198:11213  withdrawCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"src/KipuBankV2.sol\":11284:11293  bool sent */\n      0x00\n        /* \"src/KipuBankV2.sol\":11299:11309  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":11299:11314  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":11322:11328  amount */\n      dup9\n        /* \"src/KipuBankV2.sol\":11299:11333  msg.sender.call{value: amount}(\"\") */\n      mload(0x40)\n      tag_246\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_250\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_249)\n    tag_250:\n      0x60\n      swap2\n      pop\n    tag_249:\n      pop\n        /* \"src/KipuBankV2.sol\":11283:11333  (bool sent, ) = msg.sender.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":11349:11353  sent */\n      dup1\n        /* \"src/KipuBankV2.sol\":11344:11381  if (!sent) revert EthTransferFailed() */\n      tag_251\n      jumpi\n        /* \"src/KipuBankV2.sol\":11362:11381  EthTransferFailed() */\n      mload(0x40)\n      0x6d963f8800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":11344:11381  if (!sent) revert EthTransferFailed() */\n    tag_251:\n        /* \"src/KipuBankV2.sol\":11422:11432  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":11399:11507  Withdraw(NATIVE_TOKEN, msg.sender, amount, balances[NATIVE_TOKEN][msg.sender], _toUsd(NATIVE_TOKEN, amount)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":2148:2149  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":11399:11507  Withdraw(NATIVE_TOKEN, msg.sender, amount, balances[NATIVE_TOKEN][msg.sender], _toUsd(NATIVE_TOKEN, amount)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xebff2602b3f468259e1e99f613fed6691f3a6526effe6ef3e768ba7ae7a36c4f\n        /* \"src/KipuBankV2.sol\":11434:11440  amount */\n      dup11\n        /* \"src/KipuBankV2.sol\":11442:11450  balances */\n      0x05\n        /* \"src/KipuBankV2.sol\":11442:11464  balances[NATIVE_TOKEN] */\n      0x00\n        /* \"src/KipuBankV2.sol\":2148:2149  0 */\n      dup1\n        /* \"src/KipuBankV2.sol\":11442:11464  balances[NATIVE_TOKEN] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":11442:11476  balances[NATIVE_TOKEN][msg.sender] */\n      0x00\n        /* \"src/KipuBankV2.sol\":11465:11475  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":11442:11476  balances[NATIVE_TOKEN][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/KipuBankV2.sol\":11478:11506  _toUsd(NATIVE_TOKEN, amount) */\n      tag_252\n        /* \"src/KipuBankV2.sol\":2148:2149  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":11499:11505  amount */\n      dup15\n        /* \"src/KipuBankV2.sol\":11478:11484  _toUsd */\n      tag_158\n        /* \"src/KipuBankV2.sol\":11478:11506  _toUsd(NATIVE_TOKEN, amount) */\n      jump\t// in\n    tag_252:\n        /* \"src/KipuBankV2.sol\":11399:11507  Withdraw(NATIVE_TOKEN, msg.sender, amount, balances[NATIVE_TOKEN][msg.sender], _toUsd(NATIVE_TOKEN, amount)) */\n      mload(0x40)\n      tag_253\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/KipuBankV2.sol\":10950:11515  {... */\n      pop\n      pop\n        /* \"src/KipuBankV2.sol\":6895:7067  {... */\n      pop\n        /* \"src/KipuBankV2.sol\":6520:6521  _ */\n      pop\n      pop\n        /* \"src/KipuBankV2.sol\":6312:6313  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_254\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_170\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_254:\n        /* \"src/KipuBankV2.sol\":10755:11515  function withdrawEth(uint256 amount)... */\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":1962:2022  bytes32 public constant ROLE_ADMIN = keccak256(\"ROLE_ADMIN\") */\n    tag_105:\n        /* \"src/KipuBankV2.sol\":1999:2022  keccak256(\"ROLE_ADMIN\") */\n      0x2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096\n        /* \"src/KipuBankV2.sol\":1962:2022  bytes32 public constant ROLE_ADMIN = keccak256(\"ROLE_ADMIN\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      tag_255\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4706:4710  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4705  getRoleAdmin */\n      tag_38\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_257\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_141\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_259\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4735:4739  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4741:4748  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4734  _revokeRole */\n      tag_176\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      jump\t// in\n    tag_259:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":12761:12935  function getUsdBalance(address token, address user) external view returns (uint256) {... */\n    tag_115:\n        /* \"src/KipuBankV2.sol\":12836:12843  uint256 */\n      0x00\n        /* \"src/KipuBankV2.sol\":12856:12867  uint256 amt */\n      dup1\n        /* \"src/KipuBankV2.sol\":12870:12878  balances */\n      0x05\n        /* \"src/KipuBankV2.sol\":12870:12885  balances[token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":12879:12884  token */\n      dup6\n        /* \"src/KipuBankV2.sol\":12870:12885  balances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":12870:12891  balances[token][user] */\n      0x00\n        /* \"src/KipuBankV2.sol\":12886:12890  user */\n      dup5\n        /* \"src/KipuBankV2.sol\":12870:12891  balances[token][user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/KipuBankV2.sol\":12856:12891  uint256 amt = balances[token][user] */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":12909:12927  _toUsd(token, amt) */\n      tag_261\n        /* \"src/KipuBankV2.sol\":12916:12921  token */\n      dup5\n        /* \"src/KipuBankV2.sol\":12923:12926  amt */\n      dup3\n        /* \"src/KipuBankV2.sol\":12909:12915  _toUsd */\n      tag_158\n        /* \"src/KipuBankV2.sol\":12909:12927  _toUsd(token, amt) */\n      jump\t// in\n    tag_261:\n        /* \"src/KipuBankV2.sol\":12902:12927  return _toUsd(token, amt) */\n      swap2\n      pop\n      pop\n        /* \"src/KipuBankV2.sol\":12761:12935  function getUsdBalance(address token, address user) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":12551:12671  function getBalance(address token) external view returns (uint256) {... */\n    tag_121:\n        /* \"src/KipuBankV2.sol\":12609:12616  uint256 */\n      0x00\n        /* \"src/KipuBankV2.sol\":12636:12644  balances */\n      0x05\n        /* \"src/KipuBankV2.sol\":12636:12651  balances[token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":12645:12650  token */\n      dup4\n        /* \"src/KipuBankV2.sol\":12636:12651  balances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":12636:12663  balances[token][msg.sender] */\n      0x00\n        /* \"src/KipuBankV2.sol\":12652:12662  msg.sender */\n      caller\n        /* \"src/KipuBankV2.sol\":12636:12663  balances[token][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/KipuBankV2.sol\":12629:12663  return balances[token][msg.sender] */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":12551:12671  function getBalance(address token) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":2530:2566  uint256 public immutable bankCapUsd6 */\n    tag_125:\n      immutable(\"0x3fd68d21223d6fc23edec694e1b0dd90d283ae600f00f762095afcbb0d71f155\")\n      dup2\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":3010:3060  mapping(address => TokenConfig) public tokenConfig */\n    tag_130:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":806:810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":844:869  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:840  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":822:869  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      tag_265\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3252:3256  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      tag_266\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3268  _msgSender */\n      tag_173\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3251  _checkRole */\n      tag_267\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      tag_269\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n      tag_83\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      tag_271\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n      tag_173\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n      swap1\n      pop\n      jump(tag_268)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_268:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_274:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"src/KipuBankV2.sol\":13218:14413  function _toUsd(address token, uint256 amount) internal view returns (uint256 usd6) {... */\n    tag_158:\n        /* \"src/KipuBankV2.sol\":13288:13300  uint256 usd6 */\n      0x00\n        /* \"src/KipuBankV2.sol\":13327:13328  0 */\n      dup1\n        /* \"src/KipuBankV2.sol\":13317:13323  amount */\n      dup3\n        /* \"src/KipuBankV2.sol\":13317:13328  amount == 0 */\n      sub\n        /* \"src/KipuBankV2.sol\":13313:13338  if (amount == 0) return 0 */\n      tag_278\n      jumpi\n        /* \"src/KipuBankV2.sol\":13337:13338  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":13330:13338  return 0 */\n      swap1\n      pop\n      jump(tag_277)\n        /* \"src/KipuBankV2.sol\":13313:13338  if (amount == 0) return 0 */\n    tag_278:\n        /* \"src/KipuBankV2.sol\":13349:13371  TokenConfig memory cfg */\n      0x00\n        /* \"src/KipuBankV2.sol\":13374:13385  tokenConfig */\n      0x06\n        /* \"src/KipuBankV2.sol\":13374:13392  tokenConfig[token] */\n      0x00\n        /* \"src/KipuBankV2.sol\":13386:13391  token */\n      dup6\n        /* \"src/KipuBankV2.sol\":13374:13392  tokenConfig[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/KipuBankV2.sol\":13349:13392  TokenConfig memory cfg = tokenConfig[token] */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":13403:13415  address feed */\n      0x00\n        /* \"src/KipuBankV2.sol\":13418:13421  cfg */\n      dup2\n        /* \"src/KipuBankV2.sol\":13418:13431  cfg.priceFeed */\n      0x80\n      add\n      mload\n        /* \"src/KipuBankV2.sol\":13403:13431  address feed = cfg.priceFeed */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":13462:13463  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":13446:13464  feed == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/KipuBankV2.sol\":13446:13450  feed */\n      dup2\n        /* \"src/KipuBankV2.sol\":13446:13464  feed == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/KipuBankV2.sol\":13442:13495  if (feed == address(0)) revert PriceFeedNotSet(token) */\n      tag_279\n      jumpi\n        /* \"src/KipuBankV2.sol\":13489:13494  token */\n      dup5\n        /* \"src/KipuBankV2.sol\":13473:13495  PriceFeedNotSet(token) */\n      mload(0x40)\n      0x8a7a791d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":13442:13495  if (feed == address(0)) revert PriceFeedNotSet(token) */\n    tag_279:\n        /* \"src/KipuBankV2.sol\":13548:13560  int256 price */\n      0x00\n        /* \"src/KipuBankV2.sol\":13590:13594  feed */\n      dup2\n        /* \"src/KipuBankV2.sol\":13568:13611  AggregatorV3Interface(feed).latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"src/KipuBankV2.sol\":13568:13613  AggregatorV3Interface(feed).latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_282\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_282:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_283\n      swap2\n      swap1\n      tag_284\n      jump\t// in\n    tag_283:\n        /* \"src/KipuBankV2.sol\":13545:13613  (, int256 price,, ,) = AggregatorV3Interface(feed).latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"src/KipuBankV2.sol\":13637:13638  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":13628:13633  price */\n      dup2\n        /* \"src/KipuBankV2.sol\":13628:13638  price <= 0 */\n      sgt\n        /* \"src/KipuBankV2.sol\":13624:13662  if (price <= 0) revert PriceNegative() */\n      tag_285\n      jumpi\n        /* \"src/KipuBankV2.sol\":13647:13662  PriceNegative() */\n      mload(0x40)\n      0x4fd58d4b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/KipuBankV2.sol\":13624:13662  if (price <= 0) revert PriceNegative() */\n    tag_285:\n        /* \"src/KipuBankV2.sol\":13675:13694  uint8 priceDecimals */\n      0x00\n        /* \"src/KipuBankV2.sol\":13719:13723  feed */\n      dup3\n        /* \"src/KipuBankV2.sol\":13697:13733  AggregatorV3Interface(feed).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"src/KipuBankV2.sol\":13697:13735  AggregatorV3Interface(feed).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_287\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_287:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_288\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_288:\n        /* \"src/KipuBankV2.sol\":13675:13735  uint8 priceDecimals = AggregatorV3Interface(feed).decimals() */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":13824:13841  uint256 numerator */\n      0x00\n        /* \"src/KipuBankV2.sol\":13861:13866  price */\n      dup3\n        /* \"src/KipuBankV2.sol\":13844:13850  amount */\n      dup8\n        /* \"src/KipuBankV2.sol\":13844:13867  amount * uint256(price) */\n      tag_289\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n        /* \"src/KipuBankV2.sol\":13824:13867  uint256 numerator = amount * uint256(price) */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":13963:13964  0 */\n      0x00\n        /* \"src/KipuBankV2.sol\":13947:13960  priceDecimals */\n      dup3\n        /* \"src/KipuBankV2.sol\":13947:13964  priceDecimals > 0 */\n      0xff\n      and\n      gt\n        /* \"src/KipuBankV2.sol\":13943:14038  if (priceDecimals > 0) {... */\n      iszero\n      tag_291\n      jumpi\n        /* \"src/KipuBankV2.sol\":14012:14025  priceDecimals */\n      dup2\n        /* \"src/KipuBankV2.sol\":14006:14008  10 */\n      0x0a\n        /* \"src/KipuBankV2.sol\":14006:14025  10 ** priceDecimals */\n      tag_292\n      swap2\n      swap1\n      tag_293\n      jump\t// in\n    tag_292:\n        /* \"src/KipuBankV2.sol\":13993:14002  numerator */\n      dup2\n        /* \"src/KipuBankV2.sol\":13993:14026  numerator / (10 ** priceDecimals) */\n      tag_294\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"src/KipuBankV2.sol\":13981:14026  numerator = numerator / (10 ** priceDecimals) */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":13943:14038  if (priceDecimals > 0) {... */\n    tag_291:\n        /* \"src/KipuBankV2.sol\":2265:2266  6 */\n      0x06\n        /* \"src/KipuBankV2.sol\":14117:14150  cfg.tokenDecimals >= USD_DECIMALS */\n      0xff\n      and\n        /* \"src/KipuBankV2.sol\":14117:14120  cfg */\n      dup6\n        /* \"src/KipuBankV2.sol\":14117:14134  cfg.tokenDecimals */\n      0x40\n      add\n      mload\n        /* \"src/KipuBankV2.sol\":14117:14150  cfg.tokenDecimals >= USD_DECIMALS */\n      0xff\n      and\n      lt\n        /* \"src/KipuBankV2.sol\":14113:14406  if (cfg.tokenDecimals >= USD_DECIMALS) {... */\n      tag_296\n      jumpi\n        /* \"src/KipuBankV2.sol\":14167:14181  uint256 factor */\n      0x00\n        /* \"src/KipuBankV2.sol\":2265:2266  6 */\n      0x06\n        /* \"src/KipuBankV2.sol\":14191:14194  cfg */\n      dup7\n        /* \"src/KipuBankV2.sol\":14191:14208  cfg.tokenDecimals */\n      0x40\n      add\n      mload\n        /* \"src/KipuBankV2.sol\":14191:14223  cfg.tokenDecimals - USD_DECIMALS */\n      tag_297\n      swap2\n      swap1\n      tag_298\n      jump\t// in\n    tag_297:\n        /* \"src/KipuBankV2.sol\":14184:14186  10 */\n      0x0a\n        /* \"src/KipuBankV2.sol\":14184:14224  10 ** (cfg.tokenDecimals - USD_DECIMALS) */\n      tag_299\n      swap2\n      swap1\n      tag_293\n      jump\t// in\n    tag_299:\n        /* \"src/KipuBankV2.sol\":14167:14224  uint256 factor = 10 ** (cfg.tokenDecimals - USD_DECIMALS) */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":14258:14264  factor */\n      dup1\n        /* \"src/KipuBankV2.sol\":14246:14255  numerator */\n      dup3\n        /* \"src/KipuBankV2.sol\":14246:14264  numerator / factor */\n      tag_300\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_300:\n        /* \"src/KipuBankV2.sol\":14239:14264  usd6 = numerator / factor */\n      swap7\n      pop\n        /* \"src/KipuBankV2.sol\":14152:14276  {... */\n      pop\n        /* \"src/KipuBankV2.sol\":14113:14406  if (cfg.tokenDecimals >= USD_DECIMALS) {... */\n      jump(tag_301)\n    tag_296:\n        /* \"src/KipuBankV2.sol\":14297:14311  uint256 factor */\n      0x00\n        /* \"src/KipuBankV2.sol\":14336:14339  cfg */\n      dup6\n        /* \"src/KipuBankV2.sol\":14336:14353  cfg.tokenDecimals */\n      0x40\n      add\n      mload\n        /* \"src/KipuBankV2.sol\":2265:2266  6 */\n      0x06\n        /* \"src/KipuBankV2.sol\":14321:14353  USD_DECIMALS - cfg.tokenDecimals */\n      tag_302\n      swap2\n      swap1\n      tag_298\n      jump\t// in\n    tag_302:\n        /* \"src/KipuBankV2.sol\":14314:14316  10 */\n      0x0a\n        /* \"src/KipuBankV2.sol\":14314:14354  10 ** (USD_DECIMALS - cfg.tokenDecimals) */\n      tag_303\n      swap2\n      swap1\n      tag_293\n      jump\t// in\n    tag_303:\n        /* \"src/KipuBankV2.sol\":14297:14354  uint256 factor = 10 ** (USD_DECIMALS - cfg.tokenDecimals) */\n      swap1\n      pop\n        /* \"src/KipuBankV2.sol\":14388:14394  factor */\n      dup1\n        /* \"src/KipuBankV2.sol\":14376:14385  numerator */\n      dup3\n        /* \"src/KipuBankV2.sol\":14376:14394  numerator * factor */\n      tag_304\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_304:\n        /* \"src/KipuBankV2.sol\":14369:14394  usd6 = numerator * factor */\n      swap7\n      pop\n        /* \"src/KipuBankV2.sol\":14282:14406  {... */\n      pop\n        /* \"src/KipuBankV2.sol\":14113:14406  if (cfg.tokenDecimals >= USD_DECIMALS) {... */\n    tag_301:\n        /* \"src/KipuBankV2.sol\":13302:14413  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/KipuBankV2.sol\":13218:14413  function _toUsd(address token, uint256 amount) internal view returns (uint256 usd6) {... */\n    tag_277:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_306\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_307\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_308\n      jump\t// in\n    tag_307:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_309\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6786:6790  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      tag_313\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6814:6818  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6820:6827  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6813  hasRole */\n      tag_83\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n      iszero\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6876:6881  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6850  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6851:6855  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6864  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6865:6872  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6881  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      tag_315\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6937  _msgSender */\n      tag_173\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6918:6925  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6912:6916  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6961:6965  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6954:6965  return true */\n      swap1\n      pop\n      jump(tag_312)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n    tag_314:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7003:7008  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6996:7008  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_312:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_318\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_319\n      swap3\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_309\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      tag_322\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3504:3508  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3510:3517  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3503  hasRole */\n      tag_83\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_323\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3574:3581  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3583:3587  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap3\n      swap2\n      swap1\n      tag_325\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_323:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_327\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_328\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_329)\n    tag_328:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_329:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_331\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_333:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_335:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_336:\n        /* \"#utility.yul\":561:584   */\n      tag_384\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_335\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_385\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_385:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_337:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_387\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_336\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_30:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_390\n      tag_333\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":833:952   */\n    tag_389:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_391\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_337\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_338:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_339:\n        /* \"#utility.yul\":1268:1289   */\n      tag_394\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_338\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_33:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_396\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_339\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_340:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_341:\n        /* \"#utility.yul\":1674:1698   */\n      tag_399\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_340\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_400\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_400:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_342:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_402\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_341\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_37:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_405\n      tag_333\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":1950:2069   */\n    tag_404:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_406\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_342\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2327   */\n    tag_343:\n        /* \"#utility.yul\":2296:2320   */\n      tag_408\n        /* \"#utility.yul\":2314:2319   */\n      dup2\n        /* \"#utility.yul\":2296:2320   */\n      tag_340\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":2291:2294   */\n      dup3\n        /* \"#utility.yul\":2284:2321   */\n      mstore\n        /* \"#utility.yul\":2209:2327   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2333:2555   */\n    tag_40:\n        /* \"#utility.yul\":2426:2430   */\n      0x00\n        /* \"#utility.yul\":2464:2466   */\n      0x20\n        /* \"#utility.yul\":2453:2462   */\n      dup3\n        /* \"#utility.yul\":2449:2467   */\n      add\n        /* \"#utility.yul\":2441:2467   */\n      swap1\n      pop\n        /* \"#utility.yul\":2477:2548   */\n      tag_410\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2534:2543   */\n      dup4\n        /* \"#utility.yul\":2530:2547   */\n      add\n        /* \"#utility.yul\":2521:2527   */\n      dup5\n        /* \"#utility.yul\":2477:2548   */\n      tag_343\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":2333:2555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2638   */\n    tag_344:\n        /* \"#utility.yul\":2598:2605   */\n      0x00\n        /* \"#utility.yul\":2627:2632   */\n      dup2\n        /* \"#utility.yul\":2616:2632   */\n      swap1\n      pop\n        /* \"#utility.yul\":2561:2638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2644:2762   */\n    tag_345:\n        /* \"#utility.yul\":2731:2755   */\n      tag_413\n        /* \"#utility.yul\":2749:2754   */\n      dup2\n        /* \"#utility.yul\":2731:2755   */\n      tag_344\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":2726:2729   */\n      dup3\n        /* \"#utility.yul\":2719:2756   */\n      mstore\n        /* \"#utility.yul\":2644:2762   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2768:2990   */\n    tag_45:\n        /* \"#utility.yul\":2861:2865   */\n      0x00\n        /* \"#utility.yul\":2899:2901   */\n      0x20\n        /* \"#utility.yul\":2888:2897   */\n      dup3\n        /* \"#utility.yul\":2884:2902   */\n      add\n        /* \"#utility.yul\":2876:2902   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:2983   */\n      tag_415\n        /* \"#utility.yul\":2980:2981   */\n      0x00\n        /* \"#utility.yul\":2969:2978   */\n      dup4\n        /* \"#utility.yul\":2965:2982   */\n      add\n        /* \"#utility.yul\":2956:2962   */\n      dup5\n        /* \"#utility.yul\":2912:2983   */\n      tag_345\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":2768:2990   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2996:3122   */\n    tag_346:\n        /* \"#utility.yul\":3033:3040   */\n      0x00\n        /* \"#utility.yul\":3073:3115   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3066:3071   */\n      dup3\n        /* \"#utility.yul\":3062:3116   */\n      and\n        /* \"#utility.yul\":3051:3116   */\n      swap1\n      pop\n        /* \"#utility.yul\":2996:3122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3128:3224   */\n    tag_347:\n        /* \"#utility.yul\":3165:3172   */\n      0x00\n        /* \"#utility.yul\":3194:3218   */\n      tag_418\n        /* \"#utility.yul\":3212:3217   */\n      dup3\n        /* \"#utility.yul\":3194:3218   */\n      tag_346\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":3183:3218   */\n      swap1\n      pop\n        /* \"#utility.yul\":3128:3224   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3352   */\n    tag_348:\n        /* \"#utility.yul\":3303:3327   */\n      tag_420\n        /* \"#utility.yul\":3321:3326   */\n      dup2\n        /* \"#utility.yul\":3303:3327   */\n      tag_347\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":3296:3301   */\n      dup2\n        /* \"#utility.yul\":3293:3328   */\n      eq\n        /* \"#utility.yul\":3283:3346   */\n      tag_421\n      jumpi\n        /* \"#utility.yul\":3342:3343   */\n      0x00\n        /* \"#utility.yul\":3339:3340   */\n      dup1\n        /* \"#utility.yul\":3332:3344   */\n      revert\n        /* \"#utility.yul\":3283:3346   */\n    tag_421:\n        /* \"#utility.yul\":3230:3352   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3358:3497   */\n    tag_349:\n        /* \"#utility.yul\":3404:3409   */\n      0x00\n        /* \"#utility.yul\":3442:3448   */\n      dup2\n        /* \"#utility.yul\":3429:3449   */\n      calldataload\n        /* \"#utility.yul\":3420:3449   */\n      swap1\n      pop\n        /* \"#utility.yul\":3458:3491   */\n      tag_423\n        /* \"#utility.yul\":3485:3490   */\n      dup2\n        /* \"#utility.yul\":3458:3491   */\n      tag_348\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":3358:3497   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3503:3977   */\n    tag_53:\n        /* \"#utility.yul\":3571:3577   */\n      0x00\n        /* \"#utility.yul\":3579:3585   */\n      dup1\n        /* \"#utility.yul\":3628:3630   */\n      0x40\n        /* \"#utility.yul\":3616:3625   */\n      dup4\n        /* \"#utility.yul\":3607:3614   */\n      dup6\n        /* \"#utility.yul\":3603:3626   */\n      sub\n        /* \"#utility.yul\":3599:3631   */\n      slt\n        /* \"#utility.yul\":3596:3715   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":3634:3713   */\n      tag_426\n      tag_333\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":3596:3715   */\n    tag_425:\n        /* \"#utility.yul\":3754:3755   */\n      0x00\n        /* \"#utility.yul\":3779:3832   */\n      tag_427\n        /* \"#utility.yul\":3824:3831   */\n      dup6\n        /* \"#utility.yul\":3815:3821   */\n      dup3\n        /* \"#utility.yul\":3804:3813   */\n      dup7\n        /* \"#utility.yul\":3800:3822   */\n      add\n        /* \"#utility.yul\":3779:3832   */\n      tag_342\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":3769:3832   */\n      swap3\n      pop\n        /* \"#utility.yul\":3725:3842   */\n      pop\n        /* \"#utility.yul\":3881:3883   */\n      0x20\n        /* \"#utility.yul\":3907:3960   */\n      tag_428\n        /* \"#utility.yul\":3952:3959   */\n      dup6\n        /* \"#utility.yul\":3943:3949   */\n      dup3\n        /* \"#utility.yul\":3932:3941   */\n      dup7\n        /* \"#utility.yul\":3928:3950   */\n      add\n        /* \"#utility.yul\":3907:3960   */\n      tag_349\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":3897:3960   */\n      swap2\n      pop\n        /* \"#utility.yul\":3852:3970   */\n      pop\n        /* \"#utility.yul\":3503:3977   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3983:4069   */\n    tag_350:\n        /* \"#utility.yul\":4018:4025   */\n      0x00\n        /* \"#utility.yul\":4058:4062   */\n      0xff\n        /* \"#utility.yul\":4051:4056   */\n      dup3\n        /* \"#utility.yul\":4047:4063   */\n      and\n        /* \"#utility.yul\":4036:4063   */\n      swap1\n      pop\n        /* \"#utility.yul\":3983:4069   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4075:4187   */\n    tag_351:\n        /* \"#utility.yul\":4158:4180   */\n      tag_431\n        /* \"#utility.yul\":4174:4179   */\n      dup2\n        /* \"#utility.yul\":4158:4180   */\n      tag_350\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":4153:4156   */\n      dup3\n        /* \"#utility.yul\":4146:4181   */\n      mstore\n        /* \"#utility.yul\":4075:4187   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4193:4407   */\n    tag_59:\n        /* \"#utility.yul\":4282:4286   */\n      0x00\n        /* \"#utility.yul\":4320:4322   */\n      0x20\n        /* \"#utility.yul\":4309:4318   */\n      dup3\n        /* \"#utility.yul\":4305:4323   */\n      add\n        /* \"#utility.yul\":4297:4323   */\n      swap1\n      pop\n        /* \"#utility.yul\":4333:4400   */\n      tag_433\n        /* \"#utility.yul\":4397:4398   */\n      0x00\n        /* \"#utility.yul\":4386:4395   */\n      dup4\n        /* \"#utility.yul\":4382:4399   */\n      add\n        /* \"#utility.yul\":4373:4379   */\n      dup5\n        /* \"#utility.yul\":4333:4400   */\n      tag_351\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":4193:4407   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4413:4531   */\n    tag_352:\n        /* \"#utility.yul\":4500:4524   */\n      tag_435\n        /* \"#utility.yul\":4518:4523   */\n      dup2\n        /* \"#utility.yul\":4500:4524   */\n      tag_347\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":4495:4498   */\n      dup3\n        /* \"#utility.yul\":4488:4525   */\n      mstore\n        /* \"#utility.yul\":4413:4531   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4537:4759   */\n    tag_64:\n        /* \"#utility.yul\":4630:4634   */\n      0x00\n        /* \"#utility.yul\":4668:4670   */\n      0x20\n        /* \"#utility.yul\":4657:4666   */\n      dup3\n        /* \"#utility.yul\":4653:4671   */\n      add\n        /* \"#utility.yul\":4645:4671   */\n      swap1\n      pop\n        /* \"#utility.yul\":4681:4752   */\n      tag_437\n        /* \"#utility.yul\":4749:4750   */\n      0x00\n        /* \"#utility.yul\":4738:4747   */\n      dup4\n        /* \"#utility.yul\":4734:4751   */\n      add\n        /* \"#utility.yul\":4725:4731   */\n      dup5\n        /* \"#utility.yul\":4681:4752   */\n      tag_352\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":4537:4759   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4765:4887   */\n    tag_353:\n        /* \"#utility.yul\":4838:4862   */\n      tag_439\n        /* \"#utility.yul\":4856:4861   */\n      dup2\n        /* \"#utility.yul\":4838:4862   */\n      tag_344\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":4831:4836   */\n      dup2\n        /* \"#utility.yul\":4828:4863   */\n      eq\n        /* \"#utility.yul\":4818:4881   */\n      tag_440\n      jumpi\n        /* \"#utility.yul\":4877:4878   */\n      0x00\n        /* \"#utility.yul\":4874:4875   */\n      dup1\n        /* \"#utility.yul\":4867:4879   */\n      revert\n        /* \"#utility.yul\":4818:4881   */\n    tag_440:\n        /* \"#utility.yul\":4765:4887   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4893:5032   */\n    tag_354:\n        /* \"#utility.yul\":4939:4944   */\n      0x00\n        /* \"#utility.yul\":4977:4983   */\n      dup2\n        /* \"#utility.yul\":4964:4984   */\n      calldataload\n        /* \"#utility.yul\":4955:4984   */\n      swap1\n      pop\n        /* \"#utility.yul\":4993:5026   */\n      tag_442\n        /* \"#utility.yul\":5020:5025   */\n      dup2\n        /* \"#utility.yul\":4993:5026   */\n      tag_353\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":4893:5032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5038:5512   */\n    tag_68:\n        /* \"#utility.yul\":5106:5112   */\n      0x00\n        /* \"#utility.yul\":5114:5120   */\n      dup1\n        /* \"#utility.yul\":5163:5165   */\n      0x40\n        /* \"#utility.yul\":5151:5160   */\n      dup4\n        /* \"#utility.yul\":5142:5149   */\n      dup6\n        /* \"#utility.yul\":5138:5161   */\n      sub\n        /* \"#utility.yul\":5134:5166   */\n      slt\n        /* \"#utility.yul\":5131:5250   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":5169:5248   */\n      tag_445\n      tag_333\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":5131:5250   */\n    tag_444:\n        /* \"#utility.yul\":5289:5290   */\n      0x00\n        /* \"#utility.yul\":5314:5367   */\n      tag_446\n        /* \"#utility.yul\":5359:5366   */\n      dup6\n        /* \"#utility.yul\":5350:5356   */\n      dup3\n        /* \"#utility.yul\":5339:5348   */\n      dup7\n        /* \"#utility.yul\":5335:5357   */\n      add\n        /* \"#utility.yul\":5314:5367   */\n      tag_349\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":5304:5367   */\n      swap3\n      pop\n        /* \"#utility.yul\":5260:5377   */\n      pop\n        /* \"#utility.yul\":5416:5418   */\n      0x20\n        /* \"#utility.yul\":5442:5495   */\n      tag_447\n        /* \"#utility.yul\":5487:5494   */\n      dup6\n        /* \"#utility.yul\":5478:5484   */\n      dup3\n        /* \"#utility.yul\":5467:5476   */\n      dup7\n        /* \"#utility.yul\":5463:5485   */\n      add\n        /* \"#utility.yul\":5442:5495   */\n      tag_354\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":5432:5495   */\n      swap2\n      pop\n        /* \"#utility.yul\":5387:5505   */\n      pop\n        /* \"#utility.yul\":5038:5512   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5518:5634   */\n    tag_355:\n        /* \"#utility.yul\":5588:5609   */\n      tag_449\n        /* \"#utility.yul\":5603:5608   */\n      dup2\n        /* \"#utility.yul\":5588:5609   */\n      tag_338\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":5581:5586   */\n      dup2\n        /* \"#utility.yul\":5578:5610   */\n      eq\n        /* \"#utility.yul\":5568:5628   */\n      tag_450\n      jumpi\n        /* \"#utility.yul\":5624:5625   */\n      0x00\n        /* \"#utility.yul\":5621:5622   */\n      dup1\n        /* \"#utility.yul\":5614:5626   */\n      revert\n        /* \"#utility.yul\":5568:5628   */\n    tag_450:\n        /* \"#utility.yul\":5518:5634   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5640:5773   */\n    tag_356:\n        /* \"#utility.yul\":5683:5688   */\n      0x00\n        /* \"#utility.yul\":5721:5727   */\n      dup2\n        /* \"#utility.yul\":5708:5728   */\n      calldataload\n        /* \"#utility.yul\":5699:5728   */\n      swap1\n      pop\n        /* \"#utility.yul\":5737:5767   */\n      tag_452\n        /* \"#utility.yul\":5761:5766   */\n      dup2\n        /* \"#utility.yul\":5737:5767   */\n      tag_355\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":5640:5773   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5779:5897   */\n    tag_357:\n        /* \"#utility.yul\":5850:5872   */\n      tag_454\n        /* \"#utility.yul\":5866:5871   */\n      dup2\n        /* \"#utility.yul\":5850:5872   */\n      tag_350\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":5843:5848   */\n      dup2\n        /* \"#utility.yul\":5840:5873   */\n      eq\n        /* \"#utility.yul\":5830:5891   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":5887:5888   */\n      0x00\n        /* \"#utility.yul\":5884:5885   */\n      dup1\n        /* \"#utility.yul\":5877:5889   */\n      revert\n        /* \"#utility.yul\":5830:5891   */\n    tag_455:\n        /* \"#utility.yul\":5779:5897   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5903:6038   */\n    tag_358:\n        /* \"#utility.yul\":5947:5952   */\n      0x00\n        /* \"#utility.yul\":5985:5991   */\n      dup2\n        /* \"#utility.yul\":5972:5992   */\n      calldataload\n        /* \"#utility.yul\":5963:5992   */\n      swap1\n      pop\n        /* \"#utility.yul\":6001:6032   */\n      tag_457\n        /* \"#utility.yul\":6026:6031   */\n      dup2\n        /* \"#utility.yul\":6001:6032   */\n      tag_357\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":5903:6038   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6044:6945   */\n    tag_88:\n        /* \"#utility.yul\":6134:6140   */\n      0x00\n        /* \"#utility.yul\":6142:6148   */\n      dup1\n        /* \"#utility.yul\":6150:6156   */\n      0x00\n        /* \"#utility.yul\":6158:6164   */\n      dup1\n        /* \"#utility.yul\":6166:6172   */\n      0x00\n        /* \"#utility.yul\":6215:6218   */\n      0xa0\n        /* \"#utility.yul\":6203:6212   */\n      dup7\n        /* \"#utility.yul\":6194:6201   */\n      dup9\n        /* \"#utility.yul\":6190:6213   */\n      sub\n        /* \"#utility.yul\":6186:6219   */\n      slt\n        /* \"#utility.yul\":6183:6303   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":6222:6301   */\n      tag_460\n      tag_333\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":6183:6303   */\n    tag_459:\n        /* \"#utility.yul\":6342:6343   */\n      0x00\n        /* \"#utility.yul\":6367:6420   */\n      tag_461\n        /* \"#utility.yul\":6412:6419   */\n      dup9\n        /* \"#utility.yul\":6403:6409   */\n      dup3\n        /* \"#utility.yul\":6392:6401   */\n      dup10\n        /* \"#utility.yul\":6388:6410   */\n      add\n        /* \"#utility.yul\":6367:6420   */\n      tag_349\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":6357:6420   */\n      swap6\n      pop\n        /* \"#utility.yul\":6313:6430   */\n      pop\n        /* \"#utility.yul\":6469:6471   */\n      0x20\n        /* \"#utility.yul\":6495:6545   */\n      tag_462\n        /* \"#utility.yul\":6537:6544   */\n      dup9\n        /* \"#utility.yul\":6528:6534   */\n      dup3\n        /* \"#utility.yul\":6517:6526   */\n      dup10\n        /* \"#utility.yul\":6513:6535   */\n      add\n        /* \"#utility.yul\":6495:6545   */\n      tag_356\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":6485:6545   */\n      swap5\n      pop\n        /* \"#utility.yul\":6440:6555   */\n      pop\n        /* \"#utility.yul\":6594:6596   */\n      0x40\n        /* \"#utility.yul\":6620:6671   */\n      tag_463\n        /* \"#utility.yul\":6663:6670   */\n      dup9\n        /* \"#utility.yul\":6654:6660   */\n      dup3\n        /* \"#utility.yul\":6643:6652   */\n      dup10\n        /* \"#utility.yul\":6639:6661   */\n      add\n        /* \"#utility.yul\":6620:6671   */\n      tag_358\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":6610:6671   */\n      swap4\n      pop\n        /* \"#utility.yul\":6565:6681   */\n      pop\n        /* \"#utility.yul\":6720:6722   */\n      0x60\n        /* \"#utility.yul\":6746:6799   */\n      tag_464\n        /* \"#utility.yul\":6791:6798   */\n      dup9\n        /* \"#utility.yul\":6782:6788   */\n      dup3\n        /* \"#utility.yul\":6771:6780   */\n      dup10\n        /* \"#utility.yul\":6767:6789   */\n      add\n        /* \"#utility.yul\":6746:6799   */\n      tag_354\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":6736:6799   */\n      swap3\n      pop\n        /* \"#utility.yul\":6691:6809   */\n      pop\n        /* \"#utility.yul\":6848:6851   */\n      0x80\n        /* \"#utility.yul\":6875:6928   */\n      tag_465\n        /* \"#utility.yul\":6920:6927   */\n      dup9\n        /* \"#utility.yul\":6911:6917   */\n      dup3\n        /* \"#utility.yul\":6900:6909   */\n      dup10\n        /* \"#utility.yul\":6896:6918   */\n      add\n        /* \"#utility.yul\":6875:6928   */\n      tag_349\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":6865:6928   */\n      swap2\n      pop\n        /* \"#utility.yul\":6819:6938   */\n      pop\n        /* \"#utility.yul\":6044:6945   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6951:7280   */\n    tag_101:\n        /* \"#utility.yul\":7010:7016   */\n      0x00\n        /* \"#utility.yul\":7059:7061   */\n      0x20\n        /* \"#utility.yul\":7047:7056   */\n      dup3\n        /* \"#utility.yul\":7038:7045   */\n      dup5\n        /* \"#utility.yul\":7034:7057   */\n      sub\n        /* \"#utility.yul\":7030:7062   */\n      slt\n        /* \"#utility.yul\":7027:7146   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":7065:7144   */\n      tag_468\n      tag_333\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":7027:7146   */\n    tag_467:\n        /* \"#utility.yul\":7185:7186   */\n      0x00\n        /* \"#utility.yul\":7210:7263   */\n      tag_469\n        /* \"#utility.yul\":7255:7262   */\n      dup5\n        /* \"#utility.yul\":7246:7252   */\n      dup3\n        /* \"#utility.yul\":7235:7244   */\n      dup6\n        /* \"#utility.yul\":7231:7253   */\n      add\n        /* \"#utility.yul\":7210:7263   */\n      tag_354\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":7200:7263   */\n      swap2\n      pop\n        /* \"#utility.yul\":7156:7273   */\n      pop\n        /* \"#utility.yul\":6951:7280   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7286:7760   */\n    tag_114:\n        /* \"#utility.yul\":7354:7360   */\n      0x00\n        /* \"#utility.yul\":7362:7368   */\n      dup1\n        /* \"#utility.yul\":7411:7413   */\n      0x40\n        /* \"#utility.yul\":7399:7408   */\n      dup4\n        /* \"#utility.yul\":7390:7397   */\n      dup6\n        /* \"#utility.yul\":7386:7409   */\n      sub\n        /* \"#utility.yul\":7382:7414   */\n      slt\n        /* \"#utility.yul\":7379:7498   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":7417:7496   */\n      tag_472\n      tag_333\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":7379:7498   */\n    tag_471:\n        /* \"#utility.yul\":7537:7538   */\n      0x00\n        /* \"#utility.yul\":7562:7615   */\n      tag_473\n        /* \"#utility.yul\":7607:7614   */\n      dup6\n        /* \"#utility.yul\":7598:7604   */\n      dup3\n        /* \"#utility.yul\":7587:7596   */\n      dup7\n        /* \"#utility.yul\":7583:7605   */\n      add\n        /* \"#utility.yul\":7562:7615   */\n      tag_349\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":7552:7615   */\n      swap3\n      pop\n        /* \"#utility.yul\":7508:7625   */\n      pop\n        /* \"#utility.yul\":7664:7666   */\n      0x20\n        /* \"#utility.yul\":7690:7743   */\n      tag_474\n        /* \"#utility.yul\":7735:7742   */\n      dup6\n        /* \"#utility.yul\":7726:7732   */\n      dup3\n        /* \"#utility.yul\":7715:7724   */\n      dup7\n        /* \"#utility.yul\":7711:7733   */\n      add\n        /* \"#utility.yul\":7690:7743   */\n      tag_349\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":7680:7743   */\n      swap2\n      pop\n        /* \"#utility.yul\":7635:7753   */\n      pop\n        /* \"#utility.yul\":7286:7760   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7766:8095   */\n    tag_120:\n        /* \"#utility.yul\":7825:7831   */\n      0x00\n        /* \"#utility.yul\":7874:7876   */\n      0x20\n        /* \"#utility.yul\":7862:7871   */\n      dup3\n        /* \"#utility.yul\":7853:7860   */\n      dup5\n        /* \"#utility.yul\":7849:7872   */\n      sub\n        /* \"#utility.yul\":7845:7877   */\n      slt\n        /* \"#utility.yul\":7842:7961   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":7880:7959   */\n      tag_477\n      tag_333\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":7842:7961   */\n    tag_476:\n        /* \"#utility.yul\":8000:8001   */\n      0x00\n        /* \"#utility.yul\":8025:8078   */\n      tag_478\n        /* \"#utility.yul\":8070:8077   */\n      dup5\n        /* \"#utility.yul\":8061:8067   */\n      dup3\n        /* \"#utility.yul\":8050:8059   */\n      dup6\n        /* \"#utility.yul\":8046:8068   */\n      add\n        /* \"#utility.yul\":8025:8078   */\n      tag_349\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":8015:8078   */\n      swap2\n      pop\n        /* \"#utility.yul\":7971:8088   */\n      pop\n        /* \"#utility.yul\":7766:8095   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8101:8733   */\n    tag_132:\n        /* \"#utility.yul\":8290:8294   */\n      0x00\n        /* \"#utility.yul\":8328:8331   */\n      0xa0\n        /* \"#utility.yul\":8317:8326   */\n      dup3\n        /* \"#utility.yul\":8313:8332   */\n      add\n        /* \"#utility.yul\":8305:8332   */\n      swap1\n      pop\n        /* \"#utility.yul\":8342:8407   */\n      tag_480\n        /* \"#utility.yul\":8404:8405   */\n      0x00\n        /* \"#utility.yul\":8393:8402   */\n      dup4\n        /* \"#utility.yul\":8389:8406   */\n      add\n        /* \"#utility.yul\":8380:8386   */\n      dup9\n        /* \"#utility.yul\":8342:8407   */\n      tag_339\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":8417:8483   */\n      tag_481\n        /* \"#utility.yul\":8479:8481   */\n      0x20\n        /* \"#utility.yul\":8468:8477   */\n      dup4\n        /* \"#utility.yul\":8464:8482   */\n      add\n        /* \"#utility.yul\":8455:8461   */\n      dup8\n        /* \"#utility.yul\":8417:8483   */\n      tag_339\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":8493:8561   */\n      tag_482\n        /* \"#utility.yul\":8557:8559   */\n      0x40\n        /* \"#utility.yul\":8546:8555   */\n      dup4\n        /* \"#utility.yul\":8542:8560   */\n      add\n        /* \"#utility.yul\":8533:8539   */\n      dup7\n        /* \"#utility.yul\":8493:8561   */\n      tag_351\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":8571:8643   */\n      tag_483\n        /* \"#utility.yul\":8639:8641   */\n      0x60\n        /* \"#utility.yul\":8628:8637   */\n      dup4\n        /* \"#utility.yul\":8624:8642   */\n      add\n        /* \"#utility.yul\":8615:8621   */\n      dup6\n        /* \"#utility.yul\":8571:8643   */\n      tag_345\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":8653:8726   */\n      tag_484\n        /* \"#utility.yul\":8721:8724   */\n      0x80\n        /* \"#utility.yul\":8710:8719   */\n      dup4\n        /* \"#utility.yul\":8706:8725   */\n      add\n        /* \"#utility.yul\":8697:8703   */\n      dup5\n        /* \"#utility.yul\":8653:8726   */\n      tag_352\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":8101:8733   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8739:8919   */\n    tag_359:\n        /* \"#utility.yul\":8787:8864   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8784:8785   */\n      0x00\n        /* \"#utility.yul\":8777:8865   */\n      mstore\n        /* \"#utility.yul\":8884:8888   */\n      0x11\n        /* \"#utility.yul\":8881:8882   */\n      0x04\n        /* \"#utility.yul\":8874:8889   */\n      mstore\n        /* \"#utility.yul\":8908:8912   */\n      0x24\n        /* \"#utility.yul\":8905:8906   */\n      0x00\n        /* \"#utility.yul\":8898:8913   */\n      revert\n        /* \"#utility.yul\":8925:9116   */\n    tag_160:\n        /* \"#utility.yul\":8965:8968   */\n      0x00\n        /* \"#utility.yul\":8984:9004   */\n      tag_487\n        /* \"#utility.yul\":9002:9003   */\n      dup3\n        /* \"#utility.yul\":8984:9004   */\n      tag_344\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":8979:9004   */\n      swap2\n      pop\n        /* \"#utility.yul\":9018:9038   */\n      tag_488\n        /* \"#utility.yul\":9036:9037   */\n      dup4\n        /* \"#utility.yul\":9018:9038   */\n      tag_344\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":9013:9038   */\n      swap3\n      pop\n        /* \"#utility.yul\":9061:9062   */\n      dup3\n        /* \"#utility.yul\":9058:9059   */\n      dup3\n        /* \"#utility.yul\":9054:9063   */\n      add\n        /* \"#utility.yul\":9047:9063   */\n      swap1\n      pop\n        /* \"#utility.yul\":9082:9085   */\n      dup1\n        /* \"#utility.yul\":9079:9080   */\n      dup3\n        /* \"#utility.yul\":9076:9086   */\n      gt\n        /* \"#utility.yul\":9073:9109   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":9089:9107   */\n      tag_490\n      tag_359\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":9073:9109   */\n    tag_489:\n        /* \"#utility.yul\":8925:9116   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9122:9454   */\n    tag_163:\n        /* \"#utility.yul\":9243:9247   */\n      0x00\n        /* \"#utility.yul\":9281:9283   */\n      0x40\n        /* \"#utility.yul\":9270:9279   */\n      dup3\n        /* \"#utility.yul\":9266:9284   */\n      add\n        /* \"#utility.yul\":9258:9284   */\n      swap1\n      pop\n        /* \"#utility.yul\":9294:9365   */\n      tag_492\n        /* \"#utility.yul\":9362:9363   */\n      0x00\n        /* \"#utility.yul\":9351:9360   */\n      dup4\n        /* \"#utility.yul\":9347:9364   */\n      add\n        /* \"#utility.yul\":9338:9344   */\n      dup6\n        /* \"#utility.yul\":9294:9365   */\n      tag_345\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":9375:9447   */\n      tag_493\n        /* \"#utility.yul\":9443:9445   */\n      0x20\n        /* \"#utility.yul\":9432:9441   */\n      dup4\n        /* \"#utility.yul\":9428:9446   */\n      add\n        /* \"#utility.yul\":9419:9425   */\n      dup5\n        /* \"#utility.yul\":9375:9447   */\n      tag_345\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":9122:9454   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9460:9902   */\n    tag_168:\n        /* \"#utility.yul\":9609:9613   */\n      0x00\n        /* \"#utility.yul\":9647:9649   */\n      0x60\n        /* \"#utility.yul\":9636:9645   */\n      dup3\n        /* \"#utility.yul\":9632:9650   */\n      add\n        /* \"#utility.yul\":9624:9650   */\n      swap1\n      pop\n        /* \"#utility.yul\":9660:9731   */\n      tag_495\n        /* \"#utility.yul\":9728:9729   */\n      0x00\n        /* \"#utility.yul\":9717:9726   */\n      dup4\n        /* \"#utility.yul\":9713:9730   */\n      add\n        /* \"#utility.yul\":9704:9710   */\n      dup7\n        /* \"#utility.yul\":9660:9731   */\n      tag_345\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":9741:9813   */\n      tag_496\n        /* \"#utility.yul\":9809:9811   */\n      0x20\n        /* \"#utility.yul\":9798:9807   */\n      dup4\n        /* \"#utility.yul\":9794:9812   */\n      add\n        /* \"#utility.yul\":9785:9791   */\n      dup6\n        /* \"#utility.yul\":9741:9813   */\n      tag_345\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":9823:9895   */\n      tag_497\n        /* \"#utility.yul\":9891:9893   */\n      0x40\n        /* \"#utility.yul\":9880:9889   */\n      dup4\n        /* \"#utility.yul\":9876:9894   */\n      add\n        /* \"#utility.yul\":9867:9873   */\n      dup5\n        /* \"#utility.yul\":9823:9895   */\n      tag_345\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":9460:9902   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9908:10047   */\n    tag_360:\n        /* \"#utility.yul\":9963:9968   */\n      0x00\n        /* \"#utility.yul\":9994:10000   */\n      dup2\n        /* \"#utility.yul\":9988:10001   */\n      mload\n        /* \"#utility.yul\":9979:10001   */\n      swap1\n      pop\n        /* \"#utility.yul\":10010:10041   */\n      tag_499\n        /* \"#utility.yul\":10035:10040   */\n      dup2\n        /* \"#utility.yul\":10010:10041   */\n      tag_357\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":9908:10047   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10053:10400   */\n    tag_201:\n        /* \"#utility.yul\":10121:10127   */\n      0x00\n        /* \"#utility.yul\":10170:10172   */\n      0x20\n        /* \"#utility.yul\":10158:10167   */\n      dup3\n        /* \"#utility.yul\":10149:10156   */\n      dup5\n        /* \"#utility.yul\":10145:10168   */\n      sub\n        /* \"#utility.yul\":10141:10173   */\n      slt\n        /* \"#utility.yul\":10138:10257   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":10176:10255   */\n      tag_502\n      tag_333\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":10138:10257   */\n    tag_501:\n        /* \"#utility.yul\":10296:10297   */\n      0x00\n        /* \"#utility.yul\":10321:10383   */\n      tag_503\n        /* \"#utility.yul\":10375:10382   */\n      dup5\n        /* \"#utility.yul\":10366:10372   */\n      dup3\n        /* \"#utility.yul\":10355:10364   */\n      dup6\n        /* \"#utility.yul\":10351:10373   */\n      add\n        /* \"#utility.yul\":10321:10383   */\n      tag_360\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":10311:10383   */\n      swap2\n      pop\n        /* \"#utility.yul\":10267:10393   */\n      pop\n        /* \"#utility.yul\":10053:10400   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10406:10600   */\n    tag_226:\n        /* \"#utility.yul\":10446:10450   */\n      0x00\n        /* \"#utility.yul\":10466:10486   */\n      tag_505\n        /* \"#utility.yul\":10484:10485   */\n      dup3\n        /* \"#utility.yul\":10466:10486   */\n      tag_344\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":10461:10486   */\n      swap2\n      pop\n        /* \"#utility.yul\":10500:10520   */\n      tag_506\n        /* \"#utility.yul\":10518:10519   */\n      dup4\n        /* \"#utility.yul\":10500:10520   */\n      tag_344\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":10495:10520   */\n      swap3\n      pop\n        /* \"#utility.yul\":10544:10545   */\n      dup3\n        /* \"#utility.yul\":10541:10542   */\n      dup3\n        /* \"#utility.yul\":10537:10546   */\n      sub\n        /* \"#utility.yul\":10529:10546   */\n      swap1\n      pop\n        /* \"#utility.yul\":10568:10569   */\n      dup2\n        /* \"#utility.yul\":10562:10566   */\n      dup2\n        /* \"#utility.yul\":10559:10570   */\n      gt\n        /* \"#utility.yul\":10556:10593   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":10573:10591   */\n      tag_508\n      tag_359\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":10556:10593   */\n    tag_507:\n        /* \"#utility.yul\":10406:10600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10606:10753   */\n    tag_361:\n        /* \"#utility.yul\":10707:10718   */\n      0x00\n        /* \"#utility.yul\":10744:10747   */\n      dup2\n        /* \"#utility.yul\":10729:10747   */\n      swap1\n      pop\n        /* \"#utility.yul\":10606:10753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10759:10873   */\n    tag_362:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10879:11277   */\n    tag_363:\n        /* \"#utility.yul\":11038:11041   */\n      0x00\n        /* \"#utility.yul\":11059:11142   */\n      tag_512\n        /* \"#utility.yul\":11140:11141   */\n      0x00\n        /* \"#utility.yul\":11135:11138   */\n      dup4\n        /* \"#utility.yul\":11059:11142   */\n      tag_361\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":11052:11142   */\n      swap2\n      pop\n        /* \"#utility.yul\":11151:11244   */\n      tag_513\n        /* \"#utility.yul\":11240:11243   */\n      dup3\n        /* \"#utility.yul\":11151:11244   */\n      tag_362\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":11269:11270   */\n      0x00\n        /* \"#utility.yul\":11264:11267   */\n      dup3\n        /* \"#utility.yul\":11260:11271   */\n      add\n        /* \"#utility.yul\":11253:11271   */\n      swap1\n      pop\n        /* \"#utility.yul\":10879:11277   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11283:11662   */\n    tag_247:\n        /* \"#utility.yul\":11467:11470   */\n      0x00\n        /* \"#utility.yul\":11489:11636   */\n      tag_515\n        /* \"#utility.yul\":11632:11635   */\n      dup3\n        /* \"#utility.yul\":11489:11636   */\n      tag_363\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":11482:11636   */\n      swap2\n      pop\n        /* \"#utility.yul\":11653:11656   */\n      dup2\n        /* \"#utility.yul\":11646:11656   */\n      swap1\n      pop\n        /* \"#utility.yul\":11283:11662   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11668:11837   */\n    tag_364:\n        /* \"#utility.yul\":11752:11763   */\n      0x00\n        /* \"#utility.yul\":11786:11792   */\n      dup3\n        /* \"#utility.yul\":11781:11784   */\n      dup3\n        /* \"#utility.yul\":11774:11793   */\n      mstore\n        /* \"#utility.yul\":11826:11830   */\n      0x20\n        /* \"#utility.yul\":11821:11824   */\n      dup3\n        /* \"#utility.yul\":11817:11831   */\n      add\n        /* \"#utility.yul\":11802:11831   */\n      swap1\n      pop\n        /* \"#utility.yul\":11668:11837   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11843:12024   */\n    tag_365:\n        /* \"#utility.yul\":11983:12016   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":11979:11980   */\n      0x00\n        /* \"#utility.yul\":11971:11977   */\n      dup3\n        /* \"#utility.yul\":11967:11981   */\n      add\n        /* \"#utility.yul\":11960:12017   */\n      mstore\n        /* \"#utility.yul\":11843:12024   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12030:12396   */\n    tag_366:\n        /* \"#utility.yul\":12172:12175   */\n      0x00\n        /* \"#utility.yul\":12193:12260   */\n      tag_519\n        /* \"#utility.yul\":12257:12259   */\n      0x1f\n        /* \"#utility.yul\":12252:12255   */\n      dup4\n        /* \"#utility.yul\":12193:12260   */\n      tag_364\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":12186:12260   */\n      swap2\n      pop\n        /* \"#utility.yul\":12269:12362   */\n      tag_520\n        /* \"#utility.yul\":12358:12361   */\n      dup3\n        /* \"#utility.yul\":12269:12362   */\n      tag_365\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":12387:12389   */\n      0x20\n        /* \"#utility.yul\":12382:12385   */\n      dup3\n        /* \"#utility.yul\":12378:12390   */\n      add\n        /* \"#utility.yul\":12371:12390   */\n      swap1\n      pop\n        /* \"#utility.yul\":12030:12396   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12402:12821   */\n    tag_276:\n        /* \"#utility.yul\":12568:12572   */\n      0x00\n        /* \"#utility.yul\":12606:12608   */\n      0x20\n        /* \"#utility.yul\":12595:12604   */\n      dup3\n        /* \"#utility.yul\":12591:12609   */\n      add\n        /* \"#utility.yul\":12583:12609   */\n      swap1\n      pop\n        /* \"#utility.yul\":12655:12664   */\n      dup2\n        /* \"#utility.yul\":12649:12653   */\n      dup2\n        /* \"#utility.yul\":12645:12665   */\n      sub\n        /* \"#utility.yul\":12641:12642   */\n      0x00\n        /* \"#utility.yul\":12630:12639   */\n      dup4\n        /* \"#utility.yul\":12626:12643   */\n      add\n        /* \"#utility.yul\":12619:12666   */\n      mstore\n        /* \"#utility.yul\":12683:12814   */\n      tag_522\n        /* \"#utility.yul\":12809:12813   */\n      dup2\n        /* \"#utility.yul\":12683:12814   */\n      tag_366\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":12675:12814   */\n      swap1\n      pop\n        /* \"#utility.yul\":12402:12821   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12827:12932   */\n    tag_367:\n        /* \"#utility.yul\":12863:12870   */\n      0x00\n        /* \"#utility.yul\":12903:12925   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":12896:12901   */\n      dup3\n        /* \"#utility.yul\":12892:12926   */\n      and\n        /* \"#utility.yul\":12881:12926   */\n      swap1\n      pop\n        /* \"#utility.yul\":12827:12932   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12938:13058   */\n    tag_368:\n        /* \"#utility.yul\":13010:13033   */\n      tag_525\n        /* \"#utility.yul\":13027:13032   */\n      dup2\n        /* \"#utility.yul\":13010:13033   */\n      tag_367\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":13003:13008   */\n      dup2\n        /* \"#utility.yul\":13000:13034   */\n      eq\n        /* \"#utility.yul\":12990:13052   */\n      tag_526\n      jumpi\n        /* \"#utility.yul\":13048:13049   */\n      0x00\n        /* \"#utility.yul\":13045:13046   */\n      dup1\n        /* \"#utility.yul\":13038:13050   */\n      revert\n        /* \"#utility.yul\":12990:13052   */\n    tag_526:\n        /* \"#utility.yul\":12938:13058   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13064:13205   */\n    tag_369:\n        /* \"#utility.yul\":13120:13125   */\n      0x00\n        /* \"#utility.yul\":13151:13157   */\n      dup2\n        /* \"#utility.yul\":13145:13158   */\n      mload\n        /* \"#utility.yul\":13136:13158   */\n      swap1\n      pop\n        /* \"#utility.yul\":13167:13199   */\n      tag_528\n        /* \"#utility.yul\":13193:13198   */\n      dup2\n        /* \"#utility.yul\":13167:13199   */\n      tag_368\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":13064:13205   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13211:13287   */\n    tag_370:\n        /* \"#utility.yul\":13247:13254   */\n      0x00\n        /* \"#utility.yul\":13276:13281   */\n      dup2\n        /* \"#utility.yul\":13265:13281   */\n      swap1\n      pop\n        /* \"#utility.yul\":13211:13287   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13293:13413   */\n    tag_371:\n        /* \"#utility.yul\":13365:13388   */\n      tag_531\n        /* \"#utility.yul\":13382:13387   */\n      dup2\n        /* \"#utility.yul\":13365:13388   */\n      tag_370\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":13358:13363   */\n      dup2\n        /* \"#utility.yul\":13355:13389   */\n      eq\n        /* \"#utility.yul\":13345:13407   */\n      tag_532\n      jumpi\n        /* \"#utility.yul\":13403:13404   */\n      0x00\n        /* \"#utility.yul\":13400:13401   */\n      dup1\n        /* \"#utility.yul\":13393:13405   */\n      revert\n        /* \"#utility.yul\":13345:13407   */\n    tag_532:\n        /* \"#utility.yul\":13293:13413   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13419:13560   */\n    tag_372:\n        /* \"#utility.yul\":13475:13480   */\n      0x00\n        /* \"#utility.yul\":13506:13512   */\n      dup2\n        /* \"#utility.yul\":13500:13513   */\n      mload\n        /* \"#utility.yul\":13491:13513   */\n      swap1\n      pop\n        /* \"#utility.yul\":13522:13554   */\n      tag_534\n        /* \"#utility.yul\":13548:13553   */\n      dup2\n        /* \"#utility.yul\":13522:13554   */\n      tag_371\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":13419:13560   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13566:13709   */\n    tag_373:\n        /* \"#utility.yul\":13623:13628   */\n      0x00\n        /* \"#utility.yul\":13654:13660   */\n      dup2\n        /* \"#utility.yul\":13648:13661   */\n      mload\n        /* \"#utility.yul\":13639:13661   */\n      swap1\n      pop\n        /* \"#utility.yul\":13670:13703   */\n      tag_536\n        /* \"#utility.yul\":13697:13702   */\n      dup2\n        /* \"#utility.yul\":13670:13703   */\n      tag_353\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":13566:13709   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13715:14686   */\n    tag_284:\n        /* \"#utility.yul\":13818:13824   */\n      0x00\n        /* \"#utility.yul\":13826:13832   */\n      dup1\n        /* \"#utility.yul\":13834:13840   */\n      0x00\n        /* \"#utility.yul\":13842:13848   */\n      dup1\n        /* \"#utility.yul\":13850:13856   */\n      0x00\n        /* \"#utility.yul\":13899:13902   */\n      0xa0\n        /* \"#utility.yul\":13887:13896   */\n      dup7\n        /* \"#utility.yul\":13878:13885   */\n      dup9\n        /* \"#utility.yul\":13874:13897   */\n      sub\n        /* \"#utility.yul\":13870:13903   */\n      slt\n        /* \"#utility.yul\":13867:13987   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":13906:13985   */\n      tag_539\n      tag_333\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":13867:13987   */\n    tag_538:\n        /* \"#utility.yul\":14026:14027   */\n      0x00\n        /* \"#utility.yul\":14051:14114   */\n      tag_540\n        /* \"#utility.yul\":14106:14113   */\n      dup9\n        /* \"#utility.yul\":14097:14103   */\n      dup3\n        /* \"#utility.yul\":14086:14095   */\n      dup10\n        /* \"#utility.yul\":14082:14104   */\n      add\n        /* \"#utility.yul\":14051:14114   */\n      tag_369\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":14041:14114   */\n      swap6\n      pop\n        /* \"#utility.yul\":13997:14124   */\n      pop\n        /* \"#utility.yul\":14163:14165   */\n      0x20\n        /* \"#utility.yul\":14189:14252   */\n      tag_541\n        /* \"#utility.yul\":14244:14251   */\n      dup9\n        /* \"#utility.yul\":14235:14241   */\n      dup3\n        /* \"#utility.yul\":14224:14233   */\n      dup10\n        /* \"#utility.yul\":14220:14242   */\n      add\n        /* \"#utility.yul\":14189:14252   */\n      tag_372\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":14179:14252   */\n      swap5\n      pop\n        /* \"#utility.yul\":14134:14262   */\n      pop\n        /* \"#utility.yul\":14301:14303   */\n      0x40\n        /* \"#utility.yul\":14327:14391   */\n      tag_542\n        /* \"#utility.yul\":14383:14390   */\n      dup9\n        /* \"#utility.yul\":14374:14380   */\n      dup3\n        /* \"#utility.yul\":14363:14372   */\n      dup10\n        /* \"#utility.yul\":14359:14381   */\n      add\n        /* \"#utility.yul\":14327:14391   */\n      tag_373\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":14317:14391   */\n      swap4\n      pop\n        /* \"#utility.yul\":14272:14401   */\n      pop\n        /* \"#utility.yul\":14440:14442   */\n      0x60\n        /* \"#utility.yul\":14466:14530   */\n      tag_543\n        /* \"#utility.yul\":14522:14529   */\n      dup9\n        /* \"#utility.yul\":14513:14519   */\n      dup3\n        /* \"#utility.yul\":14502:14511   */\n      dup10\n        /* \"#utility.yul\":14498:14520   */\n      add\n        /* \"#utility.yul\":14466:14530   */\n      tag_373\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":14456:14530   */\n      swap3\n      pop\n        /* \"#utility.yul\":14411:14540   */\n      pop\n        /* \"#utility.yul\":14579:14582   */\n      0x80\n        /* \"#utility.yul\":14606:14669   */\n      tag_544\n        /* \"#utility.yul\":14661:14668   */\n      dup9\n        /* \"#utility.yul\":14652:14658   */\n      dup3\n        /* \"#utility.yul\":14641:14650   */\n      dup10\n        /* \"#utility.yul\":14637:14659   */\n      add\n        /* \"#utility.yul\":14606:14669   */\n      tag_369\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":14596:14669   */\n      swap2\n      pop\n        /* \"#utility.yul\":14550:14679   */\n      pop\n        /* \"#utility.yul\":13715:14686   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14692:15102   */\n    tag_290:\n        /* \"#utility.yul\":14732:14739   */\n      0x00\n        /* \"#utility.yul\":14755:14775   */\n      tag_546\n        /* \"#utility.yul\":14773:14774   */\n      dup3\n        /* \"#utility.yul\":14755:14775   */\n      tag_344\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":14750:14775   */\n      swap2\n      pop\n        /* \"#utility.yul\":14789:14809   */\n      tag_547\n        /* \"#utility.yul\":14807:14808   */\n      dup4\n        /* \"#utility.yul\":14789:14809   */\n      tag_344\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":14784:14809   */\n      swap3\n      pop\n        /* \"#utility.yul\":14844:14845   */\n      dup3\n        /* \"#utility.yul\":14841:14842   */\n      dup3\n        /* \"#utility.yul\":14837:14846   */\n      mul\n        /* \"#utility.yul\":14866:14896   */\n      tag_548\n        /* \"#utility.yul\":14884:14895   */\n      dup2\n        /* \"#utility.yul\":14866:14896   */\n      tag_344\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":14855:14896   */\n      swap2\n      pop\n        /* \"#utility.yul\":15045:15046   */\n      dup3\n        /* \"#utility.yul\":15036:15043   */\n      dup3\n        /* \"#utility.yul\":15032:15047   */\n      div\n        /* \"#utility.yul\":15029:15030   */\n      dup5\n        /* \"#utility.yul\":15026:15048   */\n      eq\n        /* \"#utility.yul\":15006:15007   */\n      dup4\n        /* \"#utility.yul\":14999:15008   */\n      iszero\n        /* \"#utility.yul\":14979:15062   */\n      or\n        /* \"#utility.yul\":14956:15095   */\n      tag_549\n      jumpi\n        /* \"#utility.yul\":15075:15093   */\n      tag_550\n      tag_359\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":14956:15095   */\n    tag_549:\n        /* \"#utility.yul\":14740:15102   */\n      pop\n        /* \"#utility.yul\":14692:15102   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15108:15210   */\n    tag_374:\n        /* \"#utility.yul\":15150:15158   */\n      0x00\n        /* \"#utility.yul\":15197:15202   */\n      dup2\n        /* \"#utility.yul\":15194:15195   */\n      0x01\n        /* \"#utility.yul\":15190:15203   */\n      shr\n        /* \"#utility.yul\":15169:15203   */\n      swap1\n      pop\n        /* \"#utility.yul\":15108:15210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15216:16064   */\n    tag_375:\n        /* \"#utility.yul\":15277:15282   */\n      0x00\n        /* \"#utility.yul\":15284:15288   */\n      dup1\n        /* \"#utility.yul\":15308:15314   */\n      dup3\n        /* \"#utility.yul\":15299:15314   */\n      swap2\n      pop\n        /* \"#utility.yul\":15332:15337   */\n      dup4\n        /* \"#utility.yul\":15323:15337   */\n      swap1\n      pop\n        /* \"#utility.yul\":15346:16058   */\n    tag_553:\n        /* \"#utility.yul\":15367:15368   */\n      0x01\n        /* \"#utility.yul\":15357:15365   */\n      dup6\n        /* \"#utility.yul\":15354:15369   */\n      gt\n        /* \"#utility.yul\":15346:16058   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":15462:15466   */\n      dup1\n        /* \"#utility.yul\":15457:15460   */\n      dup7\n        /* \"#utility.yul\":15453:15467   */\n      div\n        /* \"#utility.yul\":15447:15451   */\n      dup2\n        /* \"#utility.yul\":15444:15468   */\n      gt\n        /* \"#utility.yul\":15441:15491   */\n      iszero\n      tag_556\n      jumpi\n        /* \"#utility.yul\":15471:15489   */\n      tag_557\n      tag_359\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":15441:15491   */\n    tag_556:\n        /* \"#utility.yul\":15521:15522   */\n      0x01\n        /* \"#utility.yul\":15511:15519   */\n      dup6\n        /* \"#utility.yul\":15507:15523   */\n      and\n        /* \"#utility.yul\":15504:15955   */\n      iszero\n      tag_558\n      jumpi\n        /* \"#utility.yul\":15936:15940   */\n      dup1\n        /* \"#utility.yul\":15929:15934   */\n      dup3\n        /* \"#utility.yul\":15925:15941   */\n      mul\n        /* \"#utility.yul\":15916:15941   */\n      swap2\n      pop\n        /* \"#utility.yul\":15504:15955   */\n    tag_558:\n        /* \"#utility.yul\":15986:15990   */\n      dup1\n        /* \"#utility.yul\":15980:15984   */\n      dup2\n        /* \"#utility.yul\":15976:15991   */\n      mul\n        /* \"#utility.yul\":15968:15991   */\n      swap1\n      pop\n        /* \"#utility.yul\":16016:16048   */\n      tag_559\n        /* \"#utility.yul\":16039:16047   */\n      dup6\n        /* \"#utility.yul\":16016:16048   */\n      tag_374\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":16004:16048   */\n      swap5\n      pop\n        /* \"#utility.yul\":15346:16058   */\n      jump(tag_553)\n    tag_555:\n        /* \"#utility.yul\":15216:16064   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16070:17143   */\n    tag_376:\n        /* \"#utility.yul\":16124:16129   */\n      0x00\n        /* \"#utility.yul\":16315:16323   */\n      dup3\n        /* \"#utility.yul\":16305:16345   */\n      tag_561\n      jumpi\n        /* \"#utility.yul\":16336:16337   */\n      0x01\n        /* \"#utility.yul\":16327:16337   */\n      swap1\n      pop\n        /* \"#utility.yul\":16338:16343   */\n      jump(tag_560)\n        /* \"#utility.yul\":16305:16345   */\n    tag_561:\n        /* \"#utility.yul\":16364:16368   */\n      dup2\n        /* \"#utility.yul\":16354:16390   */\n      tag_562\n      jumpi\n        /* \"#utility.yul\":16381:16382   */\n      0x00\n        /* \"#utility.yul\":16372:16382   */\n      swap1\n      pop\n        /* \"#utility.yul\":16383:16388   */\n      jump(tag_560)\n        /* \"#utility.yul\":16354:16390   */\n    tag_562:\n        /* \"#utility.yul\":16450:16454   */\n      dup2\n        /* \"#utility.yul\":16498:16499   */\n      0x01\n        /* \"#utility.yul\":16493:16520   */\n      dup2\n      eq\n      tag_564\n      jumpi\n        /* \"#utility.yul\":16534:16535   */\n      0x02\n        /* \"#utility.yul\":16529:16720   */\n      dup2\n      eq\n      tag_565\n      jumpi\n        /* \"#utility.yul\":16443:16720   */\n      jump(tag_563)\n        /* \"#utility.yul\":16493:16520   */\n    tag_564:\n        /* \"#utility.yul\":16511:16512   */\n      0x01\n        /* \"#utility.yul\":16502:16512   */\n      swap2\n      pop\n        /* \"#utility.yul\":16513:16518   */\n      pop\n      jump(tag_560)\n        /* \"#utility.yul\":16529:16720   */\n    tag_565:\n        /* \"#utility.yul\":16574:16577   */\n      0xff\n        /* \"#utility.yul\":16564:16572   */\n      dup5\n        /* \"#utility.yul\":16561:16578   */\n      gt\n        /* \"#utility.yul\":16558:16601   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":16581:16599   */\n      tag_567\n      tag_359\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":16558:16601   */\n    tag_566:\n        /* \"#utility.yul\":16630:16638   */\n      dup4\n        /* \"#utility.yul\":16627:16628   */\n      0x02\n        /* \"#utility.yul\":16623:16639   */\n      exp\n        /* \"#utility.yul\":16614:16639   */\n      swap2\n      pop\n        /* \"#utility.yul\":16665:16668   */\n      dup5\n        /* \"#utility.yul\":16658:16663   */\n      dup3\n        /* \"#utility.yul\":16655:16669   */\n      gt\n        /* \"#utility.yul\":16652:16692   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":16672:16690   */\n      tag_569\n      tag_359\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":16652:16692   */\n    tag_568:\n        /* \"#utility.yul\":16705:16710   */\n      pop\n      jump(tag_560)\n        /* \"#utility.yul\":16443:16720   */\n    tag_563:\n      pop\n        /* \"#utility.yul\":16829:16831   */\n      0x20\n        /* \"#utility.yul\":16819:16827   */\n      dup4\n        /* \"#utility.yul\":16816:16832   */\n      lt\n        /* \"#utility.yul\":16810:16813   */\n      0x0133\n        /* \"#utility.yul\":16804:16808   */\n      dup4\n        /* \"#utility.yul\":16801:16814   */\n      lt\n        /* \"#utility.yul\":16797:16833   */\n      and\n        /* \"#utility.yul\":16779:16781   */\n      0x4e\n        /* \"#utility.yul\":16769:16777   */\n      dup5\n        /* \"#utility.yul\":16766:16782   */\n      lt\n        /* \"#utility.yul\":16761:16763   */\n      0x0b\n        /* \"#utility.yul\":16755:16759   */\n      dup5\n        /* \"#utility.yul\":16752:16764   */\n      lt\n        /* \"#utility.yul\":16748:16783   */\n      and\n        /* \"#utility.yul\":16732:16843   */\n      or\n        /* \"#utility.yul\":16729:16975   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":16885:16893   */\n      dup3\n        /* \"#utility.yul\":16879:16883   */\n      dup3\n        /* \"#utility.yul\":16875:16894   */\n      exp\n        /* \"#utility.yul\":16866:16894   */\n      swap1\n      pop\n        /* \"#utility.yul\":16920:16923   */\n      dup4\n        /* \"#utility.yul\":16913:16918   */\n      dup2\n        /* \"#utility.yul\":16910:16924   */\n      gt\n        /* \"#utility.yul\":16907:16947   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":16927:16945   */\n      tag_572\n      tag_359\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":16907:16947   */\n    tag_571:\n        /* \"#utility.yul\":16960:16965   */\n      jump(tag_560)\n        /* \"#utility.yul\":16729:16975   */\n    tag_570:\n        /* \"#utility.yul\":17000:17042   */\n      tag_573\n        /* \"#utility.yul\":17038:17041   */\n      dup5\n        /* \"#utility.yul\":17028:17036   */\n      dup5\n        /* \"#utility.yul\":17022:17026   */\n      dup5\n        /* \"#utility.yul\":17019:17020   */\n      0x01\n        /* \"#utility.yul\":17000:17042   */\n      tag_375\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":16985:17042   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":17074:17078   */\n      dup2\n        /* \"#utility.yul\":17069:17072   */\n      dup5\n        /* \"#utility.yul\":17065:17079   */\n      div\n        /* \"#utility.yul\":17058:17063   */\n      dup2\n        /* \"#utility.yul\":17055:17080   */\n      gt\n        /* \"#utility.yul\":17052:17103   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":17083:17101   */\n      tag_575\n      tag_359\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":17052:17103   */\n    tag_574:\n        /* \"#utility.yul\":17132:17136   */\n      dup2\n        /* \"#utility.yul\":17125:17130   */\n      dup2\n        /* \"#utility.yul\":17121:17137   */\n      mul\n        /* \"#utility.yul\":17112:17137   */\n      swap1\n      pop\n        /* \"#utility.yul\":16070:17143   */\n    tag_560:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17149:17430   */\n    tag_293:\n        /* \"#utility.yul\":17207:17212   */\n      0x00\n        /* \"#utility.yul\":17231:17254   */\n      tag_577\n        /* \"#utility.yul\":17249:17253   */\n      dup3\n        /* \"#utility.yul\":17231:17254   */\n      tag_344\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":17223:17254   */\n      swap2\n      pop\n        /* \"#utility.yul\":17275:17300   */\n      tag_578\n        /* \"#utility.yul\":17291:17299   */\n      dup4\n        /* \"#utility.yul\":17275:17300   */\n      tag_350\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":17263:17300   */\n      swap3\n      pop\n        /* \"#utility.yul\":17319:17423   */\n      tag_579\n        /* \"#utility.yul\":17356:17422   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17346:17354   */\n      dup5\n        /* \"#utility.yul\":17340:17344   */\n      dup5\n        /* \"#utility.yul\":17319:17423   */\n      tag_376\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":17310:17423   */\n      swap1\n      pop\n        /* \"#utility.yul\":17149:17430   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17436:17616   */\n    tag_377:\n        /* \"#utility.yul\":17484:17561   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17481:17482   */\n      0x00\n        /* \"#utility.yul\":17474:17562   */\n      mstore\n        /* \"#utility.yul\":17581:17585   */\n      0x12\n        /* \"#utility.yul\":17578:17579   */\n      0x04\n        /* \"#utility.yul\":17571:17586   */\n      mstore\n        /* \"#utility.yul\":17605:17609   */\n      0x24\n        /* \"#utility.yul\":17602:17603   */\n      0x00\n        /* \"#utility.yul\":17595:17610   */\n      revert\n        /* \"#utility.yul\":17622:17807   */\n    tag_295:\n        /* \"#utility.yul\":17662:17663   */\n      0x00\n        /* \"#utility.yul\":17679:17699   */\n      tag_582\n        /* \"#utility.yul\":17697:17698   */\n      dup3\n        /* \"#utility.yul\":17679:17699   */\n      tag_344\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":17674:17699   */\n      swap2\n      pop\n        /* \"#utility.yul\":17713:17733   */\n      tag_583\n        /* \"#utility.yul\":17731:17732   */\n      dup4\n        /* \"#utility.yul\":17713:17733   */\n      tag_344\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":17708:17733   */\n      swap3\n      pop\n        /* \"#utility.yul\":17752:17753   */\n      dup3\n        /* \"#utility.yul\":17742:17777   */\n      tag_584\n      jumpi\n        /* \"#utility.yul\":17757:17775   */\n      tag_585\n      tag_377\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":17742:17777   */\n    tag_584:\n        /* \"#utility.yul\":17799:17800   */\n      dup3\n        /* \"#utility.yul\":17796:17797   */\n      dup3\n        /* \"#utility.yul\":17792:17801   */\n      div\n        /* \"#utility.yul\":17787:17801   */\n      swap1\n      pop\n        /* \"#utility.yul\":17622:17807   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17813:18004   */\n    tag_298:\n        /* \"#utility.yul\":17851:17855   */\n      0x00\n        /* \"#utility.yul\":17871:17889   */\n      tag_587\n        /* \"#utility.yul\":17887:17888   */\n      dup3\n        /* \"#utility.yul\":17871:17889   */\n      tag_350\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":17866:17889   */\n      swap2\n      pop\n        /* \"#utility.yul\":17903:17921   */\n      tag_588\n        /* \"#utility.yul\":17919:17920   */\n      dup4\n        /* \"#utility.yul\":17903:17921   */\n      tag_350\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":17898:17921   */\n      swap3\n      pop\n        /* \"#utility.yul\":17945:17946   */\n      dup3\n        /* \"#utility.yul\":17942:17943   */\n      dup3\n        /* \"#utility.yul\":17938:17947   */\n      sub\n        /* \"#utility.yul\":17930:17947   */\n      swap1\n      pop\n        /* \"#utility.yul\":17969:17973   */\n      0xff\n        /* \"#utility.yul\":17963:17967   */\n      dup2\n        /* \"#utility.yul\":17960:17974   */\n      gt\n        /* \"#utility.yul\":17957:17997   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":17977:17995   */\n      tag_590\n      tag_359\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":17957:17997   */\n    tag_589:\n        /* \"#utility.yul\":17813:18004   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18010:18452   */\n    tag_308:\n        /* \"#utility.yul\":18159:18163   */\n      0x00\n        /* \"#utility.yul\":18197:18199   */\n      0x60\n        /* \"#utility.yul\":18186:18195   */\n      dup3\n        /* \"#utility.yul\":18182:18200   */\n      add\n        /* \"#utility.yul\":18174:18200   */\n      swap1\n      pop\n        /* \"#utility.yul\":18210:18281   */\n      tag_592\n        /* \"#utility.yul\":18278:18279   */\n      0x00\n        /* \"#utility.yul\":18267:18276   */\n      dup4\n        /* \"#utility.yul\":18263:18280   */\n      add\n        /* \"#utility.yul\":18254:18260   */\n      dup7\n        /* \"#utility.yul\":18210:18281   */\n      tag_352\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":18291:18363   */\n      tag_593\n        /* \"#utility.yul\":18359:18361   */\n      0x20\n        /* \"#utility.yul\":18348:18357   */\n      dup4\n        /* \"#utility.yul\":18344:18362   */\n      add\n        /* \"#utility.yul\":18335:18341   */\n      dup6\n        /* \"#utility.yul\":18291:18363   */\n      tag_352\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":18373:18445   */\n      tag_594\n        /* \"#utility.yul\":18441:18443   */\n      0x40\n        /* \"#utility.yul\":18430:18439   */\n      dup4\n        /* \"#utility.yul\":18426:18444   */\n      add\n        /* \"#utility.yul\":18417:18423   */\n      dup5\n        /* \"#utility.yul\":18373:18445   */\n      tag_345\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":18010:18452   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18458:18790   */\n    tag_320:\n        /* \"#utility.yul\":18579:18583   */\n      0x00\n        /* \"#utility.yul\":18617:18619   */\n      0x40\n        /* \"#utility.yul\":18606:18615   */\n      dup3\n        /* \"#utility.yul\":18602:18620   */\n      add\n        /* \"#utility.yul\":18594:18620   */\n      swap1\n      pop\n        /* \"#utility.yul\":18630:18701   */\n      tag_596\n        /* \"#utility.yul\":18698:18699   */\n      0x00\n        /* \"#utility.yul\":18687:18696   */\n      dup4\n        /* \"#utility.yul\":18683:18700   */\n      add\n        /* \"#utility.yul\":18674:18680   */\n      dup6\n        /* \"#utility.yul\":18630:18701   */\n      tag_352\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":18711:18783   */\n      tag_597\n        /* \"#utility.yul\":18779:18781   */\n      0x20\n        /* \"#utility.yul\":18768:18777   */\n      dup4\n        /* \"#utility.yul\":18764:18782   */\n      add\n        /* \"#utility.yul\":18755:18761   */\n      dup5\n        /* \"#utility.yul\":18711:18783   */\n      tag_345\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":18458:18790   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18796:19128   */\n    tag_325:\n        /* \"#utility.yul\":18917:18921   */\n      0x00\n        /* \"#utility.yul\":18955:18957   */\n      0x40\n        /* \"#utility.yul\":18944:18953   */\n      dup3\n        /* \"#utility.yul\":18940:18958   */\n      add\n        /* \"#utility.yul\":18932:18958   */\n      swap1\n      pop\n        /* \"#utility.yul\":18968:19039   */\n      tag_599\n        /* \"#utility.yul\":19036:19037   */\n      0x00\n        /* \"#utility.yul\":19025:19034   */\n      dup4\n        /* \"#utility.yul\":19021:19038   */\n      add\n        /* \"#utility.yul\":19012:19018   */\n      dup6\n        /* \"#utility.yul\":18968:19039   */\n      tag_352\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":19049:19121   */\n      tag_600\n        /* \"#utility.yul\":19117:19119   */\n      0x20\n        /* \"#utility.yul\":19106:19115   */\n      dup4\n        /* \"#utility.yul\":19102:19120   */\n      add\n        /* \"#utility.yul\":19093:19099   */\n      dup5\n        /* \"#utility.yul\":19049:19121   */\n      tag_343\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":18796:19128   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122069601f4bfdead2f9b62145d9c35aba2095c1dd3372d55863d615de5ef69cae4264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1392": {
									"entryPoint": null,
									"id": 1392,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_488": {
									"entryPoint": null,
									"id": 488,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 649,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1088": {
									"entryPoint": 993,
									"id": 1088,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_81": {
									"entryPoint": 894,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory": {
									"entryPoint": 1216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_18_by_1_to_t_uint8_fromStack": {
									"entryPoint": 1385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool_t_bool_t_rational_18_by_1_t_uint256_t_address__to_t_bool_t_bool_t_uint8_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 1430,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_18_by_1": {
									"entryPoint": 1322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_18_by_1_to_t_uint8": {
									"entryPoint": 1352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1071,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3553:12",
										"nodeType": "YulBlock",
										"src": "0:3553:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:32:12",
													"nodeType": "YulBlock",
													"src": "379:32:12",
													"statements": [
														{
															"nativeSrc": "389:16:12",
															"nodeType": "YulAssignment",
															"src": "389:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:12",
																"nodeType": "YulIdentifier",
																"src": "400:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:77:12"
											},
											{
												"body": {
													"nativeSrc": "460:79:12",
													"nodeType": "YulBlock",
													"src": "460:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:12",
																"nodeType": "YulBlock",
																"src": "517:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:12",
																					"nodeType": "YulLiteral",
																					"src": "526:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:12",
																					"nodeType": "YulLiteral",
																					"src": "529:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:12"
																			},
																			"nativeSrc": "519:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:12"
																		},
																		"nativeSrc": "519:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:12"
																				},
																				"nativeSrc": "490:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:12"
																		},
																		"nativeSrc": "480:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:12"
																},
																"nativeSrc": "473:43:12",
																"nodeType": "YulFunctionCall",
																"src": "473:43:12"
															},
															"nativeSrc": "470:63:12",
															"nodeType": "YulIf",
															"src": "470:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:12",
														"nodeType": "YulTypedName",
														"src": "453:5:12",
														"type": ""
													}
												],
												"src": "417:122:12"
											},
											{
												"body": {
													"nativeSrc": "608:80:12",
													"nodeType": "YulBlock",
													"src": "608:80:12",
													"statements": [
														{
															"nativeSrc": "618:22:12",
															"nodeType": "YulAssignment",
															"src": "618:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:12"
																},
																"nativeSrc": "627:13:12",
																"nodeType": "YulFunctionCall",
																"src": "627:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:12"
																},
																"nativeSrc": "649:33:12",
																"nodeType": "YulFunctionCall",
																"src": "649:33:12"
															},
															"nativeSrc": "649:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:12",
														"nodeType": "YulTypedName",
														"src": "586:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:12",
														"nodeType": "YulTypedName",
														"src": "594:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:12",
														"nodeType": "YulTypedName",
														"src": "602:5:12",
														"type": ""
													}
												],
												"src": "545:143:12"
											},
											{
												"body": {
													"nativeSrc": "739:81:12",
													"nodeType": "YulBlock",
													"src": "739:81:12",
													"statements": [
														{
															"nativeSrc": "749:65:12",
															"nodeType": "YulAssignment",
															"src": "749:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "764:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "771:42:12",
																		"nodeType": "YulLiteral",
																		"src": "771:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "760:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:12"
																},
																"nativeSrc": "760:54:12",
																"nodeType": "YulFunctionCall",
																"src": "760:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "749:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "694:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "721:5:12",
														"nodeType": "YulTypedName",
														"src": "721:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "731:7:12",
														"nodeType": "YulTypedName",
														"src": "731:7:12",
														"type": ""
													}
												],
												"src": "694:126:12"
											},
											{
												"body": {
													"nativeSrc": "871:51:12",
													"nodeType": "YulBlock",
													"src": "871:51:12",
													"statements": [
														{
															"nativeSrc": "881:35:12",
															"nodeType": "YulAssignment",
															"src": "881:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "910:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "910:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "892:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "892:17:12"
																},
																"nativeSrc": "892:24:12",
																"nodeType": "YulFunctionCall",
																"src": "892:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "881:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "881:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "826:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "853:5:12",
														"nodeType": "YulTypedName",
														"src": "853:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "863:7:12",
														"nodeType": "YulTypedName",
														"src": "863:7:12",
														"type": ""
													}
												],
												"src": "826:96:12"
											},
											{
												"body": {
													"nativeSrc": "971:79:12",
													"nodeType": "YulBlock",
													"src": "971:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:12",
																"nodeType": "YulBlock",
																"src": "1028:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:12"
																			},
																			"nativeSrc": "1030:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:12"
																		},
																		"nativeSrc": "1030:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1001:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:12"
																				},
																				"nativeSrc": "1001:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:12"
																		},
																		"nativeSrc": "991:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:12"
																},
																"nativeSrc": "984:43:12",
																"nodeType": "YulFunctionCall",
																"src": "984:43:12"
															},
															"nativeSrc": "981:63:12",
															"nodeType": "YulIf",
															"src": "981:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "928:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:12",
														"nodeType": "YulTypedName",
														"src": "964:5:12",
														"type": ""
													}
												],
												"src": "928:122:12"
											},
											{
												"body": {
													"nativeSrc": "1119:80:12",
													"nodeType": "YulBlock",
													"src": "1119:80:12",
													"statements": [
														{
															"nativeSrc": "1129:22:12",
															"nodeType": "YulAssignment",
															"src": "1129:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:12"
																},
																"nativeSrc": "1138:13:12",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1160:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:12"
																},
																"nativeSrc": "1160:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:12"
															},
															"nativeSrc": "1160:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1056:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:12",
														"nodeType": "YulTypedName",
														"src": "1097:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:12",
														"nodeType": "YulTypedName",
														"src": "1105:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:12",
														"nodeType": "YulTypedName",
														"src": "1113:5:12",
														"type": ""
													}
												],
												"src": "1056:143:12"
											},
											{
												"body": {
													"nativeSrc": "1316:552:12",
													"nodeType": "YulBlock",
													"src": "1316:552:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1362:83:12",
																"nodeType": "YulBlock",
																"src": "1362:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1364:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:12"
																			},
																			"nativeSrc": "1364:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:12"
																		},
																		"nativeSrc": "1364:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1337:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1333:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:12"
																		},
																		"nativeSrc": "1333:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1358:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1329:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:12"
																},
																"nativeSrc": "1329:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1329:32:12"
															},
															"nativeSrc": "1326:119:12",
															"nodeType": "YulIf",
															"src": "1326:119:12"
														},
														{
															"nativeSrc": "1455:128:12",
															"nodeType": "YulBlock",
															"src": "1455:128:12",
															"statements": [
																{
																	"nativeSrc": "1470:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1484:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1474:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1499:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1499:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1545:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1556:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1541:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:12"
																				},
																				"nativeSrc": "1541:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1565:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1509:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:12"
																		},
																		"nativeSrc": "1509:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1499:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1593:129:12",
															"nodeType": "YulBlock",
															"src": "1593:129:12",
															"statements": [
																{
																	"nativeSrc": "1608:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1622:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1612:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1638:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1638:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1684:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1695:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1680:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:12"
																				},
																				"nativeSrc": "1680:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1704:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1648:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:12"
																		},
																		"nativeSrc": "1648:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1638:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1732:129:12",
															"nodeType": "YulBlock",
															"src": "1732:129:12",
															"statements": [
																{
																	"nativeSrc": "1747:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1761:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1751:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1777:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1777:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1823:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1834:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1819:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:12"
																				},
																				"nativeSrc": "1819:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1787:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:12"
																		},
																		"nativeSrc": "1787:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1777:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory",
												"nativeSrc": "1205:663:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1270:9:12",
														"nodeType": "YulTypedName",
														"src": "1270:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1281:7:12",
														"nodeType": "YulTypedName",
														"src": "1281:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1293:6:12",
														"nodeType": "YulTypedName",
														"src": "1293:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1301:6:12",
														"nodeType": "YulTypedName",
														"src": "1301:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1309:6:12",
														"nodeType": "YulTypedName",
														"src": "1309:6:12",
														"type": ""
													}
												],
												"src": "1205:663:12"
											},
											{
												"body": {
													"nativeSrc": "1916:48:12",
													"nodeType": "YulBlock",
													"src": "1916:48:12",
													"statements": [
														{
															"nativeSrc": "1926:32:12",
															"nodeType": "YulAssignment",
															"src": "1926:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1951:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1951:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1944:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1944:6:12"
																		},
																		"nativeSrc": "1944:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1944:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1937:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1937:6:12"
																},
																"nativeSrc": "1937:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1937:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1926:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1926:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1874:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:12",
														"nodeType": "YulTypedName",
														"src": "1898:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1908:7:12",
														"nodeType": "YulTypedName",
														"src": "1908:7:12",
														"type": ""
													}
												],
												"src": "1874:90:12"
											},
											{
												"body": {
													"nativeSrc": "2029:50:12",
													"nodeType": "YulBlock",
													"src": "2029:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2046:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2046:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2066:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2066:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2051:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "2051:14:12"
																		},
																		"nativeSrc": "2051:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2051:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2039:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2039:6:12"
																},
																"nativeSrc": "2039:34:12",
																"nodeType": "YulFunctionCall",
																"src": "2039:34:12"
															},
															"nativeSrc": "2039:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "2039:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1970:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2017:5:12",
														"nodeType": "YulTypedName",
														"src": "2017:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2024:3:12",
														"nodeType": "YulTypedName",
														"src": "2024:3:12",
														"type": ""
													}
												],
												"src": "1970:109:12"
											},
											{
												"body": {
													"nativeSrc": "2139:32:12",
													"nodeType": "YulBlock",
													"src": "2139:32:12",
													"statements": [
														{
															"nativeSrc": "2149:16:12",
															"nodeType": "YulAssignment",
															"src": "2149:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "2160:5:12",
																"nodeType": "YulIdentifier",
																"src": "2160:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2149:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2149:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_18_by_1",
												"nativeSrc": "2085:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2121:5:12",
														"nodeType": "YulTypedName",
														"src": "2121:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2131:7:12",
														"nodeType": "YulTypedName",
														"src": "2131:7:12",
														"type": ""
													}
												],
												"src": "2085:86:12"
											},
											{
												"body": {
													"nativeSrc": "2220:43:12",
													"nodeType": "YulBlock",
													"src": "2220:43:12",
													"statements": [
														{
															"nativeSrc": "2230:27:12",
															"nodeType": "YulAssignment",
															"src": "2230:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2245:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2245:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2252:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2252:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2241:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2241:3:12"
																},
																"nativeSrc": "2241:16:12",
																"nodeType": "YulFunctionCall",
																"src": "2241:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2230:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2230:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "2177:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2202:5:12",
														"nodeType": "YulTypedName",
														"src": "2202:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2212:7:12",
														"nodeType": "YulTypedName",
														"src": "2212:7:12",
														"type": ""
													}
												],
												"src": "2177:86:12"
											},
											{
												"body": {
													"nativeSrc": "2301:28:12",
													"nodeType": "YulBlock",
													"src": "2301:28:12",
													"statements": [
														{
															"nativeSrc": "2311:12:12",
															"nodeType": "YulAssignment",
															"src": "2311:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "2318:5:12",
																"nodeType": "YulIdentifier",
																"src": "2318:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2311:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2311:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2269:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2287:5:12",
														"nodeType": "YulTypedName",
														"src": "2287:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2297:3:12",
														"nodeType": "YulTypedName",
														"src": "2297:3:12",
														"type": ""
													}
												],
												"src": "2269:60:12"
											},
											{
												"body": {
													"nativeSrc": "2402:89:12",
													"nodeType": "YulBlock",
													"src": "2402:89:12",
													"statements": [
														{
															"nativeSrc": "2412:73:12",
															"nodeType": "YulAssignment",
															"src": "2412:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2477:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2477:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_18_by_1",
																					"nativeSrc": "2450:26:12",
																					"nodeType": "YulIdentifier",
																					"src": "2450:26:12"
																				},
																				"nativeSrc": "2450:33:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2450:33:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2441:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "2441:8:12"
																		},
																		"nativeSrc": "2441:43:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2441:43:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "2425:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "2425:15:12"
																},
																"nativeSrc": "2425:60:12",
																"nodeType": "YulFunctionCall",
																"src": "2425:60:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2412:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "2412:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_18_by_1_to_t_uint8",
												"nativeSrc": "2335:156:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2382:5:12",
														"nodeType": "YulTypedName",
														"src": "2382:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2392:9:12",
														"nodeType": "YulTypedName",
														"src": "2392:9:12",
														"type": ""
													}
												],
												"src": "2335:156:12"
											},
											{
												"body": {
													"nativeSrc": "2569:73:12",
													"nodeType": "YulBlock",
													"src": "2569:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2586:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2586:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2629:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2629:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_18_by_1_to_t_uint8",
																			"nativeSrc": "2591:37:12",
																			"nodeType": "YulIdentifier",
																			"src": "2591:37:12"
																		},
																		"nativeSrc": "2591:44:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2591:44:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2579:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2579:6:12"
																},
																"nativeSrc": "2579:57:12",
																"nodeType": "YulFunctionCall",
																"src": "2579:57:12"
															},
															"nativeSrc": "2579:57:12",
															"nodeType": "YulExpressionStatement",
															"src": "2579:57:12"
														}
													]
												},
												"name": "abi_encode_t_rational_18_by_1_to_t_uint8_fromStack",
												"nativeSrc": "2497:145:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2557:5:12",
														"nodeType": "YulTypedName",
														"src": "2557:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2564:3:12",
														"nodeType": "YulTypedName",
														"src": "2564:3:12",
														"type": ""
													}
												],
												"src": "2497:145:12"
											},
											{
												"body": {
													"nativeSrc": "2713:53:12",
													"nodeType": "YulBlock",
													"src": "2713:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2730:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2730:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2753:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2753:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2735:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "2735:17:12"
																		},
																		"nativeSrc": "2735:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2735:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2723:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2723:6:12"
																},
																"nativeSrc": "2723:37:12",
																"nodeType": "YulFunctionCall",
																"src": "2723:37:12"
															},
															"nativeSrc": "2723:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "2723:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2648:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2701:5:12",
														"nodeType": "YulTypedName",
														"src": "2701:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2708:3:12",
														"nodeType": "YulTypedName",
														"src": "2708:3:12",
														"type": ""
													}
												],
												"src": "2648:118:12"
											},
											{
												"body": {
													"nativeSrc": "2837:53:12",
													"nodeType": "YulBlock",
													"src": "2837:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2854:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2854:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2877:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2877:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2859:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "2859:17:12"
																		},
																		"nativeSrc": "2859:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2859:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2847:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2847:6:12"
																},
																"nativeSrc": "2847:37:12",
																"nodeType": "YulFunctionCall",
																"src": "2847:37:12"
															},
															"nativeSrc": "2847:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "2847:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2772:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2825:5:12",
														"nodeType": "YulTypedName",
														"src": "2825:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2832:3:12",
														"nodeType": "YulTypedName",
														"src": "2832:3:12",
														"type": ""
													}
												],
												"src": "2772:118:12"
											},
											{
												"body": {
													"nativeSrc": "3101:449:12",
													"nodeType": "YulBlock",
													"src": "3101:449:12",
													"statements": [
														{
															"nativeSrc": "3111:27:12",
															"nodeType": "YulAssignment",
															"src": "3111:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3123:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3123:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3134:3:12",
																		"nodeType": "YulLiteral",
																		"src": "3134:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3119:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3119:3:12"
																},
																"nativeSrc": "3119:19:12",
																"nodeType": "YulFunctionCall",
																"src": "3119:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3111:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3111:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3186:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3186:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3199:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3199:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3210:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3210:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3195:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3195:3:12"
																		},
																		"nativeSrc": "3195:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3195:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3148:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "3148:37:12"
																},
																"nativeSrc": "3148:65:12",
																"nodeType": "YulFunctionCall",
																"src": "3148:65:12"
															},
															"nativeSrc": "3148:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "3148:65:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3261:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3261:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3274:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3274:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3285:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3285:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3270:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3270:3:12"
																		},
																		"nativeSrc": "3270:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3270:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3223:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "3223:37:12"
																},
																"nativeSrc": "3223:66:12",
																"nodeType": "YulFunctionCall",
																"src": "3223:66:12"
															},
															"nativeSrc": "3223:66:12",
															"nodeType": "YulExpressionStatement",
															"src": "3223:66:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3350:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3350:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3363:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3363:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3374:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3374:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3359:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3359:3:12"
																		},
																		"nativeSrc": "3359:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3359:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_18_by_1_to_t_uint8_fromStack",
																	"nativeSrc": "3299:50:12",
																	"nodeType": "YulIdentifier",
																	"src": "3299:50:12"
																},
																"nativeSrc": "3299:79:12",
																"nodeType": "YulFunctionCall",
																"src": "3299:79:12"
															},
															"nativeSrc": "3299:79:12",
															"nodeType": "YulExpressionStatement",
															"src": "3299:79:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "3432:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3432:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3445:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3445:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3456:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3456:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3441:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3441:3:12"
																		},
																		"nativeSrc": "3441:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3388:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "3388:43:12"
																},
																"nativeSrc": "3388:72:12",
																"nodeType": "YulFunctionCall",
																"src": "3388:72:12"
															},
															"nativeSrc": "3388:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "3388:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "3514:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3514:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3527:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3527:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3538:3:12",
																				"nodeType": "YulLiteral",
																				"src": "3538:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3523:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3523:3:12"
																		},
																		"nativeSrc": "3523:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3523:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3470:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "3470:43:12"
																},
																"nativeSrc": "3470:73:12",
																"nodeType": "YulFunctionCall",
																"src": "3470:73:12"
															},
															"nativeSrc": "3470:73:12",
															"nodeType": "YulExpressionStatement",
															"src": "3470:73:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bool_t_rational_18_by_1_t_uint256_t_address__to_t_bool_t_bool_t_uint8_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "2896:654:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3041:9:12",
														"nodeType": "YulTypedName",
														"src": "3041:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3053:6:12",
														"nodeType": "YulTypedName",
														"src": "3053:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3061:6:12",
														"nodeType": "YulTypedName",
														"src": "3061:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3069:6:12",
														"nodeType": "YulTypedName",
														"src": "3069:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3077:6:12",
														"nodeType": "YulTypedName",
														"src": "3077:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3085:6:12",
														"nodeType": "YulTypedName",
														"src": "3085:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3096:4:12",
														"nodeType": "YulTypedName",
														"src": "3096:4:12",
														"type": ""
													}
												],
												"src": "2896:654:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function cleanup_t_rational_18_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_18_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_18_by_1(value)))\n    }\n\n    function abi_encode_t_rational_18_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_18_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_bool_t_rational_18_by_1_t_uint256_t_address__to_t_bool_t_bool_t_uint8_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_18_by_1_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f80fd5b5060405161349f38038061349f833981810160405281019061003191906104c0565b600180819055505f8303610071576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b826080818152505061008b5f801b3361028960201b60201c565b506100bc7f2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca0250963361028960201b60201c565b506100c56103e8565b6001815f01901515908115158152505060018160200190151590811515815250506012816040019060ff16908160ff16815250508181606001818152505082816080019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508060065f8073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548160ff0219169083151502179055506020820151815f0160016101000a81548160ff0219169083151502179055506040820151815f0160026101000a81548160ff021916908360ff160217905550606082015181600101556080820151816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050505f73ffffffffffffffffffffffffffffffffffffffff167fceec6d18b470b58eabbfc22b7d771c54609acb2bbe777747424f6e9a5a9d5a2560018060128688604051610278959493929190610596565b60405180910390a2505050506105e7565b5f61029a838361037e60201b60201c565b6103745760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506103116103e160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610378565b5f90505b92915050565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b6040518060a001604052805f151581526020015f151581526020015f60ff1681526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090565b5f80fd5b5f819050919050565b61044581610433565b811461044f575f80fd5b50565b5f815190506104608161043c565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61048f82610466565b9050919050565b61049f81610485565b81146104a9575f80fd5b50565b5f815190506104ba81610496565b92915050565b5f805f606084860312156104d7576104d661042f565b5b5f6104e486828701610452565b93505060206104f5868287016104ac565b925050604061050686828701610452565b9150509250925092565b5f8115159050919050565b61052481610510565b82525050565b5f819050919050565b5f60ff82169050919050565b5f819050919050565b5f61056261055d6105588461052a565b61053f565b610533565b9050919050565b61057281610548565b82525050565b61058181610433565b82525050565b61059081610485565b82525050565b5f60a0820190506105a95f83018861051b565b6105b6602083018761051b565b6105c36040830186610569565b6105d06060830185610578565b6105dd6080830184610587565b9695505050505050565b608051612e8461061b5f395f81816107430152818161076c01528181610af801528181610b210152611b9b0152612e845ff3fe608060405260043610610134575f3560e01c806391d14854116100aa578063d391014b1161006e578063d391014b146103e2578063d547741f1461040c578063dcb6e25014610434578063f8b2cb4f14610470578063f9bda21f146104ac578063fe136c4e146104d657610134565b806391d14854146103045780639c50adee146103405780639e281a9814610368578063a217fddf14610390578063c311d049146103ba57610134565b80632f6ee695116100fc5780632f6ee6951461022c57806331f7d96414610256578063338b5dea1461028057806336568abe146102a8578063439370b1146102d05780634cc05a71146102da57610134565b806301ffc9a714610138578063248a9ca31461017457806329608ba6146101b05780632dfdf0b5146101da5780632f2ff15d14610204575b5f80fd5b348015610143575f80fd5b5061015e6004803603810190610159919061247b565b610516565b60405161016b91906124c0565b60405180910390f35b34801561017f575f80fd5b5061019a6004803603810190610195919061250c565b61058f565b6040516101a79190612546565b60405180910390f35b3480156101bb575f80fd5b506101c46105ab565b6040516101d19190612577565b60405180910390f35b3480156101e5575f80fd5b506101ee6105b1565b6040516101fb9190612577565b60405180910390f35b34801561020f575f80fd5b5061022a600480360381019061022591906125ea565b6105b7565b005b348015610237575f80fd5b506102406105d9565b60405161024d9190612643565b60405180910390f35b348015610261575f80fd5b5061026a6105de565b604051610277919061266b565b60405180910390f35b34801561028b575f80fd5b506102a660048036038101906102a191906126ae565b6105e2565b005b3480156102b3575f80fd5b506102ce60048036038101906102c991906125ea565b61098d565b005b6102d8610a08565b005b3480156102e5575f80fd5b506102ee610d12565b6040516102fb9190612577565b60405180910390f35b34801561030f575f80fd5b5061032a600480360381019061032591906125ea565b610d18565b60405161033791906124c0565b60405180910390f35b34801561034b575f80fd5b5061036660048036038101906103619190612740565b610d7b565b005b348015610373575f80fd5b5061038e600480360381019061038991906126ae565b61101c565b005b34801561039b575f80fd5b506103a461152b565b6040516103b19190612546565b60405180910390f35b3480156103c5575f80fd5b506103e060048036038101906103db91906127b7565b611531565b005b3480156103ed575f80fd5b506103f6611a42565b6040516104039190612546565b60405180910390f35b348015610417575f80fd5b50610432600480360381019061042d91906125ea565b611a66565b005b34801561043f575f80fd5b5061045a600480360381019061045591906127e2565b611a88565b6040516104679190612577565b60405180910390f35b34801561047b575f80fd5b5061049660048036038101906104919190612820565b611b18565b6040516104a39190612577565b60405180910390f35b3480156104b7575f80fd5b506104c0611b99565b6040516104cd9190612577565b60405180910390f35b3480156104e1575f80fd5b506104fc60048036038101906104f79190612820565b611bbd565b60405161050d95949392919061284b565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610588575061058782611c32565b5b9050919050565b5f805f8381526020019081526020015f20600101549050919050565b60025481565b60035481565b6105c08261058f565b6105c981611c9b565b6105d38383611caf565b50505050565b600681565b5f81565b6105ea611d98565b805f8103610624576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361069557806040517fbf16aab600000000000000000000000000000000000000000000000000000000815260040161068c919061266b565b60405180910390fd5b8360065f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff1661072357806040517fbf16aab600000000000000000000000000000000000000000000000000000000815260040161071a919061266b565b60405180910390fd5b5f61072e8686611de7565b90505f8160025461073f91906128c9565b90507f00000000000000000000000000000000000000000000000000000000000000008111156107c857807f00000000000000000000000000000000000000000000000000000000000000006040517ff480e2850000000000000000000000000000000000000000000000000000000081526004016107bf9291906128fc565b60405180910390fd5b8560055f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461084f91906128c9565b925050819055508060028190555060035f815480929190600101919050555061089b3330888a73ffffffffffffffffffffffffffffffffffffffff1661213c909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f4e2ca0515ed1aef1395f66b5303bb5d6f1bf9d61a353fa53f73f8ac9973fa9f68860055f8c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548660405161097493929190612923565b60405180910390a350505050506109896121be565b5050565b6109956121c7565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109f9576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a0382826121ce565b505050565b610a10611d98565b345f8103610a4a576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60065f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff16610ad857806040517fbf16aab6000000000000000000000000000000000000000000000000000000008152600401610acf919061266b565b60405180910390fd5b5f610ae35f34611de7565b90505f81600254610af491906128c9565b90507f0000000000000000000000000000000000000000000000000000000000000000811115610b7d57807f00000000000000000000000000000000000000000000000000000000000000006040517ff480e285000000000000000000000000000000000000000000000000000000008152600401610b749291906128fc565b60405180910390fd5b3460055f8073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610c0491906128c9565b925050819055508060028190555060035f81548092919060010191905055503373ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167f4e2ca0515ed1aef1395f66b5303bb5d6f1bf9d61a353fa53f73f8ac9973fa9f63460055f8073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205486604051610cfc93929190612923565b60405180910390a350505050610d106121be565b565b60045481565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b7f2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096610da581611c9b565b5f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603610e1557856040517fbf16aab6000000000000000000000000000000000000000000000000000000008152600401610e0c919061266b565b60405180910390fd5b5f60065f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905085815f015f6101000a81548160ff0219169083151502179055505f815f0160016101000a81548160ff0219169083151502179055505f8560ff1603610f45578673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610efc57506040513d601f19601f82011682018060405250810190610ef9919061296c565b60015b610f22576012815f0160026101000a81548160ff021916908360ff160217905550610f40565b80825f0160026101000a81548160ff021916908360ff160217905550505b610f62565b84815f0160026101000a81548160ff021916908360ff1602179055505b83816001018190555082816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508673ffffffffffffffffffffffffffffffffffffffff167fceec6d18b470b58eabbfc22b7d771c54609acb2bbe777747424f6e9a5a9d5a25875f845f0160029054906101000a900460ff16888860405161100b95949392919061284b565b60405180910390a250505050505050565b611024611d98565b805f810361105e576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110cf57806040517fbf16aab60000000000000000000000000000000000000000000000000000000081526004016110c6919061266b565b60405180910390fd5b8360065f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff1661115d57806040517fbf16aab6000000000000000000000000000000000000000000000000000000008152600401611154919061266b565b60405180910390fd5b84845f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060a00160405290815f82015f9054906101000a900460ff161515151581526020015f820160019054906101000a900460ff161515151581526020015f820160029054906101000a900460ff1660ff1660ff16815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905080606001518211156112a7578181606001516040517f016d0ef100000000000000000000000000000000000000000000000000000000815260040161129e9291906128fc565b60405180910390fd5b5f60055f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508781101561136a5780886040517fcf4791810000000000000000000000000000000000000000000000000000000081526004016113619291906128fc565b60405180910390fd5b87816113769190612997565b60055f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060045f815480929190600101919050555061142e33898b73ffffffffffffffffffffffffffffffffffffffff166122b79092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167febff2602b3f468259e1e99f613fed6691f3a6526effe6ef3e768ba7ae7a36c4f8a60055f8e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546115018e8e611de7565b60405161151093929190612923565b60405180910390a3505050505050506115276121be565b5050565b5f801b81565b611539611d98565b805f8103611573576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60065f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff1661160157806040517fbf16aab60000000000000000000000000000000000000000000000000000000081526004016115f8919061266b565b60405180910390fd5b5f835f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060a00160405290815f82015f9054906101000a900460ff161515151581526020015f820160019054906101000a900460ff161515151581526020015f820160029054906101000a900460ff1660ff1660ff16815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050806060015182111561174b578181606001516040517f016d0ef10000000000000000000000000000000000000000000000000000000081526004016117429291906128fc565b60405180910390fd5b5f60055f8073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508681101561180e5780876040517fcf4791810000000000000000000000000000000000000000000000000000000081526004016118059291906128fc565b60405180910390fd5b868161181a9190612997565b60055f8073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060045f81548092919060010191905055505f3373ffffffffffffffffffffffffffffffffffffffff16886040516118cc906129f7565b5f6040518083038185875af1925050503d805f8114611906576040519150601f19603f3d011682016040523d82523d5f602084013e61190b565b606091505b5050905080611946576040517f6d963f8800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167febff2602b3f468259e1e99f613fed6691f3a6526effe6ef3e768ba7ae7a36c4f8a60055f8073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611a195f8e611de7565b604051611a2893929190612923565b60405180910390a350505050505050611a3f6121be565b50565b7f2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca02509681565b611a6f8261058f565b611a7881611c9b565b611a8283836121ce565b50505050565b5f8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050611b0f8482611de7565b91505092915050565b5f60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6006602052805f5260405f205f91509050805f015f9054906101000a900460ff1690805f0160019054906101000a900460ff1690805f0160029054906101000a900460ff1690806001015490806002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905085565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611cac81611ca76121c7565b612336565b50565b5f611cba8383610d18565b611d8e5760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611d2b6121c7565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611d92565b5f90505b92915050565b600260015403611ddd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dd490612a65565b60405180910390fd5b6002600181905550565b5f808203611df7575f9050612136565b5f60065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060a00160405290815f82015f9054906101000a900460ff161515151581526020015f820160019054906101000a900460ff161515151581526020015f820160029054906101000a900460ff1660ff1660ff16815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090505f816080015190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611f6857846040517f8a7a791d000000000000000000000000000000000000000000000000000000008152600401611f5f919061266b565b60405180910390fd5b5f8173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611fb2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fd69190612b09565b5050509150505f8113612015576040517f4fd58d4b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561205f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612083919061296c565b90505f82876120929190612b80565b90505f8260ff1611156120ba5781600a6120ac9190612cf0565b816120b79190612d67565b90505b600660ff16856040015160ff1610612100575f600686604001516120de9190612d97565b600a6120ea9190612cf0565b905080826120f89190612d67565b965050612130565b5f856040015160066121129190612d97565b600a61211e9190612cf0565b9050808261212c9190612b80565b9650505b50505050505b92915050565b6121b8848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161217193929190612dcb565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612387565b50505050565b60018081905550565b5f33905090565b5f6121d98383610d18565b156122ad575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061224a6121c7565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506122b1565b5f90505b92915050565b612331838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016122ea929190612e00565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612387565b505050565b6123408282610d18565b6123835780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161237a929190612e27565b60405180910390fd5b5050565b5f8060205f8451602086015f885af1806123a6576040513d5f823e3d81fd5b3d92505f519150505f82146123bf5760018114156123da565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561241c57836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401612413919061266b565b60405180910390fd5b50505050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61245a81612426565b8114612464575f80fd5b50565b5f8135905061247581612451565b92915050565b5f602082840312156124905761248f612422565b5b5f61249d84828501612467565b91505092915050565b5f8115159050919050565b6124ba816124a6565b82525050565b5f6020820190506124d35f8301846124b1565b92915050565b5f819050919050565b6124eb816124d9565b81146124f5575f80fd5b50565b5f81359050612506816124e2565b92915050565b5f6020828403121561252157612520612422565b5b5f61252e848285016124f8565b91505092915050565b612540816124d9565b82525050565b5f6020820190506125595f830184612537565b92915050565b5f819050919050565b6125718161255f565b82525050565b5f60208201905061258a5f830184612568565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6125b982612590565b9050919050565b6125c9816125af565b81146125d3575f80fd5b50565b5f813590506125e4816125c0565b92915050565b5f8060408385031215612600576125ff612422565b5b5f61260d858286016124f8565b925050602061261e858286016125d6565b9150509250929050565b5f60ff82169050919050565b61263d81612628565b82525050565b5f6020820190506126565f830184612634565b92915050565b612665816125af565b82525050565b5f60208201905061267e5f83018461265c565b92915050565b61268d8161255f565b8114612697575f80fd5b50565b5f813590506126a881612684565b92915050565b5f80604083850312156126c4576126c3612422565b5b5f6126d1858286016125d6565b92505060206126e28582860161269a565b9150509250929050565b6126f5816124a6565b81146126ff575f80fd5b50565b5f81359050612710816126ec565b92915050565b61271f81612628565b8114612729575f80fd5b50565b5f8135905061273a81612716565b92915050565b5f805f805f60a0868803121561275957612758612422565b5b5f612766888289016125d6565b955050602061277788828901612702565b94505060406127888882890161272c565b93505060606127998882890161269a565b92505060806127aa888289016125d6565b9150509295509295909350565b5f602082840312156127cc576127cb612422565b5b5f6127d98482850161269a565b91505092915050565b5f80604083850312156127f8576127f7612422565b5b5f612805858286016125d6565b9250506020612816858286016125d6565b9150509250929050565b5f6020828403121561283557612834612422565b5b5f612842848285016125d6565b91505092915050565b5f60a08201905061285e5f8301886124b1565b61286b60208301876124b1565b6128786040830186612634565b6128856060830185612568565b612892608083018461265c565b9695505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6128d38261255f565b91506128de8361255f565b92508282019050808211156128f6576128f561289c565b5b92915050565b5f60408201905061290f5f830185612568565b61291c6020830184612568565b9392505050565b5f6060820190506129365f830186612568565b6129436020830185612568565b6129506040830184612568565b949350505050565b5f8151905061296681612716565b92915050565b5f6020828403121561298157612980612422565b5b5f61298e84828501612958565b91505092915050565b5f6129a18261255f565b91506129ac8361255f565b92508282039050818111156129c4576129c361289c565b5b92915050565b5f81905092915050565b50565b5f6129e25f836129ca565b91506129ed826129d4565b5f82019050919050565b5f612a01826129d7565b9150819050919050565b5f82825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612a4f601f83612a0b565b9150612a5a82612a1b565b602082019050919050565b5f6020820190508181035f830152612a7c81612a43565b9050919050565b5f69ffffffffffffffffffff82169050919050565b612aa181612a83565b8114612aab575f80fd5b50565b5f81519050612abc81612a98565b92915050565b5f819050919050565b612ad481612ac2565b8114612ade575f80fd5b50565b5f81519050612aef81612acb565b92915050565b5f81519050612b0381612684565b92915050565b5f805f805f60a08688031215612b2257612b21612422565b5b5f612b2f88828901612aae565b9550506020612b4088828901612ae1565b9450506040612b5188828901612af5565b9350506060612b6288828901612af5565b9250506080612b7388828901612aae565b9150509295509295909350565b5f612b8a8261255f565b9150612b958361255f565b9250828202612ba38161255f565b91508282048414831517612bba57612bb961289c565b5b5092915050565b5f8160011c9050919050565b5f808291508390505b6001851115612c1657808604811115612bf257612bf161289c565b5b6001851615612c015780820291505b8081029050612c0f85612bc1565b9450612bd6565b94509492505050565b5f82612c2e5760019050612ce9565b81612c3b575f9050612ce9565b8160018114612c515760028114612c5b57612c8a565b6001915050612ce9565b60ff841115612c6d57612c6c61289c565b5b8360020a915084821115612c8457612c8361289c565b5b50612ce9565b5060208310610133831016604e8410600b8410161715612cbf5782820a905083811115612cba57612cb961289c565b5b612ce9565b612ccc8484846001612bcd565b92509050818404811115612ce357612ce261289c565b5b81810290505b9392505050565b5f612cfa8261255f565b9150612d0583612628565b9250612d327fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612c1f565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612d718261255f565b9150612d7c8361255f565b925082612d8c57612d8b612d3a565b5b828204905092915050565b5f612da182612628565b9150612dac83612628565b9250828203905060ff811115612dc557612dc461289c565b5b92915050565b5f606082019050612dde5f83018661265c565b612deb602083018561265c565b612df86040830184612568565b949350505050565b5f604082019050612e135f83018561265c565b612e206020830184612568565b9392505050565b5f604082019050612e3a5f83018561265c565b612e476020830184612537565b939250505056fea264697066735822122069601f4bfdead2f9b62145d9c35aba2095c1dd3372d55863d615de5ef69cae4264736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x349F CODESIZE SUB DUP1 PUSH2 0x349F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 DUP4 SUB PUSH2 0x71 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F2A200500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP PUSH2 0x8B PUSH0 DUP1 SHL CALLER PUSH2 0x289 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xBC PUSH32 0x2172861495E7B85EDAC73E3CD5FBB42DD675BAADF627720E687BCFDACA025096 CALLER PUSH2 0x289 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xC5 PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH1 0x20 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH1 0x12 DUP2 PUSH1 0x40 ADD SWAP1 PUSH1 0xFF AND SWAP1 DUP2 PUSH1 0xFF AND DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x80 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH1 0x6 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCEEC6D18B470B58EABBFC22B7D771C54609ACB2BBE777747424F6E9A5A9D5A25 PUSH1 0x1 DUP1 PUSH1 0x12 DUP7 DUP9 PUSH1 0x40 MLOAD PUSH2 0x278 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x596 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP PUSH2 0x5E7 JUMP JUMPDEST PUSH0 PUSH2 0x29A DUP4 DUP4 PUSH2 0x37E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x374 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x311 PUSH2 0x3E1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x378 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x445 DUP2 PUSH2 0x433 JUMP JUMPDEST DUP2 EQ PUSH2 0x44F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x460 DUP2 PUSH2 0x43C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x48F DUP3 PUSH2 0x466 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49F DUP2 PUSH2 0x485 JUMP JUMPDEST DUP2 EQ PUSH2 0x4A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x4BA DUP2 PUSH2 0x496 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4D7 JUMPI PUSH2 0x4D6 PUSH2 0x42F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4E4 DUP7 DUP3 DUP8 ADD PUSH2 0x452 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4F5 DUP7 DUP3 DUP8 ADD PUSH2 0x4AC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x506 DUP7 DUP3 DUP8 ADD PUSH2 0x452 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x524 DUP2 PUSH2 0x510 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x562 PUSH2 0x55D PUSH2 0x558 DUP5 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x53F JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x572 DUP2 PUSH2 0x548 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x581 DUP2 PUSH2 0x433 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x590 DUP2 PUSH2 0x485 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x5A9 PUSH0 DUP4 ADD DUP9 PUSH2 0x51B JUMP JUMPDEST PUSH2 0x5B6 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x51B JUMP JUMPDEST PUSH2 0x5C3 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x569 JUMP JUMPDEST PUSH2 0x5D0 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x578 JUMP JUMPDEST PUSH2 0x5DD PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x587 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2E84 PUSH2 0x61B PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x743 ADD MSTORE DUP2 DUP2 PUSH2 0x76C ADD MSTORE DUP2 DUP2 PUSH2 0xAF8 ADD MSTORE DUP2 DUP2 PUSH2 0xB21 ADD MSTORE PUSH2 0x1B9B ADD MSTORE PUSH2 0x2E84 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x134 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0xAA JUMPI DUP1 PUSH4 0xD391014B GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xD391014B EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0xDCB6E250 EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xF9BDA21F EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0xFE136C4E EQ PUSH2 0x4D6 JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x9C50ADEE EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x9E281A98 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xC311D049 EQ PUSH2 0x3BA JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x2F6EE695 GT PUSH2 0xFC JUMPI DUP1 PUSH4 0x2F6EE695 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x31F7D964 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x338B5DEA EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x439370B1 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x4CC05A71 EQ PUSH2 0x2DA JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x29608BA6 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x2DFDF0B5 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x204 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x247B JUMP JUMPDEST PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x24C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x250C JUMP JUMPDEST PUSH2 0x58F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x25EA JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x2643 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x261 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x26AE JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x25EA JUMP JUMPDEST PUSH2 0x98D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D8 PUSH2 0xA08 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x25EA JUMP JUMPDEST PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x24C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x366 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x2740 JUMP JUMPDEST PUSH2 0xD7B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x373 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x26AE JUMP JUMPDEST PUSH2 0x101C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A4 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x27B7 JUMP JUMPDEST PUSH2 0x1531 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F6 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x432 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x25EA JUMP JUMPDEST PUSH2 0x1A66 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x45A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x27E2 JUMP JUMPDEST PUSH2 0x1A88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x496 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x2820 JUMP JUMPDEST PUSH2 0x1B18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0x1B99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0x2820 JUMP JUMPDEST PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x284B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x588 JUMPI POP PUSH2 0x587 DUP3 PUSH2 0x1C32 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5C0 DUP3 PUSH2 0x58F JUMP JUMPDEST PUSH2 0x5C9 DUP2 PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0x5D3 DUP4 DUP4 PUSH2 0x1CAF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 JUMP JUMPDEST PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x5EA PUSH2 0x1D98 JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F2A200500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x695 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xBF16AAB600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68C SWAP2 SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x6 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x723 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xBF16AAB600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71A SWAP2 SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x72E DUP7 DUP7 PUSH2 0x1DE7 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x2 SLOAD PUSH2 0x73F SWAP2 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 GT ISZERO PUSH2 0x7C8 JUMPI DUP1 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0xF480E28500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BF SWAP3 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x5 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x84F SWAP2 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH2 0x89B CALLER ADDRESS DUP9 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x213C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4E2CA0515ED1AEF1395F66B5303BB5D6F1BF9D61A353FA53F73F8AC9973FA9F6 DUP9 PUSH1 0x5 PUSH0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP7 PUSH1 0x40 MLOAD PUSH2 0x974 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2923 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP PUSH2 0x989 PUSH2 0x21BE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x995 PUSH2 0x21C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA03 DUP3 DUP3 PUSH2 0x21CE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA10 PUSH2 0x1D98 JUMP JUMPDEST CALLVALUE PUSH0 DUP2 SUB PUSH2 0xA4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F2A200500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAD8 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xBF16AAB600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACF SWAP2 SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xAE3 PUSH0 CALLVALUE PUSH2 0x1DE7 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x2 SLOAD PUSH2 0xAF4 SWAP2 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 GT ISZERO PUSH2 0xB7D JUMPI DUP1 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0xF480E28500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB74 SWAP3 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x5 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC04 SWAP2 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4E2CA0515ED1AEF1395F66B5303BB5D6F1BF9D61A353FA53F73F8AC9973FA9F6 CALLVALUE PUSH1 0x5 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP7 PUSH1 0x40 MLOAD PUSH2 0xCFC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2923 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH2 0xD10 PUSH2 0x21BE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2172861495E7B85EDAC73E3CD5FBB42DD675BAADF627720E687BCFDACA025096 PUSH2 0xDA5 DUP2 PUSH2 0x1C9B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE15 JUMPI DUP6 PUSH1 0x40 MLOAD PUSH32 0xBF16AAB600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0C SWAP2 SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP6 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 DUP6 PUSH1 0xFF AND SUB PUSH2 0xF45 JUMPI DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xEFC JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEF9 SWAP2 SWAP1 PUSH2 0x296C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF22 JUMPI PUSH1 0x12 DUP2 PUSH0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xF40 JUMP JUMPDEST DUP1 DUP3 PUSH0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMPDEST PUSH2 0xF62 JUMP JUMPDEST DUP5 DUP2 PUSH0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP4 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCEEC6D18B470B58EABBFC22B7D771C54609ACB2BBE777747424F6E9A5A9D5A25 DUP8 PUSH0 DUP5 PUSH0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x100B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x284B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1024 PUSH2 0x1D98 JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x105E JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F2A200500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10CF JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xBF16AAB600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C6 SWAP2 SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x6 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x115D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xBF16AAB600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1154 SWAP2 SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP5 PUSH0 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x60 ADD MLOAD DUP3 GT ISZERO PUSH2 0x12A7 JUMPI DUP2 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x16D0EF100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129E SWAP3 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP8 DUP2 LT ISZERO PUSH2 0x136A JUMPI DUP1 DUP9 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1361 SWAP3 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 DUP2 PUSH2 0x1376 SWAP2 SWAP1 PUSH2 0x2997 JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH2 0x142E CALLER DUP10 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x22B7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEBFF2602B3F468259E1E99F613FED6691F3A6526EFFE6EF3E768BA7AE7A36C4F DUP11 PUSH1 0x5 PUSH0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1501 DUP15 DUP15 PUSH2 0x1DE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1510 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2923 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP PUSH2 0x1527 PUSH2 0x21BE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x1539 PUSH2 0x1D98 JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x1573 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F2A200500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1601 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xBF16AAB600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F8 SWAP2 SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 PUSH0 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x60 ADD MLOAD DUP3 GT ISZERO PUSH2 0x174B JUMPI DUP2 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x16D0EF100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1742 SWAP3 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP7 DUP2 LT ISZERO PUSH2 0x180E JUMPI DUP1 DUP8 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1805 SWAP3 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP2 PUSH2 0x181A SWAP2 SWAP1 PUSH2 0x2997 JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x40 MLOAD PUSH2 0x18CC SWAP1 PUSH2 0x29F7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1906 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x190B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1946 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6D963F8800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEBFF2602B3F468259E1E99F613FED6691F3A6526EFFE6EF3E768BA7AE7A36C4F DUP11 PUSH1 0x5 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1A19 PUSH0 DUP15 PUSH2 0x1DE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A28 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2923 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP PUSH2 0x1A3F PUSH2 0x21BE JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x2172861495E7B85EDAC73E3CD5FBB42DD675BAADF627720E687BCFDACA025096 DUP2 JUMP JUMPDEST PUSH2 0x1A6F DUP3 PUSH2 0x58F JUMP JUMPDEST PUSH2 0x1A78 DUP2 PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0x1A82 DUP4 DUP4 PUSH2 0x21CE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x1B0F DUP5 DUP3 PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CAC DUP2 PUSH2 0x1CA7 PUSH2 0x21C7 JUMP JUMPDEST PUSH2 0x2336 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1CBA DUP4 DUP4 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x1D8E JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1D2B PUSH2 0x21C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1D92 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1DDD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DD4 SWAP1 PUSH2 0x2A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SUB PUSH2 0x1DF7 JUMPI PUSH0 SWAP1 POP PUSH2 0x2136 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH1 0x80 ADD MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F68 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x8A7A791D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F5F SWAP2 SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FB2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FD6 SWAP2 SWAP1 PUSH2 0x2B09 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP2 SGT PUSH2 0x2015 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4FD58D4B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x205F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2083 SWAP2 SWAP1 PUSH2 0x296C JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 DUP8 PUSH2 0x2092 SWAP2 SWAP1 PUSH2 0x2B80 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0xFF AND GT ISZERO PUSH2 0x20BA JUMPI DUP2 PUSH1 0xA PUSH2 0x20AC SWAP2 SWAP1 PUSH2 0x2CF0 JUMP JUMPDEST DUP2 PUSH2 0x20B7 SWAP2 SWAP1 PUSH2 0x2D67 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x6 PUSH1 0xFF AND DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0xFF AND LT PUSH2 0x2100 JUMPI PUSH0 PUSH1 0x6 DUP7 PUSH1 0x40 ADD MLOAD PUSH2 0x20DE SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0xA PUSH2 0x20EA SWAP2 SWAP1 PUSH2 0x2CF0 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x20F8 SWAP2 SWAP1 PUSH2 0x2D67 JUMP JUMPDEST SWAP7 POP POP PUSH2 0x2130 JUMP JUMPDEST PUSH0 DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x6 PUSH2 0x2112 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0xA PUSH2 0x211E SWAP2 SWAP1 PUSH2 0x2CF0 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x212C SWAP2 SWAP1 PUSH2 0x2B80 JUMP JUMPDEST SWAP7 POP POP JUMPDEST POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21B8 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2171 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2387 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x21D9 DUP4 DUP4 PUSH2 0xD18 JUMP JUMPDEST ISZERO PUSH2 0x22AD JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x224A PUSH2 0x21C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x22B1 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2331 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x22EA SWAP3 SWAP2 SWAP1 PUSH2 0x2E00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2387 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2340 DUP3 DUP3 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x2383 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x237A SWAP3 SWAP2 SWAP1 PUSH2 0x2E27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x23A6 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x23BF JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x23DA JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x241C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2413 SWAP2 SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x245A DUP2 PUSH2 0x2426 JUMP JUMPDEST DUP2 EQ PUSH2 0x2464 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2475 DUP2 PUSH2 0x2451 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2490 JUMPI PUSH2 0x248F PUSH2 0x2422 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x249D DUP5 DUP3 DUP6 ADD PUSH2 0x2467 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24BA DUP2 PUSH2 0x24A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24D3 PUSH0 DUP4 ADD DUP5 PUSH2 0x24B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24EB DUP2 PUSH2 0x24D9 JUMP JUMPDEST DUP2 EQ PUSH2 0x24F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2506 DUP2 PUSH2 0x24E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2521 JUMPI PUSH2 0x2520 PUSH2 0x2422 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x252E DUP5 DUP3 DUP6 ADD PUSH2 0x24F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2540 DUP2 PUSH2 0x24D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2559 PUSH0 DUP4 ADD DUP5 PUSH2 0x2537 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2571 DUP2 PUSH2 0x255F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x258A PUSH0 DUP4 ADD DUP5 PUSH2 0x2568 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25B9 DUP3 PUSH2 0x2590 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25C9 DUP2 PUSH2 0x25AF JUMP JUMPDEST DUP2 EQ PUSH2 0x25D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25E4 DUP2 PUSH2 0x25C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2600 JUMPI PUSH2 0x25FF PUSH2 0x2422 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x260D DUP6 DUP3 DUP7 ADD PUSH2 0x24F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x261E DUP6 DUP3 DUP7 ADD PUSH2 0x25D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x263D DUP2 PUSH2 0x2628 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2656 PUSH0 DUP4 ADD DUP5 PUSH2 0x2634 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2665 DUP2 PUSH2 0x25AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x267E PUSH0 DUP4 ADD DUP5 PUSH2 0x265C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x268D DUP2 PUSH2 0x255F JUMP JUMPDEST DUP2 EQ PUSH2 0x2697 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26A8 DUP2 PUSH2 0x2684 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26C4 JUMPI PUSH2 0x26C3 PUSH2 0x2422 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26D1 DUP6 DUP3 DUP7 ADD PUSH2 0x25D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26E2 DUP6 DUP3 DUP7 ADD PUSH2 0x269A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F5 DUP2 PUSH2 0x24A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x26FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2710 DUP2 PUSH2 0x26EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x271F DUP2 PUSH2 0x2628 JUMP JUMPDEST DUP2 EQ PUSH2 0x2729 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x273A DUP2 PUSH2 0x2716 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2759 JUMPI PUSH2 0x2758 PUSH2 0x2422 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2766 DUP9 DUP3 DUP10 ADD PUSH2 0x25D6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2777 DUP9 DUP3 DUP10 ADD PUSH2 0x2702 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2788 DUP9 DUP3 DUP10 ADD PUSH2 0x272C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2799 DUP9 DUP3 DUP10 ADD PUSH2 0x269A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x27AA DUP9 DUP3 DUP10 ADD PUSH2 0x25D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27CC JUMPI PUSH2 0x27CB PUSH2 0x2422 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27D9 DUP5 DUP3 DUP6 ADD PUSH2 0x269A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27F8 JUMPI PUSH2 0x27F7 PUSH2 0x2422 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2805 DUP6 DUP3 DUP7 ADD PUSH2 0x25D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2816 DUP6 DUP3 DUP7 ADD PUSH2 0x25D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2835 JUMPI PUSH2 0x2834 PUSH2 0x2422 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2842 DUP5 DUP3 DUP6 ADD PUSH2 0x25D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x285E PUSH0 DUP4 ADD DUP9 PUSH2 0x24B1 JUMP JUMPDEST PUSH2 0x286B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x24B1 JUMP JUMPDEST PUSH2 0x2878 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2634 JUMP JUMPDEST PUSH2 0x2885 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x2892 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x265C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x28D3 DUP3 PUSH2 0x255F JUMP JUMPDEST SWAP2 POP PUSH2 0x28DE DUP4 PUSH2 0x255F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x28F6 JUMPI PUSH2 0x28F5 PUSH2 0x289C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x290F PUSH0 DUP4 ADD DUP6 PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x291C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2568 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2936 PUSH0 DUP4 ADD DUP7 PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x2943 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x2950 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2568 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2966 DUP2 PUSH2 0x2716 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2981 JUMPI PUSH2 0x2980 PUSH2 0x2422 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x298E DUP5 DUP3 DUP6 ADD PUSH2 0x2958 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29A1 DUP3 PUSH2 0x255F JUMP JUMPDEST SWAP2 POP PUSH2 0x29AC DUP4 PUSH2 0x255F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x29C4 JUMPI PUSH2 0x29C3 PUSH2 0x289C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x29E2 PUSH0 DUP4 PUSH2 0x29CA JUMP JUMPDEST SWAP2 POP PUSH2 0x29ED DUP3 PUSH2 0x29D4 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2A01 DUP3 PUSH2 0x29D7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A4F PUSH1 0x1F DUP4 PUSH2 0x2A0B JUMP JUMPDEST SWAP2 POP PUSH2 0x2A5A DUP3 PUSH2 0x2A1B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A7C DUP2 PUSH2 0x2A43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AA1 DUP2 PUSH2 0x2A83 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AAB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2ABC DUP2 PUSH2 0x2A98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AD4 DUP2 PUSH2 0x2AC2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2ADE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2AEF DUP2 PUSH2 0x2ACB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B03 DUP2 PUSH2 0x2684 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2B22 JUMPI PUSH2 0x2B21 PUSH2 0x2422 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B2F DUP9 DUP3 DUP10 ADD PUSH2 0x2AAE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2B40 DUP9 DUP3 DUP10 ADD PUSH2 0x2AE1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2B51 DUP9 DUP3 DUP10 ADD PUSH2 0x2AF5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2B62 DUP9 DUP3 DUP10 ADD PUSH2 0x2AF5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2B73 DUP9 DUP3 DUP10 ADD PUSH2 0x2AAE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH2 0x2B8A DUP3 PUSH2 0x255F JUMP JUMPDEST SWAP2 POP PUSH2 0x2B95 DUP4 PUSH2 0x255F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2BA3 DUP2 PUSH2 0x255F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2BBA JUMPI PUSH2 0x2BB9 PUSH2 0x289C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x2C16 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x2BF2 JUMPI PUSH2 0x2BF1 PUSH2 0x289C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x2C01 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2C0F DUP6 PUSH2 0x2BC1 JUMP JUMPDEST SWAP5 POP PUSH2 0x2BD6 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2C2E JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2CE9 JUMP JUMPDEST DUP2 PUSH2 0x2C3B JUMPI PUSH0 SWAP1 POP PUSH2 0x2CE9 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2C51 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2C5B JUMPI PUSH2 0x2C8A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2CE9 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2C6D JUMPI PUSH2 0x2C6C PUSH2 0x289C JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x2C84 JUMPI PUSH2 0x2C83 PUSH2 0x289C JUMP JUMPDEST JUMPDEST POP PUSH2 0x2CE9 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2CBF JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2CBA JUMPI PUSH2 0x2CB9 PUSH2 0x289C JUMP JUMPDEST JUMPDEST PUSH2 0x2CE9 JUMP JUMPDEST PUSH2 0x2CCC DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2BCD JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2CE3 JUMPI PUSH2 0x2CE2 PUSH2 0x289C JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CFA DUP3 PUSH2 0x255F JUMP JUMPDEST SWAP2 POP PUSH2 0x2D05 DUP4 PUSH2 0x2628 JUMP JUMPDEST SWAP3 POP PUSH2 0x2D32 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2C1F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2D71 DUP3 PUSH2 0x255F JUMP JUMPDEST SWAP2 POP PUSH2 0x2D7C DUP4 PUSH2 0x255F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2D8C JUMPI PUSH2 0x2D8B PUSH2 0x2D3A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2DA1 DUP3 PUSH2 0x2628 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DAC DUP4 PUSH2 0x2628 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x2DC5 JUMPI PUSH2 0x2DC4 PUSH2 0x289C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2DDE PUSH0 DUP4 ADD DUP7 PUSH2 0x265C JUMP JUMPDEST PUSH2 0x2DEB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x265C JUMP JUMPDEST PUSH2 0x2DF8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2568 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E13 PUSH0 DUP4 ADD DUP6 PUSH2 0x265C JUMP JUMPDEST PUSH2 0x2E20 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2568 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E3A PUSH0 DUP4 ADD DUP6 PUSH2 0x265C JUMP JUMPDEST PUSH2 0x2E47 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2537 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x601F4BFDEAD2F9B62145 0xD9 0xC3 GAS 0xBA KECCAK256 SWAP6 0xC1 0xDD CALLER PUSH19 0xD55863D615DE5EF69CAE4264736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "1607:12809:11:-:0;;;5106:853;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:5;1821:7;:22;;;;5253:1:11;5237:12;:17;5233:42;;5263:12;;;;;;;;;;;;;;5233:42;5304:12;5290:26;;;;;;5368:42;2241:4:0;5379:18:11;;5399:10;5368;;;:42;;:::i;:::-;;5481:34;1999:23;5504:10;5481;;;:34;;:::i;:::-;;5610:22;;:::i;:::-;5659:4;5643:3;:13;;:20;;;;;;;;;;;5689:4;5674:3;:12;;:19;;;;;;;;;;;5724:2;5704:3;:17;;:22;;;;;;;;;;;5759:16;5739:3;:17;;:36;;;;;5802:12;5786:3;:13;;:28;;;;;;;;;;;5853:3;5825:11;:25;2148:1;5825:25;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2148:1;5874:77;;;5904:4;5910;5916:2;5920:16;5938:12;5874:77;;;;;;;;;;:::i;:::-;;;;;;;;5222:737;5106:853;;;1607:12809;;6155:316:0;6232:4;6253:22;6261:4;6267:7;6253;;;:22;;:::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;;;:12;;:::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;2830:136::-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;1607:12809:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:12:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:96::-;863:7;892:24;910:5;892:24;:::i;:::-;881:35;;826:96;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;1874:90::-;1908:7;1951:5;1944:13;1937:21;1926:32;;1874:90;;;:::o;1970:109::-;2051:21;2066:5;2051:21;:::i;:::-;2046:3;2039:34;1970:109;;:::o;2085:86::-;2131:7;2160:5;2149:16;;2085:86;;;:::o;2177:::-;2212:7;2252:4;2245:5;2241:16;2230:27;;2177:86;;;:::o;2269:60::-;2297:3;2318:5;2311:12;;2269:60;;;:::o;2335:156::-;2392:9;2425:60;2441:43;2450:33;2477:5;2450:33;:::i;:::-;2441:43;:::i;:::-;2425:60;:::i;:::-;2412:73;;2335:156;;;:::o;2497:145::-;2591:44;2629:5;2591:44;:::i;:::-;2586:3;2579:57;2497:145;;:::o;2648:118::-;2735:24;2753:5;2735:24;:::i;:::-;2730:3;2723:37;2648:118;;:::o;2772:::-;2859:24;2877:5;2859:24;:::i;:::-;2854:3;2847:37;2772:118;;:::o;2896:654::-;3096:4;3134:3;3123:9;3119:19;3111:27;;3148:65;3210:1;3199:9;3195:17;3186:6;3148:65;:::i;:::-;3223:66;3285:2;3274:9;3270:18;3261:6;3223:66;:::i;:::-;3299:79;3374:2;3363:9;3359:18;3350:6;3299:79;:::i;:::-;3388:72;3456:2;3445:9;3441:18;3432:6;3388:72;:::i;:::-;3470:73;3538:3;3527:9;3523:19;3514:6;3470:73;:::i;:::-;2896:654;;;;;;;;:::o;1607:12809:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_30": {
									"entryPoint": 5419,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NATIVE_TOKEN_1211": {
									"entryPoint": 1502,
									"id": 1211,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ROLE_ADMIN_1204": {
									"entryPoint": 6722,
									"id": 1204,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USD_DECIMALS_1215": {
									"entryPoint": 1497,
									"id": 1215,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1034": {
									"entryPoint": 9095,
									"id": 1034,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_115": {
									"entryPoint": 9014,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_94": {
									"entryPoint": 7323,
									"id": 94,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 7343,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1088": {
									"entryPoint": 8647,
									"id": 1088,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_522": {
									"entryPoint": 8638,
									"id": 522,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_514": {
									"entryPoint": 7576,
									"id": 514,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_295": {
									"entryPoint": 8654,
									"id": 295,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_toUsd_2058": {
									"entryPoint": 7655,
									"id": 2058,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@bankCapUsd6_1218": {
									"entryPoint": 7065,
									"id": 1218,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositCount_1224": {
									"entryPoint": 1457,
									"id": 1224,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositEth_1639": {
									"entryPoint": 2568,
									"id": 1639,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositToken_1725": {
									"entryPoint": 1506,
									"id": 1725,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getBalance_1909": {
									"entryPoint": 6936,
									"id": 1909,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_129": {
									"entryPoint": 1423,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUsdBalance_1933": {
									"entryPoint": 6792,
									"id": 1933,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@grantRole_148": {
									"entryPoint": 1463,
									"id": 148,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_81": {
									"entryPoint": 3352,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceRole_190": {
									"entryPoint": 2445,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_167": {
									"entryPoint": 6758,
									"id": 167,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_684": {
									"entryPoint": 8508,
									"id": 684,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_657": {
									"entryPoint": 8887,
									"id": 657,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setTokenConfig_1569": {
									"entryPoint": 3451,
									"id": 1569,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@supportsInterface_1129": {
									"entryPoint": 7218,
									"id": 1129,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_63": {
									"entryPoint": 1302,
									"id": 63,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenConfig_1239": {
									"entryPoint": 7101,
									"id": 1239,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalDepositedUsd6_1221": {
									"entryPoint": 1451,
									"id": 1221,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawCount_1226": {
									"entryPoint": 3346,
									"id": 1226,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawEth_1810": {
									"entryPoint": 5425,
									"id": 1810,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawToken_1893": {
									"entryPoint": 4124,
									"id": 1893,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 9686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 9986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 9464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 9319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 10977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 9882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 10997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 10028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 10926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 10584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 10210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_boolt_uint8t_uint256t_address": {
									"entryPoint": 10048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 9484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 9706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 9339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 10167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 11017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 10604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 9393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 9527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 9780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11723,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 11815,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11776,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 9408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bool_t_uint8_t_uint256_t_address__to_t_bool_t_bool_t_uint8_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 10315,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 9542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10492,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10531,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 9795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 11623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 11213,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 11504,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 11295,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint8": {
									"entryPoint": 11671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 9647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 9433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 9254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 10946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 9768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 10883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10396,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 11578,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9250,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 11201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 10708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 10779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 9442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 9297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 10955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 10006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 10904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:19131:12",
										"nodeType": "YulBlock",
										"src": "0:19131:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "378:105:12",
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nativeSrc": "388:89:12",
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:12",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nativeSrc": "399:78:12",
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:12",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:12",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nativeSrc": "531:78:12",
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:12",
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:12",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nativeSrc": "589:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nativeSrc": "589:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nativeSrc": "561:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nativeSrc": "551:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nativeSrc": "544:42:12",
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nativeSrc": "541:62:12",
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:12",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nativeSrc": "666:86:12",
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nativeSrc": "676:29:12",
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nativeSrc": "685:20:12",
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nativeSrc": "714:32:12",
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nativeSrc": "714:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:12",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:12",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:12",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nativeSrc": "823:262:12",
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:12",
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nativeSrc": "871:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nativeSrc": "871:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nativeSrc": "840:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:12",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nativeSrc": "836:32:12",
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nativeSrc": "833:119:12",
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nativeSrc": "962:116:12",
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nativeSrc": "977:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:12",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:12",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:12",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nativeSrc": "1036:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nativeSrc": "1016:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:12",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:12",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:12",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nativeSrc": "1133:48:12",
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nativeSrc": "1143:32:12",
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nativeSrc": "1161:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nativeSrc": "1154:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:12",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:12",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nativeSrc": "1246:50:12",
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nativeSrc": "1268:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nativeSrc": "1256:34:12",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nativeSrc": "1256:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:12",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:12",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nativeSrc": "1394:118:12",
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nativeSrc": "1404:26:12",
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nativeSrc": "1412:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nativeSrc": "1487:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nativeSrc": "1440:65:12",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nativeSrc": "1440:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:12",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:12",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:12",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nativeSrc": "1563:32:12",
													"nodeType": "YulBlock",
													"src": "1563:32:12",
													"statements": [
														{
															"nativeSrc": "1573:16:12",
															"nodeType": "YulAssignment",
															"src": "1573:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:12",
																"nodeType": "YulIdentifier",
																"src": "1584:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "1518:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:12",
														"nodeType": "YulTypedName",
														"src": "1545:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:12",
														"nodeType": "YulTypedName",
														"src": "1555:7:12",
														"type": ""
													}
												],
												"src": "1518:77:12"
											},
											{
												"body": {
													"nativeSrc": "1644:79:12",
													"nodeType": "YulBlock",
													"src": "1644:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1701:16:12",
																"nodeType": "YulBlock",
																"src": "1701:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1710:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1713:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1703:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:12"
																			},
																			"nativeSrc": "1703:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:12"
																		},
																		"nativeSrc": "1703:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1667:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1692:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "1674:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:12"
																				},
																				"nativeSrc": "1674:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1664:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:12"
																		},
																		"nativeSrc": "1664:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1657:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:12"
																},
																"nativeSrc": "1657:43:12",
																"nodeType": "YulFunctionCall",
																"src": "1657:43:12"
															},
															"nativeSrc": "1654:63:12",
															"nodeType": "YulIf",
															"src": "1654:63:12"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "1601:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1637:5:12",
														"nodeType": "YulTypedName",
														"src": "1637:5:12",
														"type": ""
													}
												],
												"src": "1601:122:12"
											},
											{
												"body": {
													"nativeSrc": "1781:87:12",
													"nodeType": "YulBlock",
													"src": "1781:87:12",
													"statements": [
														{
															"nativeSrc": "1791:29:12",
															"nodeType": "YulAssignment",
															"src": "1791:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1813:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1800:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:12"
																},
																"nativeSrc": "1800:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1800:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1791:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1856:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "1829:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:12"
																},
																"nativeSrc": "1829:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1829:33:12"
															},
															"nativeSrc": "1829:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:12"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "1729:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1759:6:12",
														"nodeType": "YulTypedName",
														"src": "1759:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1767:3:12",
														"nodeType": "YulTypedName",
														"src": "1767:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1775:5:12",
														"nodeType": "YulTypedName",
														"src": "1775:5:12",
														"type": ""
													}
												],
												"src": "1729:139:12"
											},
											{
												"body": {
													"nativeSrc": "1940:263:12",
													"nodeType": "YulBlock",
													"src": "1940:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1986:83:12",
																"nodeType": "YulBlock",
																"src": "1986:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1988:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:12"
																			},
																			"nativeSrc": "1988:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:12"
																		},
																		"nativeSrc": "1988:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1961:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1970:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1957:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:12"
																		},
																		"nativeSrc": "1957:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1982:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1953:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:12"
																},
																"nativeSrc": "1953:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1953:32:12"
															},
															"nativeSrc": "1950:119:12",
															"nodeType": "YulIf",
															"src": "1950:119:12"
														},
														{
															"nativeSrc": "2079:117:12",
															"nodeType": "YulBlock",
															"src": "2079:117:12",
															"statements": [
																{
																	"nativeSrc": "2094:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2108:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2098:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2123:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2123:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2158:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2169:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2154:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:12"
																				},
																				"nativeSrc": "2154:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2178:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "2133:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:12"
																		},
																		"nativeSrc": "2133:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2123:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1874:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1910:9:12",
														"nodeType": "YulTypedName",
														"src": "1910:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1921:7:12",
														"nodeType": "YulTypedName",
														"src": "1921:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1933:6:12",
														"nodeType": "YulTypedName",
														"src": "1933:6:12",
														"type": ""
													}
												],
												"src": "1874:329:12"
											},
											{
												"body": {
													"nativeSrc": "2274:53:12",
													"nodeType": "YulBlock",
													"src": "2274:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2291:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2291:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2314:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2314:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "2296:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "2296:17:12"
																		},
																		"nativeSrc": "2296:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2296:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2284:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:12"
																},
																"nativeSrc": "2284:37:12",
																"nodeType": "YulFunctionCall",
																"src": "2284:37:12"
															},
															"nativeSrc": "2284:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "2284:37:12"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "2209:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2262:5:12",
														"nodeType": "YulTypedName",
														"src": "2262:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2269:3:12",
														"nodeType": "YulTypedName",
														"src": "2269:3:12",
														"type": ""
													}
												],
												"src": "2209:118:12"
											},
											{
												"body": {
													"nativeSrc": "2431:124:12",
													"nodeType": "YulBlock",
													"src": "2431:124:12",
													"statements": [
														{
															"nativeSrc": "2441:26:12",
															"nodeType": "YulAssignment",
															"src": "2441:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2453:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2453:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2464:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2464:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2449:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2449:3:12"
																},
																"nativeSrc": "2449:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2449:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2441:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2441:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2521:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2521:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2534:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2534:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2545:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2545:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2530:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2530:3:12"
																		},
																		"nativeSrc": "2530:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2530:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "2477:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2477:43:12"
																},
																"nativeSrc": "2477:71:12",
																"nodeType": "YulFunctionCall",
																"src": "2477:71:12"
															},
															"nativeSrc": "2477:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "2477:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2333:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2403:9:12",
														"nodeType": "YulTypedName",
														"src": "2403:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2415:6:12",
														"nodeType": "YulTypedName",
														"src": "2415:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2426:4:12",
														"nodeType": "YulTypedName",
														"src": "2426:4:12",
														"type": ""
													}
												],
												"src": "2333:222:12"
											},
											{
												"body": {
													"nativeSrc": "2606:32:12",
													"nodeType": "YulBlock",
													"src": "2606:32:12",
													"statements": [
														{
															"nativeSrc": "2616:16:12",
															"nodeType": "YulAssignment",
															"src": "2616:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "2627:5:12",
																"nodeType": "YulIdentifier",
																"src": "2627:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2616:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2616:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2561:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2588:5:12",
														"nodeType": "YulTypedName",
														"src": "2588:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2598:7:12",
														"nodeType": "YulTypedName",
														"src": "2598:7:12",
														"type": ""
													}
												],
												"src": "2561:77:12"
											},
											{
												"body": {
													"nativeSrc": "2709:53:12",
													"nodeType": "YulBlock",
													"src": "2709:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2726:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2726:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2749:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2749:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2731:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "2731:17:12"
																		},
																		"nativeSrc": "2731:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2719:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2719:6:12"
																},
																"nativeSrc": "2719:37:12",
																"nodeType": "YulFunctionCall",
																"src": "2719:37:12"
															},
															"nativeSrc": "2719:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "2719:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2644:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2697:5:12",
														"nodeType": "YulTypedName",
														"src": "2697:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2704:3:12",
														"nodeType": "YulTypedName",
														"src": "2704:3:12",
														"type": ""
													}
												],
												"src": "2644:118:12"
											},
											{
												"body": {
													"nativeSrc": "2866:124:12",
													"nodeType": "YulBlock",
													"src": "2866:124:12",
													"statements": [
														{
															"nativeSrc": "2876:26:12",
															"nodeType": "YulAssignment",
															"src": "2876:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2888:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2888:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2899:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2899:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2884:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2884:3:12"
																},
																"nativeSrc": "2884:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2884:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2876:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2876:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2956:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2956:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2969:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2969:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2980:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2980:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2965:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2965:3:12"
																		},
																		"nativeSrc": "2965:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2965:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2912:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2912:43:12"
																},
																"nativeSrc": "2912:71:12",
																"nodeType": "YulFunctionCall",
																"src": "2912:71:12"
															},
															"nativeSrc": "2912:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "2912:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2768:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2838:9:12",
														"nodeType": "YulTypedName",
														"src": "2838:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2850:6:12",
														"nodeType": "YulTypedName",
														"src": "2850:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2861:4:12",
														"nodeType": "YulTypedName",
														"src": "2861:4:12",
														"type": ""
													}
												],
												"src": "2768:222:12"
											},
											{
												"body": {
													"nativeSrc": "3041:81:12",
													"nodeType": "YulBlock",
													"src": "3041:81:12",
													"statements": [
														{
															"nativeSrc": "3051:65:12",
															"nodeType": "YulAssignment",
															"src": "3051:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3066:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3066:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3073:42:12",
																		"nodeType": "YulLiteral",
																		"src": "3073:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3062:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3062:3:12"
																},
																"nativeSrc": "3062:54:12",
																"nodeType": "YulFunctionCall",
																"src": "3062:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3051:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3051:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2996:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3023:5:12",
														"nodeType": "YulTypedName",
														"src": "3023:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3033:7:12",
														"nodeType": "YulTypedName",
														"src": "3033:7:12",
														"type": ""
													}
												],
												"src": "2996:126:12"
											},
											{
												"body": {
													"nativeSrc": "3173:51:12",
													"nodeType": "YulBlock",
													"src": "3173:51:12",
													"statements": [
														{
															"nativeSrc": "3183:35:12",
															"nodeType": "YulAssignment",
															"src": "3183:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3212:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3212:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3194:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "3194:17:12"
																},
																"nativeSrc": "3194:24:12",
																"nodeType": "YulFunctionCall",
																"src": "3194:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3183:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3183:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3128:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3155:5:12",
														"nodeType": "YulTypedName",
														"src": "3155:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3165:7:12",
														"nodeType": "YulTypedName",
														"src": "3165:7:12",
														"type": ""
													}
												],
												"src": "3128:96:12"
											},
											{
												"body": {
													"nativeSrc": "3273:79:12",
													"nodeType": "YulBlock",
													"src": "3273:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3330:16:12",
																"nodeType": "YulBlock",
																"src": "3330:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3339:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3339:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3342:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3342:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3332:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3332:6:12"
																			},
																			"nativeSrc": "3332:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3332:12:12"
																		},
																		"nativeSrc": "3332:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3332:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3296:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3296:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3321:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3321:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3303:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3303:17:12"
																				},
																				"nativeSrc": "3303:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3303:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3293:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3293:2:12"
																		},
																		"nativeSrc": "3293:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3293:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3286:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3286:6:12"
																},
																"nativeSrc": "3286:43:12",
																"nodeType": "YulFunctionCall",
																"src": "3286:43:12"
															},
															"nativeSrc": "3283:63:12",
															"nodeType": "YulIf",
															"src": "3283:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3230:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3266:5:12",
														"nodeType": "YulTypedName",
														"src": "3266:5:12",
														"type": ""
													}
												],
												"src": "3230:122:12"
											},
											{
												"body": {
													"nativeSrc": "3410:87:12",
													"nodeType": "YulBlock",
													"src": "3410:87:12",
													"statements": [
														{
															"nativeSrc": "3420:29:12",
															"nodeType": "YulAssignment",
															"src": "3420:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3442:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3442:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3429:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3429:12:12"
																},
																"nativeSrc": "3429:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3429:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3420:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3420:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3485:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3485:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3458:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3458:26:12"
																},
																"nativeSrc": "3458:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3458:33:12"
															},
															"nativeSrc": "3458:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3458:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3358:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3388:6:12",
														"nodeType": "YulTypedName",
														"src": "3388:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3396:3:12",
														"nodeType": "YulTypedName",
														"src": "3396:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3404:5:12",
														"nodeType": "YulTypedName",
														"src": "3404:5:12",
														"type": ""
													}
												],
												"src": "3358:139:12"
											},
											{
												"body": {
													"nativeSrc": "3586:391:12",
													"nodeType": "YulBlock",
													"src": "3586:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3632:83:12",
																"nodeType": "YulBlock",
																"src": "3632:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3634:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3634:77:12"
																			},
																			"nativeSrc": "3634:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3634:79:12"
																		},
																		"nativeSrc": "3634:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3634:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3607:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3607:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3616:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3616:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3603:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3603:3:12"
																		},
																		"nativeSrc": "3603:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3603:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3599:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3599:3:12"
																},
																"nativeSrc": "3599:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3599:32:12"
															},
															"nativeSrc": "3596:119:12",
															"nodeType": "YulIf",
															"src": "3596:119:12"
														},
														{
															"nativeSrc": "3725:117:12",
															"nodeType": "YulBlock",
															"src": "3725:117:12",
															"statements": [
																{
																	"nativeSrc": "3740:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3740:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3754:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3754:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3744:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3744:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3769:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3769:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3804:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3804:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3815:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3815:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3800:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3800:3:12"
																				},
																				"nativeSrc": "3800:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3800:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3824:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3824:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3779:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3779:20:12"
																		},
																		"nativeSrc": "3779:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3779:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3769:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3769:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3852:118:12",
															"nodeType": "YulBlock",
															"src": "3852:118:12",
															"statements": [
																{
																	"nativeSrc": "3867:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3867:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3881:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3881:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3871:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3871:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3897:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3897:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3932:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3932:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3943:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3943:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3928:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3928:3:12"
																				},
																				"nativeSrc": "3928:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3928:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3952:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3952:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3907:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3907:20:12"
																		},
																		"nativeSrc": "3907:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3907:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3897:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3897:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "3503:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3548:9:12",
														"nodeType": "YulTypedName",
														"src": "3548:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3559:7:12",
														"nodeType": "YulTypedName",
														"src": "3559:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3571:6:12",
														"nodeType": "YulTypedName",
														"src": "3571:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3579:6:12",
														"nodeType": "YulTypedName",
														"src": "3579:6:12",
														"type": ""
													}
												],
												"src": "3503:474:12"
											},
											{
												"body": {
													"nativeSrc": "4026:43:12",
													"nodeType": "YulBlock",
													"src": "4026:43:12",
													"statements": [
														{
															"nativeSrc": "4036:27:12",
															"nodeType": "YulAssignment",
															"src": "4036:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4051:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4051:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4058:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4058:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4047:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4047:3:12"
																},
																"nativeSrc": "4047:16:12",
																"nodeType": "YulFunctionCall",
																"src": "4047:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4036:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "4036:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "3983:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4008:5:12",
														"nodeType": "YulTypedName",
														"src": "4008:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4018:7:12",
														"nodeType": "YulTypedName",
														"src": "4018:7:12",
														"type": ""
													}
												],
												"src": "3983:86:12"
											},
											{
												"body": {
													"nativeSrc": "4136:51:12",
													"nodeType": "YulBlock",
													"src": "4136:51:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4153:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4153:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4174:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4174:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4158:15:12",
																			"nodeType": "YulIdentifier",
																			"src": "4158:15:12"
																		},
																		"nativeSrc": "4158:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4158:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4146:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4146:6:12"
																},
																"nativeSrc": "4146:35:12",
																"nodeType": "YulFunctionCall",
																"src": "4146:35:12"
															},
															"nativeSrc": "4146:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "4146:35:12"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4075:112:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4124:5:12",
														"nodeType": "YulTypedName",
														"src": "4124:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4131:3:12",
														"nodeType": "YulTypedName",
														"src": "4131:3:12",
														"type": ""
													}
												],
												"src": "4075:112:12"
											},
											{
												"body": {
													"nativeSrc": "4287:120:12",
													"nodeType": "YulBlock",
													"src": "4287:120:12",
													"statements": [
														{
															"nativeSrc": "4297:26:12",
															"nodeType": "YulAssignment",
															"src": "4297:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4309:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4309:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4320:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4320:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4305:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4305:3:12"
																},
																"nativeSrc": "4305:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4305:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4297:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4297:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4373:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4373:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4386:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4386:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4397:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4397:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4382:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4382:3:12"
																		},
																		"nativeSrc": "4382:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4382:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4333:39:12",
																	"nodeType": "YulIdentifier",
																	"src": "4333:39:12"
																},
																"nativeSrc": "4333:67:12",
																"nodeType": "YulFunctionCall",
																"src": "4333:67:12"
															},
															"nativeSrc": "4333:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "4333:67:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4193:214:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4259:9:12",
														"nodeType": "YulTypedName",
														"src": "4259:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4271:6:12",
														"nodeType": "YulTypedName",
														"src": "4271:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4282:4:12",
														"nodeType": "YulTypedName",
														"src": "4282:4:12",
														"type": ""
													}
												],
												"src": "4193:214:12"
											},
											{
												"body": {
													"nativeSrc": "4478:53:12",
													"nodeType": "YulBlock",
													"src": "4478:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4495:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4495:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4518:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4518:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4500:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "4500:17:12"
																		},
																		"nativeSrc": "4500:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4500:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4488:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4488:6:12"
																},
																"nativeSrc": "4488:37:12",
																"nodeType": "YulFunctionCall",
																"src": "4488:37:12"
															},
															"nativeSrc": "4488:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "4488:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4413:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4466:5:12",
														"nodeType": "YulTypedName",
														"src": "4466:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4473:3:12",
														"nodeType": "YulTypedName",
														"src": "4473:3:12",
														"type": ""
													}
												],
												"src": "4413:118:12"
											},
											{
												"body": {
													"nativeSrc": "4635:124:12",
													"nodeType": "YulBlock",
													"src": "4635:124:12",
													"statements": [
														{
															"nativeSrc": "4645:26:12",
															"nodeType": "YulAssignment",
															"src": "4645:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4657:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4657:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4668:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4668:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4653:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4653:3:12"
																},
																"nativeSrc": "4653:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4653:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4645:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4645:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4725:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4725:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4738:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4738:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4749:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4749:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4734:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4734:3:12"
																		},
																		"nativeSrc": "4734:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4734:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4681:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "4681:43:12"
																},
																"nativeSrc": "4681:71:12",
																"nodeType": "YulFunctionCall",
																"src": "4681:71:12"
															},
															"nativeSrc": "4681:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "4681:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4537:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4607:9:12",
														"nodeType": "YulTypedName",
														"src": "4607:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4619:6:12",
														"nodeType": "YulTypedName",
														"src": "4619:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4630:4:12",
														"nodeType": "YulTypedName",
														"src": "4630:4:12",
														"type": ""
													}
												],
												"src": "4537:222:12"
											},
											{
												"body": {
													"nativeSrc": "4808:79:12",
													"nodeType": "YulBlock",
													"src": "4808:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4865:16:12",
																"nodeType": "YulBlock",
																"src": "4865:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4874:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4874:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4877:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4877:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4867:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4867:6:12"
																			},
																			"nativeSrc": "4867:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4867:12:12"
																		},
																		"nativeSrc": "4867:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4867:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4831:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4831:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4856:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4856:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4838:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "4838:17:12"
																				},
																				"nativeSrc": "4838:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4838:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4828:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4828:2:12"
																		},
																		"nativeSrc": "4828:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4828:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4821:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4821:6:12"
																},
																"nativeSrc": "4821:43:12",
																"nodeType": "YulFunctionCall",
																"src": "4821:43:12"
															},
															"nativeSrc": "4818:63:12",
															"nodeType": "YulIf",
															"src": "4818:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "4765:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4801:5:12",
														"nodeType": "YulTypedName",
														"src": "4801:5:12",
														"type": ""
													}
												],
												"src": "4765:122:12"
											},
											{
												"body": {
													"nativeSrc": "4945:87:12",
													"nodeType": "YulBlock",
													"src": "4945:87:12",
													"statements": [
														{
															"nativeSrc": "4955:29:12",
															"nodeType": "YulAssignment",
															"src": "4955:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4977:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4977:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4964:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4964:12:12"
																},
																"nativeSrc": "4964:20:12",
																"nodeType": "YulFunctionCall",
																"src": "4964:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4955:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4955:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5020:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5020:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4993:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "4993:26:12"
																},
																"nativeSrc": "4993:33:12",
																"nodeType": "YulFunctionCall",
																"src": "4993:33:12"
															},
															"nativeSrc": "4993:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "4993:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "4893:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4923:6:12",
														"nodeType": "YulTypedName",
														"src": "4923:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4931:3:12",
														"nodeType": "YulTypedName",
														"src": "4931:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4939:5:12",
														"nodeType": "YulTypedName",
														"src": "4939:5:12",
														"type": ""
													}
												],
												"src": "4893:139:12"
											},
											{
												"body": {
													"nativeSrc": "5121:391:12",
													"nodeType": "YulBlock",
													"src": "5121:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5167:83:12",
																"nodeType": "YulBlock",
																"src": "5167:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5169:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5169:77:12"
																			},
																			"nativeSrc": "5169:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5169:79:12"
																		},
																		"nativeSrc": "5169:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5169:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5142:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5142:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5151:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5151:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5138:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5138:3:12"
																		},
																		"nativeSrc": "5138:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5138:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5163:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5163:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5134:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5134:3:12"
																},
																"nativeSrc": "5134:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5134:32:12"
															},
															"nativeSrc": "5131:119:12",
															"nodeType": "YulIf",
															"src": "5131:119:12"
														},
														{
															"nativeSrc": "5260:117:12",
															"nodeType": "YulBlock",
															"src": "5260:117:12",
															"statements": [
																{
																	"nativeSrc": "5275:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5275:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5289:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5289:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5279:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5279:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5304:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5304:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5339:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5339:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5350:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5350:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5335:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5335:3:12"
																				},
																				"nativeSrc": "5335:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5335:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5359:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5359:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5314:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5314:20:12"
																		},
																		"nativeSrc": "5314:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5314:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5304:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5304:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5387:118:12",
															"nodeType": "YulBlock",
															"src": "5387:118:12",
															"statements": [
																{
																	"nativeSrc": "5402:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5402:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5416:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5416:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5406:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5406:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5432:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5432:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5467:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5467:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5478:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5478:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5463:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5463:3:12"
																				},
																				"nativeSrc": "5463:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5463:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5487:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5487:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5442:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5442:20:12"
																		},
																		"nativeSrc": "5442:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5442:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5432:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5432:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "5038:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5083:9:12",
														"nodeType": "YulTypedName",
														"src": "5083:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5094:7:12",
														"nodeType": "YulTypedName",
														"src": "5094:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5106:6:12",
														"nodeType": "YulTypedName",
														"src": "5106:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5114:6:12",
														"nodeType": "YulTypedName",
														"src": "5114:6:12",
														"type": ""
													}
												],
												"src": "5038:474:12"
											},
											{
												"body": {
													"nativeSrc": "5558:76:12",
													"nodeType": "YulBlock",
													"src": "5558:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5612:16:12",
																"nodeType": "YulBlock",
																"src": "5612:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5621:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5621:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5624:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5624:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5614:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5614:6:12"
																			},
																			"nativeSrc": "5614:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5614:12:12"
																		},
																		"nativeSrc": "5614:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5614:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5581:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5581:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5603:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5603:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5588:14:12",
																					"nodeType": "YulIdentifier",
																					"src": "5588:14:12"
																				},
																				"nativeSrc": "5588:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5588:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5578:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5578:2:12"
																		},
																		"nativeSrc": "5578:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5578:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5571:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5571:6:12"
																},
																"nativeSrc": "5571:40:12",
																"nodeType": "YulFunctionCall",
																"src": "5571:40:12"
															},
															"nativeSrc": "5568:60:12",
															"nodeType": "YulIf",
															"src": "5568:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5518:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5551:5:12",
														"nodeType": "YulTypedName",
														"src": "5551:5:12",
														"type": ""
													}
												],
												"src": "5518:116:12"
											},
											{
												"body": {
													"nativeSrc": "5689:84:12",
													"nodeType": "YulBlock",
													"src": "5689:84:12",
													"statements": [
														{
															"nativeSrc": "5699:29:12",
															"nodeType": "YulAssignment",
															"src": "5699:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5721:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5721:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5708:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "5708:12:12"
																},
																"nativeSrc": "5708:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5708:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5699:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5699:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5761:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5761:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5737:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "5737:23:12"
																},
																"nativeSrc": "5737:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5737:30:12"
															},
															"nativeSrc": "5737:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "5737:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "5640:133:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5667:6:12",
														"nodeType": "YulTypedName",
														"src": "5667:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5675:3:12",
														"nodeType": "YulTypedName",
														"src": "5675:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5683:5:12",
														"nodeType": "YulTypedName",
														"src": "5683:5:12",
														"type": ""
													}
												],
												"src": "5640:133:12"
											},
											{
												"body": {
													"nativeSrc": "5820:77:12",
													"nodeType": "YulBlock",
													"src": "5820:77:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5875:16:12",
																"nodeType": "YulBlock",
																"src": "5875:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5884:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5884:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5887:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5887:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5877:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5877:6:12"
																			},
																			"nativeSrc": "5877:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5877:12:12"
																		},
																		"nativeSrc": "5877:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5877:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5843:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5843:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5866:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5866:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "5850:15:12",
																					"nodeType": "YulIdentifier",
																					"src": "5850:15:12"
																				},
																				"nativeSrc": "5850:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5850:22:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5840:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5840:2:12"
																		},
																		"nativeSrc": "5840:33:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5840:33:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5833:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5833:6:12"
																},
																"nativeSrc": "5833:41:12",
																"nodeType": "YulFunctionCall",
																"src": "5833:41:12"
															},
															"nativeSrc": "5830:61:12",
															"nodeType": "YulIf",
															"src": "5830:61:12"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "5779:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5813:5:12",
														"nodeType": "YulTypedName",
														"src": "5813:5:12",
														"type": ""
													}
												],
												"src": "5779:118:12"
											},
											{
												"body": {
													"nativeSrc": "5953:85:12",
													"nodeType": "YulBlock",
													"src": "5953:85:12",
													"statements": [
														{
															"nativeSrc": "5963:29:12",
															"nodeType": "YulAssignment",
															"src": "5963:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5985:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5985:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5972:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "5972:12:12"
																},
																"nativeSrc": "5972:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5972:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5963:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5963:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6026:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6026:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "6001:24:12",
																	"nodeType": "YulIdentifier",
																	"src": "6001:24:12"
																},
																"nativeSrc": "6001:31:12",
																"nodeType": "YulFunctionCall",
																"src": "6001:31:12"
															},
															"nativeSrc": "6001:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "6001:31:12"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "5903:135:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5931:6:12",
														"nodeType": "YulTypedName",
														"src": "5931:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5939:3:12",
														"nodeType": "YulTypedName",
														"src": "5939:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5947:5:12",
														"nodeType": "YulTypedName",
														"src": "5947:5:12",
														"type": ""
													}
												],
												"src": "5903:135:12"
											},
											{
												"body": {
													"nativeSrc": "6173:772:12",
													"nodeType": "YulBlock",
													"src": "6173:772:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6220:83:12",
																"nodeType": "YulBlock",
																"src": "6220:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6222:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6222:77:12"
																			},
																			"nativeSrc": "6222:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6222:79:12"
																		},
																		"nativeSrc": "6222:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6222:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6194:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6194:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6203:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6203:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6190:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6190:3:12"
																		},
																		"nativeSrc": "6190:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6190:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6215:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6215:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6186:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6186:3:12"
																},
																"nativeSrc": "6186:33:12",
																"nodeType": "YulFunctionCall",
																"src": "6186:33:12"
															},
															"nativeSrc": "6183:120:12",
															"nodeType": "YulIf",
															"src": "6183:120:12"
														},
														{
															"nativeSrc": "6313:117:12",
															"nodeType": "YulBlock",
															"src": "6313:117:12",
															"statements": [
																{
																	"nativeSrc": "6328:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6328:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6342:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6342:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6332:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6332:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6357:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6357:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6392:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6392:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6403:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6403:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6388:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6388:3:12"
																				},
																				"nativeSrc": "6388:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6388:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6412:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6412:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6367:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6367:20:12"
																		},
																		"nativeSrc": "6367:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6367:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6357:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6357:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6440:115:12",
															"nodeType": "YulBlock",
															"src": "6440:115:12",
															"statements": [
																{
																	"nativeSrc": "6455:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6455:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6469:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6469:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6459:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6459:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6485:60:12",
																	"nodeType": "YulAssignment",
																	"src": "6485:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6517:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6517:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6528:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6528:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6513:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6513:3:12"
																				},
																				"nativeSrc": "6513:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6513:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6537:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6537:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6495:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "6495:17:12"
																		},
																		"nativeSrc": "6495:50:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6495:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6485:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6485:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6565:116:12",
															"nodeType": "YulBlock",
															"src": "6565:116:12",
															"statements": [
																{
																	"nativeSrc": "6580:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6580:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6594:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6594:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6584:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6584:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6610:61:12",
																	"nodeType": "YulAssignment",
																	"src": "6610:61:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6643:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6643:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6654:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6654:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6639:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6639:3:12"
																				},
																				"nativeSrc": "6639:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6639:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6663:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6663:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "6620:18:12",
																			"nodeType": "YulIdentifier",
																			"src": "6620:18:12"
																		},
																		"nativeSrc": "6620:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6620:51:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6610:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6610:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6691:118:12",
															"nodeType": "YulBlock",
															"src": "6691:118:12",
															"statements": [
																{
																	"nativeSrc": "6706:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6706:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6720:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6720:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6710:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6710:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6736:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6736:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6771:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6771:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6782:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6782:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6767:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6767:3:12"
																				},
																				"nativeSrc": "6767:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6767:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6791:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6791:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6746:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6746:20:12"
																		},
																		"nativeSrc": "6746:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6746:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "6736:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6736:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6819:119:12",
															"nodeType": "YulBlock",
															"src": "6819:119:12",
															"statements": [
																{
																	"nativeSrc": "6834:17:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6834:17:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6848:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6848:3:12",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6838:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6838:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6865:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6865:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6900:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6900:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6911:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6911:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6896:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6896:3:12"
																				},
																				"nativeSrc": "6896:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6896:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6920:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6920:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6875:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6875:20:12"
																		},
																		"nativeSrc": "6875:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6875:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "6865:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6865:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_boolt_uint8t_uint256t_address",
												"nativeSrc": "6044:901:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6111:9:12",
														"nodeType": "YulTypedName",
														"src": "6111:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6122:7:12",
														"nodeType": "YulTypedName",
														"src": "6122:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6134:6:12",
														"nodeType": "YulTypedName",
														"src": "6134:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6142:6:12",
														"nodeType": "YulTypedName",
														"src": "6142:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6150:6:12",
														"nodeType": "YulTypedName",
														"src": "6150:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6158:6:12",
														"nodeType": "YulTypedName",
														"src": "6158:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6166:6:12",
														"nodeType": "YulTypedName",
														"src": "6166:6:12",
														"type": ""
													}
												],
												"src": "6044:901:12"
											},
											{
												"body": {
													"nativeSrc": "7017:263:12",
													"nodeType": "YulBlock",
													"src": "7017:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7063:83:12",
																"nodeType": "YulBlock",
																"src": "7063:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7065:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7065:77:12"
																			},
																			"nativeSrc": "7065:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7065:79:12"
																		},
																		"nativeSrc": "7065:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7065:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7038:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7038:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7047:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7047:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7034:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7034:3:12"
																		},
																		"nativeSrc": "7034:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7034:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7059:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7059:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7030:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7030:3:12"
																},
																"nativeSrc": "7030:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7030:32:12"
															},
															"nativeSrc": "7027:119:12",
															"nodeType": "YulIf",
															"src": "7027:119:12"
														},
														{
															"nativeSrc": "7156:117:12",
															"nodeType": "YulBlock",
															"src": "7156:117:12",
															"statements": [
																{
																	"nativeSrc": "7171:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7171:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7185:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7185:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7175:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7175:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7200:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7200:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7235:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7235:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7246:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7246:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7231:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7231:3:12"
																				},
																				"nativeSrc": "7231:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7231:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7255:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7255:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7210:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7210:20:12"
																		},
																		"nativeSrc": "7210:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7210:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7200:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7200:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "6951:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6987:9:12",
														"nodeType": "YulTypedName",
														"src": "6987:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6998:7:12",
														"nodeType": "YulTypedName",
														"src": "6998:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7010:6:12",
														"nodeType": "YulTypedName",
														"src": "7010:6:12",
														"type": ""
													}
												],
												"src": "6951:329:12"
											},
											{
												"body": {
													"nativeSrc": "7369:391:12",
													"nodeType": "YulBlock",
													"src": "7369:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7415:83:12",
																"nodeType": "YulBlock",
																"src": "7415:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7417:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7417:77:12"
																			},
																			"nativeSrc": "7417:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7417:79:12"
																		},
																		"nativeSrc": "7417:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7390:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7390:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7399:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7399:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7386:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7386:3:12"
																		},
																		"nativeSrc": "7386:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7386:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7411:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7411:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7382:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7382:3:12"
																},
																"nativeSrc": "7382:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7382:32:12"
															},
															"nativeSrc": "7379:119:12",
															"nodeType": "YulIf",
															"src": "7379:119:12"
														},
														{
															"nativeSrc": "7508:117:12",
															"nodeType": "YulBlock",
															"src": "7508:117:12",
															"statements": [
																{
																	"nativeSrc": "7523:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7523:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7537:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7537:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7527:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7527:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7552:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7552:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7587:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7587:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7598:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7598:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7583:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7583:3:12"
																				},
																				"nativeSrc": "7583:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7583:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7607:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7607:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7562:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7562:20:12"
																		},
																		"nativeSrc": "7562:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7562:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7552:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7552:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7635:118:12",
															"nodeType": "YulBlock",
															"src": "7635:118:12",
															"statements": [
																{
																	"nativeSrc": "7650:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7650:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7664:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7664:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7654:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7654:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7680:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7680:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7715:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7715:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7726:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7726:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7711:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7711:3:12"
																				},
																				"nativeSrc": "7711:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7711:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7735:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7735:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7690:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7690:20:12"
																		},
																		"nativeSrc": "7690:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7690:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7680:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7680:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7286:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7331:9:12",
														"nodeType": "YulTypedName",
														"src": "7331:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7342:7:12",
														"nodeType": "YulTypedName",
														"src": "7342:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7354:6:12",
														"nodeType": "YulTypedName",
														"src": "7354:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7362:6:12",
														"nodeType": "YulTypedName",
														"src": "7362:6:12",
														"type": ""
													}
												],
												"src": "7286:474:12"
											},
											{
												"body": {
													"nativeSrc": "7832:263:12",
													"nodeType": "YulBlock",
													"src": "7832:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7878:83:12",
																"nodeType": "YulBlock",
																"src": "7878:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7880:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7880:77:12"
																			},
																			"nativeSrc": "7880:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7880:79:12"
																		},
																		"nativeSrc": "7880:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7880:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7853:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7853:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7862:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7862:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7849:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7849:3:12"
																		},
																		"nativeSrc": "7849:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7849:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7874:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7874:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7845:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7845:3:12"
																},
																"nativeSrc": "7845:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7845:32:12"
															},
															"nativeSrc": "7842:119:12",
															"nodeType": "YulIf",
															"src": "7842:119:12"
														},
														{
															"nativeSrc": "7971:117:12",
															"nodeType": "YulBlock",
															"src": "7971:117:12",
															"statements": [
																{
																	"nativeSrc": "7986:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7986:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8000:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8000:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7990:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7990:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8015:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8015:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8050:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8050:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8061:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8061:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8046:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8046:3:12"
																				},
																				"nativeSrc": "8046:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8046:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8070:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8070:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8025:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8025:20:12"
																		},
																		"nativeSrc": "8025:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8025:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8015:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8015:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7766:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7802:9:12",
														"nodeType": "YulTypedName",
														"src": "7802:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7813:7:12",
														"nodeType": "YulTypedName",
														"src": "7813:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7825:6:12",
														"nodeType": "YulTypedName",
														"src": "7825:6:12",
														"type": ""
													}
												],
												"src": "7766:329:12"
											},
											{
												"body": {
													"nativeSrc": "8295:438:12",
													"nodeType": "YulBlock",
													"src": "8295:438:12",
													"statements": [
														{
															"nativeSrc": "8305:27:12",
															"nodeType": "YulAssignment",
															"src": "8305:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8317:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8317:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8328:3:12",
																		"nodeType": "YulLiteral",
																		"src": "8328:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8313:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8313:3:12"
																},
																"nativeSrc": "8313:19:12",
																"nodeType": "YulFunctionCall",
																"src": "8313:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8305:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8305:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8380:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8380:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8393:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8393:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8404:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8404:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8389:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8389:3:12"
																		},
																		"nativeSrc": "8389:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8389:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "8342:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "8342:37:12"
																},
																"nativeSrc": "8342:65:12",
																"nodeType": "YulFunctionCall",
																"src": "8342:65:12"
															},
															"nativeSrc": "8342:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "8342:65:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8455:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8455:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8468:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8468:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8479:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8479:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8464:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8464:3:12"
																		},
																		"nativeSrc": "8464:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8464:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "8417:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "8417:37:12"
																},
																"nativeSrc": "8417:66:12",
																"nodeType": "YulFunctionCall",
																"src": "8417:66:12"
															},
															"nativeSrc": "8417:66:12",
															"nodeType": "YulExpressionStatement",
															"src": "8417:66:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8533:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8533:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8546:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8546:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8557:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8557:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8542:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8542:3:12"
																		},
																		"nativeSrc": "8542:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8542:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "8493:39:12",
																	"nodeType": "YulIdentifier",
																	"src": "8493:39:12"
																},
																"nativeSrc": "8493:68:12",
																"nodeType": "YulFunctionCall",
																"src": "8493:68:12"
															},
															"nativeSrc": "8493:68:12",
															"nodeType": "YulExpressionStatement",
															"src": "8493:68:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "8615:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8615:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8628:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8628:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8639:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8639:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8624:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8624:3:12"
																		},
																		"nativeSrc": "8624:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8624:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8571:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "8571:43:12"
																},
																"nativeSrc": "8571:72:12",
																"nodeType": "YulFunctionCall",
																"src": "8571:72:12"
															},
															"nativeSrc": "8571:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "8571:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "8697:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8697:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8710:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8710:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8721:3:12",
																				"nodeType": "YulLiteral",
																				"src": "8721:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8706:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8706:3:12"
																		},
																		"nativeSrc": "8706:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8706:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8653:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "8653:43:12"
																},
																"nativeSrc": "8653:73:12",
																"nodeType": "YulFunctionCall",
																"src": "8653:73:12"
															},
															"nativeSrc": "8653:73:12",
															"nodeType": "YulExpressionStatement",
															"src": "8653:73:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bool_t_uint8_t_uint256_t_address__to_t_bool_t_bool_t_uint8_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "8101:632:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8235:9:12",
														"nodeType": "YulTypedName",
														"src": "8235:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8247:6:12",
														"nodeType": "YulTypedName",
														"src": "8247:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8255:6:12",
														"nodeType": "YulTypedName",
														"src": "8255:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8263:6:12",
														"nodeType": "YulTypedName",
														"src": "8263:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8271:6:12",
														"nodeType": "YulTypedName",
														"src": "8271:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8279:6:12",
														"nodeType": "YulTypedName",
														"src": "8279:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8290:4:12",
														"nodeType": "YulTypedName",
														"src": "8290:4:12",
														"type": ""
													}
												],
												"src": "8101:632:12"
											},
											{
												"body": {
													"nativeSrc": "8767:152:12",
													"nodeType": "YulBlock",
													"src": "8767:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8784:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8784:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8787:77:12",
																		"nodeType": "YulLiteral",
																		"src": "8787:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8777:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8777:6:12"
																},
																"nativeSrc": "8777:88:12",
																"nodeType": "YulFunctionCall",
																"src": "8777:88:12"
															},
															"nativeSrc": "8777:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "8777:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8881:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8881:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8884:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8884:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8874:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8874:6:12"
																},
																"nativeSrc": "8874:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8874:15:12"
															},
															"nativeSrc": "8874:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8874:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8905:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8905:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8908:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8908:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8898:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8898:6:12"
																},
																"nativeSrc": "8898:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8898:15:12"
															},
															"nativeSrc": "8898:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8898:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8739:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "8739:180:12"
											},
											{
												"body": {
													"nativeSrc": "8969:147:12",
													"nodeType": "YulBlock",
													"src": "8969:147:12",
													"statements": [
														{
															"nativeSrc": "8979:25:12",
															"nodeType": "YulAssignment",
															"src": "8979:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9002:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9002:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8984:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "8984:17:12"
																},
																"nativeSrc": "8984:20:12",
																"nodeType": "YulFunctionCall",
																"src": "8984:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8979:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "8979:1:12"
																}
															]
														},
														{
															"nativeSrc": "9013:25:12",
															"nodeType": "YulAssignment",
															"src": "9013:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9036:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9036:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9018:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "9018:17:12"
																},
																"nativeSrc": "9018:20:12",
																"nodeType": "YulFunctionCall",
																"src": "9018:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9013:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "9013:1:12"
																}
															]
														},
														{
															"nativeSrc": "9047:16:12",
															"nodeType": "YulAssignment",
															"src": "9047:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9058:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9058:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9061:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9061:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9054:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9054:3:12"
																},
																"nativeSrc": "9054:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9054:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9047:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9047:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9087:22:12",
																"nodeType": "YulBlock",
																"src": "9087:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9089:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9089:16:12"
																			},
																			"nativeSrc": "9089:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9089:18:12"
																		},
																		"nativeSrc": "9089:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9089:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9079:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9079:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9082:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9082:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9076:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9076:2:12"
																},
																"nativeSrc": "9076:10:12",
																"nodeType": "YulFunctionCall",
																"src": "9076:10:12"
															},
															"nativeSrc": "9073:36:12",
															"nodeType": "YulIf",
															"src": "9073:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8925:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8956:1:12",
														"nodeType": "YulTypedName",
														"src": "8956:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8959:1:12",
														"nodeType": "YulTypedName",
														"src": "8959:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8965:3:12",
														"nodeType": "YulTypedName",
														"src": "8965:3:12",
														"type": ""
													}
												],
												"src": "8925:191:12"
											},
											{
												"body": {
													"nativeSrc": "9248:206:12",
													"nodeType": "YulBlock",
													"src": "9248:206:12",
													"statements": [
														{
															"nativeSrc": "9258:26:12",
															"nodeType": "YulAssignment",
															"src": "9258:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9270:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9270:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9281:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9281:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9266:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9266:3:12"
																},
																"nativeSrc": "9266:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9266:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9258:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9258:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9338:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9338:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9351:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9351:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9362:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9362:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9347:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9347:3:12"
																		},
																		"nativeSrc": "9347:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9347:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9294:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9294:43:12"
																},
																"nativeSrc": "9294:71:12",
																"nodeType": "YulFunctionCall",
																"src": "9294:71:12"
															},
															"nativeSrc": "9294:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "9294:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9419:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9419:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9432:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9432:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9443:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9443:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9428:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9428:3:12"
																		},
																		"nativeSrc": "9428:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9428:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9375:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9375:43:12"
																},
																"nativeSrc": "9375:72:12",
																"nodeType": "YulFunctionCall",
																"src": "9375:72:12"
															},
															"nativeSrc": "9375:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "9375:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9122:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9212:9:12",
														"nodeType": "YulTypedName",
														"src": "9212:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9224:6:12",
														"nodeType": "YulTypedName",
														"src": "9224:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9232:6:12",
														"nodeType": "YulTypedName",
														"src": "9232:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9243:4:12",
														"nodeType": "YulTypedName",
														"src": "9243:4:12",
														"type": ""
													}
												],
												"src": "9122:332:12"
											},
											{
												"body": {
													"nativeSrc": "9614:288:12",
													"nodeType": "YulBlock",
													"src": "9614:288:12",
													"statements": [
														{
															"nativeSrc": "9624:26:12",
															"nodeType": "YulAssignment",
															"src": "9624:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9636:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9636:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9647:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9647:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9632:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9632:3:12"
																},
																"nativeSrc": "9632:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9632:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9624:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9624:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9704:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9704:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9717:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9717:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9728:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9728:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9713:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9713:3:12"
																		},
																		"nativeSrc": "9713:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9713:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9660:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9660:43:12"
																},
																"nativeSrc": "9660:71:12",
																"nodeType": "YulFunctionCall",
																"src": "9660:71:12"
															},
															"nativeSrc": "9660:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "9660:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9785:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9785:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9798:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9798:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9809:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9809:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9794:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9794:3:12"
																		},
																		"nativeSrc": "9794:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9794:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9741:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9741:43:12"
																},
																"nativeSrc": "9741:72:12",
																"nodeType": "YulFunctionCall",
																"src": "9741:72:12"
															},
															"nativeSrc": "9741:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "9741:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9867:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9867:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9880:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9880:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9891:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9891:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9876:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9876:3:12"
																		},
																		"nativeSrc": "9876:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9876:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9823:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9823:43:12"
																},
																"nativeSrc": "9823:72:12",
																"nodeType": "YulFunctionCall",
																"src": "9823:72:12"
															},
															"nativeSrc": "9823:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "9823:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9460:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9570:9:12",
														"nodeType": "YulTypedName",
														"src": "9570:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9582:6:12",
														"nodeType": "YulTypedName",
														"src": "9582:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9590:6:12",
														"nodeType": "YulTypedName",
														"src": "9590:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9598:6:12",
														"nodeType": "YulTypedName",
														"src": "9598:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9609:4:12",
														"nodeType": "YulTypedName",
														"src": "9609:4:12",
														"type": ""
													}
												],
												"src": "9460:442:12"
											},
											{
												"body": {
													"nativeSrc": "9969:78:12",
													"nodeType": "YulBlock",
													"src": "9969:78:12",
													"statements": [
														{
															"nativeSrc": "9979:22:12",
															"nodeType": "YulAssignment",
															"src": "9979:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9994:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9994:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9988:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9988:5:12"
																},
																"nativeSrc": "9988:13:12",
																"nodeType": "YulFunctionCall",
																"src": "9988:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9979:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9979:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10035:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10035:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "10010:24:12",
																	"nodeType": "YulIdentifier",
																	"src": "10010:24:12"
																},
																"nativeSrc": "10010:31:12",
																"nodeType": "YulFunctionCall",
																"src": "10010:31:12"
															},
															"nativeSrc": "10010:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "10010:31:12"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "9908:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9947:6:12",
														"nodeType": "YulTypedName",
														"src": "9947:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9955:3:12",
														"nodeType": "YulTypedName",
														"src": "9955:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9963:5:12",
														"nodeType": "YulTypedName",
														"src": "9963:5:12",
														"type": ""
													}
												],
												"src": "9908:139:12"
											},
											{
												"body": {
													"nativeSrc": "10128:272:12",
													"nodeType": "YulBlock",
													"src": "10128:272:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "10174:83:12",
																"nodeType": "YulBlock",
																"src": "10174:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10176:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "10176:77:12"
																			},
																			"nativeSrc": "10176:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10176:79:12"
																		},
																		"nativeSrc": "10176:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10176:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10149:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10149:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10158:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10158:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10145:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10145:3:12"
																		},
																		"nativeSrc": "10145:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10145:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10170:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10170:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10141:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10141:3:12"
																},
																"nativeSrc": "10141:32:12",
																"nodeType": "YulFunctionCall",
																"src": "10141:32:12"
															},
															"nativeSrc": "10138:119:12",
															"nodeType": "YulIf",
															"src": "10138:119:12"
														},
														{
															"nativeSrc": "10267:126:12",
															"nodeType": "YulBlock",
															"src": "10267:126:12",
															"statements": [
																{
																	"nativeSrc": "10282:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10282:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10296:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10296:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10286:6:12",
																			"nodeType": "YulTypedName",
																			"src": "10286:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10311:72:12",
																	"nodeType": "YulAssignment",
																	"src": "10311:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10355:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10355:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10366:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10366:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10351:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10351:3:12"
																				},
																				"nativeSrc": "10351:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10351:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10375:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10375:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "10321:29:12",
																			"nodeType": "YulIdentifier",
																			"src": "10321:29:12"
																		},
																		"nativeSrc": "10321:62:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10321:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10311:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10311:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "10053:347:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10098:9:12",
														"nodeType": "YulTypedName",
														"src": "10098:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10109:7:12",
														"nodeType": "YulTypedName",
														"src": "10109:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10121:6:12",
														"nodeType": "YulTypedName",
														"src": "10121:6:12",
														"type": ""
													}
												],
												"src": "10053:347:12"
											},
											{
												"body": {
													"nativeSrc": "10451:149:12",
													"nodeType": "YulBlock",
													"src": "10451:149:12",
													"statements": [
														{
															"nativeSrc": "10461:25:12",
															"nodeType": "YulAssignment",
															"src": "10461:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10484:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10484:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10466:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "10466:17:12"
																},
																"nativeSrc": "10466:20:12",
																"nodeType": "YulFunctionCall",
																"src": "10466:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10461:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "10461:1:12"
																}
															]
														},
														{
															"nativeSrc": "10495:25:12",
															"nodeType": "YulAssignment",
															"src": "10495:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10518:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10518:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10500:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "10500:17:12"
																},
																"nativeSrc": "10500:20:12",
																"nodeType": "YulFunctionCall",
																"src": "10500:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10495:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "10495:1:12"
																}
															]
														},
														{
															"nativeSrc": "10529:17:12",
															"nodeType": "YulAssignment",
															"src": "10529:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10541:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10541:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10544:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10544:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10537:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10537:3:12"
																},
																"nativeSrc": "10537:9:12",
																"nodeType": "YulFunctionCall",
																"src": "10537:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "10529:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10529:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10571:22:12",
																"nodeType": "YulBlock",
																"src": "10571:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10573:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "10573:16:12"
																			},
																			"nativeSrc": "10573:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10573:18:12"
																		},
																		"nativeSrc": "10573:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10573:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10562:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10562:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10568:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10568:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10559:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "10559:2:12"
																},
																"nativeSrc": "10559:11:12",
																"nodeType": "YulFunctionCall",
																"src": "10559:11:12"
															},
															"nativeSrc": "10556:37:12",
															"nodeType": "YulIf",
															"src": "10556:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10406:194:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10437:1:12",
														"nodeType": "YulTypedName",
														"src": "10437:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10440:1:12",
														"nodeType": "YulTypedName",
														"src": "10440:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10446:4:12",
														"nodeType": "YulTypedName",
														"src": "10446:4:12",
														"type": ""
													}
												],
												"src": "10406:194:12"
											},
											{
												"body": {
													"nativeSrc": "10719:34:12",
													"nodeType": "YulBlock",
													"src": "10719:34:12",
													"statements": [
														{
															"nativeSrc": "10729:18:12",
															"nodeType": "YulAssignment",
															"src": "10729:18:12",
															"value": {
																"name": "pos",
																"nativeSrc": "10744:3:12",
																"nodeType": "YulIdentifier",
																"src": "10744:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10729:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "10729:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "10606:147:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10691:3:12",
														"nodeType": "YulTypedName",
														"src": "10691:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10696:6:12",
														"nodeType": "YulTypedName",
														"src": "10696:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10707:11:12",
														"nodeType": "YulTypedName",
														"src": "10707:11:12",
														"type": ""
													}
												],
												"src": "10606:147:12"
											},
											{
												"body": {
													"nativeSrc": "10865:8:12",
													"nodeType": "YulBlock",
													"src": "10865:8:12",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "10759:114:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10857:6:12",
														"nodeType": "YulTypedName",
														"src": "10857:6:12",
														"type": ""
													}
												],
												"src": "10759:114:12"
											},
											{
												"body": {
													"nativeSrc": "11042:235:12",
													"nodeType": "YulBlock",
													"src": "11042:235:12",
													"statements": [
														{
															"nativeSrc": "11052:90:12",
															"nodeType": "YulAssignment",
															"src": "11052:90:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11135:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11135:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11140:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11140:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11059:75:12",
																	"nodeType": "YulIdentifier",
																	"src": "11059:75:12"
																},
																"nativeSrc": "11059:83:12",
																"nodeType": "YulFunctionCall",
																"src": "11059:83:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11052:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11052:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11240:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11240:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "11151:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "11151:88:12"
																},
																"nativeSrc": "11151:93:12",
																"nodeType": "YulFunctionCall",
																"src": "11151:93:12"
															},
															"nativeSrc": "11151:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "11151:93:12"
														},
														{
															"nativeSrc": "11253:18:12",
															"nodeType": "YulAssignment",
															"src": "11253:18:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11264:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11264:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11269:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11269:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11260:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11260:3:12"
																},
																"nativeSrc": "11260:11:12",
																"nodeType": "YulFunctionCall",
																"src": "11260:11:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11253:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11253:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "10879:398:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11030:3:12",
														"nodeType": "YulTypedName",
														"src": "11030:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11038:3:12",
														"nodeType": "YulTypedName",
														"src": "11038:3:12",
														"type": ""
													}
												],
												"src": "10879:398:12"
											},
											{
												"body": {
													"nativeSrc": "11471:191:12",
													"nodeType": "YulBlock",
													"src": "11471:191:12",
													"statements": [
														{
															"nativeSrc": "11482:154:12",
															"nodeType": "YulAssignment",
															"src": "11482:154:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11632:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11632:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11489:141:12",
																	"nodeType": "YulIdentifier",
																	"src": "11489:141:12"
																},
																"nativeSrc": "11489:147:12",
																"nodeType": "YulFunctionCall",
																"src": "11489:147:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11482:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11482:3:12"
																}
															]
														},
														{
															"nativeSrc": "11646:10:12",
															"nodeType": "YulAssignment",
															"src": "11646:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "11653:3:12",
																"nodeType": "YulIdentifier",
																"src": "11653:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11646:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11646:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11283:379:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11458:3:12",
														"nodeType": "YulTypedName",
														"src": "11458:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11467:3:12",
														"nodeType": "YulTypedName",
														"src": "11467:3:12",
														"type": ""
													}
												],
												"src": "11283:379:12"
											},
											{
												"body": {
													"nativeSrc": "11764:73:12",
													"nodeType": "YulBlock",
													"src": "11764:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11781:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11781:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11786:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11786:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11774:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11774:6:12"
																},
																"nativeSrc": "11774:19:12",
																"nodeType": "YulFunctionCall",
																"src": "11774:19:12"
															},
															"nativeSrc": "11774:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "11774:19:12"
														},
														{
															"nativeSrc": "11802:29:12",
															"nodeType": "YulAssignment",
															"src": "11802:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11821:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11821:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11826:4:12",
																		"nodeType": "YulLiteral",
																		"src": "11826:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11817:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11817:3:12"
																},
																"nativeSrc": "11817:14:12",
																"nodeType": "YulFunctionCall",
																"src": "11817:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11802:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "11802:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "11668:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11736:3:12",
														"nodeType": "YulTypedName",
														"src": "11736:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11741:6:12",
														"nodeType": "YulTypedName",
														"src": "11741:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11752:11:12",
														"nodeType": "YulTypedName",
														"src": "11752:11:12",
														"type": ""
													}
												],
												"src": "11668:169:12"
											},
											{
												"body": {
													"nativeSrc": "11949:75:12",
													"nodeType": "YulBlock",
													"src": "11949:75:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11971:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11971:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11979:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11979:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11967:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11967:3:12"
																		},
																		"nativeSrc": "11967:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11967:14:12"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "11983:33:12",
																		"nodeType": "YulLiteral",
																		"src": "11983:33:12",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11960:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11960:6:12"
																},
																"nativeSrc": "11960:57:12",
																"nodeType": "YulFunctionCall",
																"src": "11960:57:12"
															},
															"nativeSrc": "11960:57:12",
															"nodeType": "YulExpressionStatement",
															"src": "11960:57:12"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "11843:181:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11941:6:12",
														"nodeType": "YulTypedName",
														"src": "11941:6:12",
														"type": ""
													}
												],
												"src": "11843:181:12"
											},
											{
												"body": {
													"nativeSrc": "12176:220:12",
													"nodeType": "YulBlock",
													"src": "12176:220:12",
													"statements": [
														{
															"nativeSrc": "12186:74:12",
															"nodeType": "YulAssignment",
															"src": "12186:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12252:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12252:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12257:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12257:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12193:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "12193:58:12"
																},
																"nativeSrc": "12193:67:12",
																"nodeType": "YulFunctionCall",
																"src": "12193:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12186:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12186:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12358:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12358:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "12269:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "12269:88:12"
																},
																"nativeSrc": "12269:93:12",
																"nodeType": "YulFunctionCall",
																"src": "12269:93:12"
															},
															"nativeSrc": "12269:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "12269:93:12"
														},
														{
															"nativeSrc": "12371:19:12",
															"nodeType": "YulAssignment",
															"src": "12371:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12382:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12382:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12387:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12387:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12378:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12378:3:12"
																},
																"nativeSrc": "12378:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12378:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12371:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12371:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12030:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12164:3:12",
														"nodeType": "YulTypedName",
														"src": "12164:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12172:3:12",
														"nodeType": "YulTypedName",
														"src": "12172:3:12",
														"type": ""
													}
												],
												"src": "12030:366:12"
											},
											{
												"body": {
													"nativeSrc": "12573:248:12",
													"nodeType": "YulBlock",
													"src": "12573:248:12",
													"statements": [
														{
															"nativeSrc": "12583:26:12",
															"nodeType": "YulAssignment",
															"src": "12583:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12595:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12595:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12606:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12606:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12591:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12591:3:12"
																},
																"nativeSrc": "12591:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12591:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12583:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12583:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12630:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12630:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12641:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12641:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12626:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12626:3:12"
																		},
																		"nativeSrc": "12626:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12626:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12649:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "12649:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12655:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12655:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12645:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12645:3:12"
																		},
																		"nativeSrc": "12645:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12645:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12619:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12619:6:12"
																},
																"nativeSrc": "12619:47:12",
																"nodeType": "YulFunctionCall",
																"src": "12619:47:12"
															},
															"nativeSrc": "12619:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "12619:47:12"
														},
														{
															"nativeSrc": "12675:139:12",
															"nodeType": "YulAssignment",
															"src": "12675:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12809:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12809:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12683:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "12683:124:12"
																},
																"nativeSrc": "12683:131:12",
																"nodeType": "YulFunctionCall",
																"src": "12683:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12675:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12675:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12402:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12553:9:12",
														"nodeType": "YulTypedName",
														"src": "12553:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12568:4:12",
														"nodeType": "YulTypedName",
														"src": "12568:4:12",
														"type": ""
													}
												],
												"src": "12402:419:12"
											},
											{
												"body": {
													"nativeSrc": "12871:61:12",
													"nodeType": "YulBlock",
													"src": "12871:61:12",
													"statements": [
														{
															"nativeSrc": "12881:45:12",
															"nodeType": "YulAssignment",
															"src": "12881:45:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12896:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12896:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12903:22:12",
																		"nodeType": "YulLiteral",
																		"src": "12903:22:12",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12892:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12892:3:12"
																},
																"nativeSrc": "12892:34:12",
																"nodeType": "YulFunctionCall",
																"src": "12892:34:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12881:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "12881:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "12827:105:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12853:5:12",
														"nodeType": "YulTypedName",
														"src": "12853:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12863:7:12",
														"nodeType": "YulTypedName",
														"src": "12863:7:12",
														"type": ""
													}
												],
												"src": "12827:105:12"
											},
											{
												"body": {
													"nativeSrc": "12980:78:12",
													"nodeType": "YulBlock",
													"src": "12980:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "13036:16:12",
																"nodeType": "YulBlock",
																"src": "13036:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13045:1:12",
																					"nodeType": "YulLiteral",
																					"src": "13045:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13048:1:12",
																					"nodeType": "YulLiteral",
																					"src": "13048:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13038:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13038:6:12"
																			},
																			"nativeSrc": "13038:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13038:12:12"
																		},
																		"nativeSrc": "13038:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "13038:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13003:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "13003:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13027:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "13027:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "13010:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "13010:16:12"
																				},
																				"nativeSrc": "13010:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13010:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13000:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "13000:2:12"
																		},
																		"nativeSrc": "13000:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13000:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12993:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12993:6:12"
																},
																"nativeSrc": "12993:42:12",
																"nodeType": "YulFunctionCall",
																"src": "12993:42:12"
															},
															"nativeSrc": "12990:62:12",
															"nodeType": "YulIf",
															"src": "12990:62:12"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "12938:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12973:5:12",
														"nodeType": "YulTypedName",
														"src": "12973:5:12",
														"type": ""
													}
												],
												"src": "12938:120:12"
											},
											{
												"body": {
													"nativeSrc": "13126:79:12",
													"nodeType": "YulBlock",
													"src": "13126:79:12",
													"statements": [
														{
															"nativeSrc": "13136:22:12",
															"nodeType": "YulAssignment",
															"src": "13136:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13151:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13151:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13145:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "13145:5:12"
																},
																"nativeSrc": "13145:13:12",
																"nodeType": "YulFunctionCall",
																"src": "13145:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13136:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "13136:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13193:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "13193:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "13167:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "13167:25:12"
																},
																"nativeSrc": "13167:32:12",
																"nodeType": "YulFunctionCall",
																"src": "13167:32:12"
															},
															"nativeSrc": "13167:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "13167:32:12"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "13064:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13104:6:12",
														"nodeType": "YulTypedName",
														"src": "13104:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13112:3:12",
														"nodeType": "YulTypedName",
														"src": "13112:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13120:5:12",
														"nodeType": "YulTypedName",
														"src": "13120:5:12",
														"type": ""
													}
												],
												"src": "13064:141:12"
											},
											{
												"body": {
													"nativeSrc": "13255:32:12",
													"nodeType": "YulBlock",
													"src": "13255:32:12",
													"statements": [
														{
															"nativeSrc": "13265:16:12",
															"nodeType": "YulAssignment",
															"src": "13265:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "13276:5:12",
																"nodeType": "YulIdentifier",
																"src": "13276:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "13265:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "13265:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "13211:76:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13237:5:12",
														"nodeType": "YulTypedName",
														"src": "13237:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "13247:7:12",
														"nodeType": "YulTypedName",
														"src": "13247:7:12",
														"type": ""
													}
												],
												"src": "13211:76:12"
											},
											{
												"body": {
													"nativeSrc": "13335:78:12",
													"nodeType": "YulBlock",
													"src": "13335:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "13391:16:12",
																"nodeType": "YulBlock",
																"src": "13391:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13400:1:12",
																					"nodeType": "YulLiteral",
																					"src": "13400:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13403:1:12",
																					"nodeType": "YulLiteral",
																					"src": "13403:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13393:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13393:6:12"
																			},
																			"nativeSrc": "13393:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13393:12:12"
																		},
																		"nativeSrc": "13393:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "13393:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13358:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "13358:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13382:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "13382:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "13365:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "13365:16:12"
																				},
																				"nativeSrc": "13365:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13365:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13355:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "13355:2:12"
																		},
																		"nativeSrc": "13355:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13355:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13348:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13348:6:12"
																},
																"nativeSrc": "13348:42:12",
																"nodeType": "YulFunctionCall",
																"src": "13348:42:12"
															},
															"nativeSrc": "13345:62:12",
															"nodeType": "YulIf",
															"src": "13345:62:12"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "13293:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13328:5:12",
														"nodeType": "YulTypedName",
														"src": "13328:5:12",
														"type": ""
													}
												],
												"src": "13293:120:12"
											},
											{
												"body": {
													"nativeSrc": "13481:79:12",
													"nodeType": "YulBlock",
													"src": "13481:79:12",
													"statements": [
														{
															"nativeSrc": "13491:22:12",
															"nodeType": "YulAssignment",
															"src": "13491:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13506:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13506:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13500:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "13500:5:12"
																},
																"nativeSrc": "13500:13:12",
																"nodeType": "YulFunctionCall",
																"src": "13500:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13491:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "13491:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13548:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "13548:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "13522:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "13522:25:12"
																},
																"nativeSrc": "13522:32:12",
																"nodeType": "YulFunctionCall",
																"src": "13522:32:12"
															},
															"nativeSrc": "13522:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "13522:32:12"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "13419:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13459:6:12",
														"nodeType": "YulTypedName",
														"src": "13459:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13467:3:12",
														"nodeType": "YulTypedName",
														"src": "13467:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13475:5:12",
														"nodeType": "YulTypedName",
														"src": "13475:5:12",
														"type": ""
													}
												],
												"src": "13419:141:12"
											},
											{
												"body": {
													"nativeSrc": "13629:80:12",
													"nodeType": "YulBlock",
													"src": "13629:80:12",
													"statements": [
														{
															"nativeSrc": "13639:22:12",
															"nodeType": "YulAssignment",
															"src": "13639:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13654:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13654:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13648:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "13648:5:12"
																},
																"nativeSrc": "13648:13:12",
																"nodeType": "YulFunctionCall",
																"src": "13648:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13639:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "13639:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13697:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "13697:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "13670:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "13670:26:12"
																},
																"nativeSrc": "13670:33:12",
																"nodeType": "YulFunctionCall",
																"src": "13670:33:12"
															},
															"nativeSrc": "13670:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "13670:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "13566:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13607:6:12",
														"nodeType": "YulTypedName",
														"src": "13607:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13615:3:12",
														"nodeType": "YulTypedName",
														"src": "13615:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13623:5:12",
														"nodeType": "YulTypedName",
														"src": "13623:5:12",
														"type": ""
													}
												],
												"src": "13566:143:12"
											},
											{
												"body": {
													"nativeSrc": "13857:829:12",
													"nodeType": "YulBlock",
													"src": "13857:829:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "13904:83:12",
																"nodeType": "YulBlock",
																"src": "13904:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13906:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "13906:77:12"
																			},
																			"nativeSrc": "13906:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13906:79:12"
																		},
																		"nativeSrc": "13906:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "13906:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13878:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "13878:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13887:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13887:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13874:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13874:3:12"
																		},
																		"nativeSrc": "13874:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13874:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13899:3:12",
																		"nodeType": "YulLiteral",
																		"src": "13899:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13870:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13870:3:12"
																},
																"nativeSrc": "13870:33:12",
																"nodeType": "YulFunctionCall",
																"src": "13870:33:12"
															},
															"nativeSrc": "13867:120:12",
															"nodeType": "YulIf",
															"src": "13867:120:12"
														},
														{
															"nativeSrc": "13997:127:12",
															"nodeType": "YulBlock",
															"src": "13997:127:12",
															"statements": [
																{
																	"nativeSrc": "14012:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14012:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14026:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14026:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14016:6:12",
																			"nodeType": "YulTypedName",
																			"src": "14016:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14041:73:12",
																	"nodeType": "YulAssignment",
																	"src": "14041:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14086:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "14086:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14097:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "14097:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14082:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "14082:3:12"
																				},
																				"nativeSrc": "14082:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "14082:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14106:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "14106:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "14051:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "14051:30:12"
																		},
																		"nativeSrc": "14051:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14051:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14041:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "14041:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14134:128:12",
															"nodeType": "YulBlock",
															"src": "14134:128:12",
															"statements": [
																{
																	"nativeSrc": "14149:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14149:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14163:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14163:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14153:6:12",
																			"nodeType": "YulTypedName",
																			"src": "14153:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14179:73:12",
																	"nodeType": "YulAssignment",
																	"src": "14179:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14224:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "14224:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14235:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "14235:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14220:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "14220:3:12"
																				},
																				"nativeSrc": "14220:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "14220:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14244:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "14244:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "14189:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "14189:30:12"
																		},
																		"nativeSrc": "14189:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14189:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14179:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "14179:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14272:129:12",
															"nodeType": "YulBlock",
															"src": "14272:129:12",
															"statements": [
																{
																	"nativeSrc": "14287:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14287:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14301:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14301:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14291:6:12",
																			"nodeType": "YulTypedName",
																			"src": "14291:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14317:74:12",
																	"nodeType": "YulAssignment",
																	"src": "14317:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14363:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "14363:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14374:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "14374:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14359:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "14359:3:12"
																				},
																				"nativeSrc": "14359:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "14359:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14383:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "14383:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "14327:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "14327:31:12"
																		},
																		"nativeSrc": "14327:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14327:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "14317:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "14317:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14411:129:12",
															"nodeType": "YulBlock",
															"src": "14411:129:12",
															"statements": [
																{
																	"nativeSrc": "14426:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14426:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14440:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14440:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14430:6:12",
																			"nodeType": "YulTypedName",
																			"src": "14430:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14456:74:12",
																	"nodeType": "YulAssignment",
																	"src": "14456:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14502:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "14502:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14513:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "14513:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14498:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "14498:3:12"
																				},
																				"nativeSrc": "14498:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "14498:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14522:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "14522:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "14466:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "14466:31:12"
																		},
																		"nativeSrc": "14466:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14466:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "14456:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "14456:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14550:129:12",
															"nodeType": "YulBlock",
															"src": "14550:129:12",
															"statements": [
																{
																	"nativeSrc": "14565:17:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14565:17:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14579:3:12",
																		"nodeType": "YulLiteral",
																		"src": "14579:3:12",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14569:6:12",
																			"nodeType": "YulTypedName",
																			"src": "14569:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14596:73:12",
																	"nodeType": "YulAssignment",
																	"src": "14596:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14641:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "14641:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14652:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "14652:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14637:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "14637:3:12"
																				},
																				"nativeSrc": "14637:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "14637:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14661:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "14661:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "14606:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "14606:30:12"
																		},
																		"nativeSrc": "14606:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14606:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "14596:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "14596:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "13715:971:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13795:9:12",
														"nodeType": "YulTypedName",
														"src": "13795:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13806:7:12",
														"nodeType": "YulTypedName",
														"src": "13806:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13818:6:12",
														"nodeType": "YulTypedName",
														"src": "13818:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13826:6:12",
														"nodeType": "YulTypedName",
														"src": "13826:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13834:6:12",
														"nodeType": "YulTypedName",
														"src": "13834:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13842:6:12",
														"nodeType": "YulTypedName",
														"src": "13842:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "13850:6:12",
														"nodeType": "YulTypedName",
														"src": "13850:6:12",
														"type": ""
													}
												],
												"src": "13715:971:12"
											},
											{
												"body": {
													"nativeSrc": "14740:362:12",
													"nodeType": "YulBlock",
													"src": "14740:362:12",
													"statements": [
														{
															"nativeSrc": "14750:25:12",
															"nodeType": "YulAssignment",
															"src": "14750:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14773:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "14773:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14755:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "14755:17:12"
																},
																"nativeSrc": "14755:20:12",
																"nodeType": "YulFunctionCall",
																"src": "14755:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14750:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "14750:1:12"
																}
															]
														},
														{
															"nativeSrc": "14784:25:12",
															"nodeType": "YulAssignment",
															"src": "14784:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14807:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "14807:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14789:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "14789:17:12"
																},
																"nativeSrc": "14789:20:12",
																"nodeType": "YulFunctionCall",
																"src": "14789:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14784:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "14784:1:12"
																}
															]
														},
														{
															"nativeSrc": "14818:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "14818:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14841:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "14841:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14844:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "14844:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14837:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14837:3:12"
																},
																"nativeSrc": "14837:9:12",
																"nodeType": "YulFunctionCall",
																"src": "14837:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "14822:11:12",
																	"nodeType": "YulTypedName",
																	"src": "14822:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14855:41:12",
															"nodeType": "YulAssignment",
															"src": "14855:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "14884:11:12",
																		"nodeType": "YulIdentifier",
																		"src": "14884:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14866:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "14866:17:12"
																},
																"nativeSrc": "14866:30:12",
																"nodeType": "YulFunctionCall",
																"src": "14866:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "14855:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "14855:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15073:22:12",
																"nodeType": "YulBlock",
																"src": "15073:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15075:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "15075:16:12"
																			},
																			"nativeSrc": "15075:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15075:18:12"
																		},
																		"nativeSrc": "15075:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "15075:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "15006:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "15006:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "14999:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "14999:6:12"
																				},
																				"nativeSrc": "14999:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "14999:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "15029:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "15029:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "15036:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "15036:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "15045:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "15045:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "15032:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "15032:3:12"
																						},
																						"nativeSrc": "15032:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "15032:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "15026:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "15026:2:12"
																				},
																				"nativeSrc": "15026:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "15026:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "14979:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "14979:2:12"
																		},
																		"nativeSrc": "14979:83:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14979:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14959:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14959:6:12"
																},
																"nativeSrc": "14959:113:12",
																"nodeType": "YulFunctionCall",
																"src": "14959:113:12"
															},
															"nativeSrc": "14956:139:12",
															"nodeType": "YulIf",
															"src": "14956:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "14692:410:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14723:1:12",
														"nodeType": "YulTypedName",
														"src": "14723:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14726:1:12",
														"nodeType": "YulTypedName",
														"src": "14726:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "14732:7:12",
														"nodeType": "YulTypedName",
														"src": "14732:7:12",
														"type": ""
													}
												],
												"src": "14692:410:12"
											},
											{
												"body": {
													"nativeSrc": "15159:51:12",
													"nodeType": "YulBlock",
													"src": "15159:51:12",
													"statements": [
														{
															"nativeSrc": "15169:34:12",
															"nodeType": "YulAssignment",
															"src": "15169:34:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15194:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "15197:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "15197:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "15190:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15190:3:12"
																},
																"nativeSrc": "15190:13:12",
																"nodeType": "YulFunctionCall",
																"src": "15190:13:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "15169:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "15169:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "15108:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15140:5:12",
														"nodeType": "YulTypedName",
														"src": "15140:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "15150:8:12",
														"nodeType": "YulTypedName",
														"src": "15150:8:12",
														"type": ""
													}
												],
												"src": "15108:102:12"
											},
											{
												"body": {
													"nativeSrc": "15289:775:12",
													"nodeType": "YulBlock",
													"src": "15289:775:12",
													"statements": [
														{
															"nativeSrc": "15299:15:12",
															"nodeType": "YulAssignment",
															"src": "15299:15:12",
															"value": {
																"name": "_power",
																"nativeSrc": "15308:6:12",
																"nodeType": "YulIdentifier",
																"src": "15308:6:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "15299:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "15299:5:12"
																}
															]
														},
														{
															"nativeSrc": "15323:14:12",
															"nodeType": "YulAssignment",
															"src": "15323:14:12",
															"value": {
																"name": "_base",
																"nativeSrc": "15332:5:12",
																"nodeType": "YulIdentifier",
																"src": "15332:5:12"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "15323:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15323:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15381:677:12",
																"nodeType": "YulBlock",
																"src": "15381:677:12",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "15469:22:12",
																			"nodeType": "YulBlock",
																			"src": "15469:22:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "15471:16:12",
																							"nodeType": "YulIdentifier",
																							"src": "15471:16:12"
																						},
																						"nativeSrc": "15471:18:12",
																						"nodeType": "YulFunctionCall",
																						"src": "15471:18:12"
																					},
																					"nativeSrc": "15471:18:12",
																					"nodeType": "YulExpressionStatement",
																					"src": "15471:18:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "15447:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "15447:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "15457:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "15457:3:12"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "15462:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "15462:4:12"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "15453:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "15453:3:12"
																					},
																					"nativeSrc": "15453:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "15453:14:12"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "15444:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "15444:2:12"
																			},
																			"nativeSrc": "15444:24:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15444:24:12"
																		},
																		"nativeSrc": "15441:50:12",
																		"nodeType": "YulIf",
																		"src": "15441:50:12"
																	},
																	{
																		"body": {
																			"nativeSrc": "15536:419:12",
																			"nodeType": "YulBlock",
																			"src": "15536:419:12",
																			"statements": [
																				{
																					"nativeSrc": "15916:25:12",
																					"nodeType": "YulAssignment",
																					"src": "15916:25:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "15929:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "15929:5:12"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "15936:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "15936:4:12"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "15925:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "15925:3:12"
																						},
																						"nativeSrc": "15925:16:12",
																						"nodeType": "YulFunctionCall",
																						"src": "15925:16:12"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "15916:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "15916:5:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "15511:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "15511:8:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15521:1:12",
																					"nodeType": "YulLiteral",
																					"src": "15521:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "15507:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "15507:3:12"
																			},
																			"nativeSrc": "15507:16:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15507:16:12"
																		},
																		"nativeSrc": "15504:451:12",
																		"nodeType": "YulIf",
																		"src": "15504:451:12"
																	},
																	{
																		"nativeSrc": "15968:23:12",
																		"nodeType": "YulAssignment",
																		"src": "15968:23:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "15980:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "15980:4:12"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "15986:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "15986:4:12"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "15976:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "15976:3:12"
																			},
																			"nativeSrc": "15976:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15976:15:12"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "15968:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "15968:4:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "16004:44:12",
																		"nodeType": "YulAssignment",
																		"src": "16004:44:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "16039:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "16039:8:12"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "16016:22:12",
																				"nodeType": "YulIdentifier",
																				"src": "16016:22:12"
																			},
																			"nativeSrc": "16016:32:12",
																			"nodeType": "YulFunctionCall",
																			"src": "16016:32:12"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "16004:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "16004:8:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "15357:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "15357:8:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15367:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15367:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15354:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "15354:2:12"
																},
																"nativeSrc": "15354:15:12",
																"nodeType": "YulFunctionCall",
																"src": "15354:15:12"
															},
															"nativeSrc": "15346:712:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "15370:2:12",
																"nodeType": "YulBlock",
																"src": "15370:2:12",
																"statements": []
															},
															"pre": {
																"nativeSrc": "15350:3:12",
																"nodeType": "YulBlock",
																"src": "15350:3:12",
																"statements": []
															},
															"src": "15346:712:12"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "15216:848:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "15244:6:12",
														"nodeType": "YulTypedName",
														"src": "15244:6:12",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "15252:5:12",
														"nodeType": "YulTypedName",
														"src": "15252:5:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "15259:8:12",
														"nodeType": "YulTypedName",
														"src": "15259:8:12",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "15269:3:12",
														"nodeType": "YulTypedName",
														"src": "15269:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "15277:5:12",
														"nodeType": "YulTypedName",
														"src": "15277:5:12",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "15284:4:12",
														"nodeType": "YulTypedName",
														"src": "15284:4:12",
														"type": ""
													}
												],
												"src": "15216:848:12"
											},
											{
												"body": {
													"nativeSrc": "16130:1013:12",
													"nodeType": "YulBlock",
													"src": "16130:1013:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "16325:20:12",
																"nodeType": "YulBlock",
																"src": "16325:20:12",
																"statements": [
																	{
																		"nativeSrc": "16327:10:12",
																		"nodeType": "YulAssignment",
																		"src": "16327:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "16336:1:12",
																			"nodeType": "YulLiteral",
																			"src": "16336:1:12",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "16327:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "16327:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "16338:5:12",
																		"nodeType": "YulLeave",
																		"src": "16338:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "16315:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "16315:8:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16308:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16308:6:12"
																},
																"nativeSrc": "16308:16:12",
																"nodeType": "YulFunctionCall",
																"src": "16308:16:12"
															},
															"nativeSrc": "16305:40:12",
															"nodeType": "YulIf",
															"src": "16305:40:12"
														},
														{
															"body": {
																"nativeSrc": "16370:20:12",
																"nodeType": "YulBlock",
																"src": "16370:20:12",
																"statements": [
																	{
																		"nativeSrc": "16372:10:12",
																		"nodeType": "YulAssignment",
																		"src": "16372:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "16381:1:12",
																			"nodeType": "YulLiteral",
																			"src": "16381:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "16372:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "16372:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "16383:5:12",
																		"nodeType": "YulLeave",
																		"src": "16383:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "16364:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16364:4:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16357:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16357:6:12"
																},
																"nativeSrc": "16357:12:12",
																"nodeType": "YulFunctionCall",
																"src": "16357:12:12"
															},
															"nativeSrc": "16354:36:12",
															"nodeType": "YulIf",
															"src": "16354:36:12"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "16500:20:12",
																		"nodeType": "YulBlock",
																		"src": "16500:20:12",
																		"statements": [
																			{
																				"nativeSrc": "16502:10:12",
																				"nodeType": "YulAssignment",
																				"src": "16502:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "16511:1:12",
																					"nodeType": "YulLiteral",
																					"src": "16511:1:12",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "16502:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "16502:5:12"
																					}
																				]
																			},
																			{
																				"nativeSrc": "16513:5:12",
																				"nodeType": "YulLeave",
																				"src": "16513:5:12"
																			}
																		]
																	},
																	"nativeSrc": "16493:27:12",
																	"nodeType": "YulCase",
																	"src": "16493:27:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16498:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16498:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "16544:176:12",
																		"nodeType": "YulBlock",
																		"src": "16544:176:12",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "16579:22:12",
																					"nodeType": "YulBlock",
																					"src": "16579:22:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "16581:16:12",
																									"nodeType": "YulIdentifier",
																									"src": "16581:16:12"
																								},
																								"nativeSrc": "16581:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "16581:18:12"
																							},
																							"nativeSrc": "16581:18:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "16581:18:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "16564:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "16564:8:12"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "16574:3:12",
																							"nodeType": "YulLiteral",
																							"src": "16574:3:12",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "16561:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "16561:2:12"
																					},
																					"nativeSrc": "16561:17:12",
																					"nodeType": "YulFunctionCall",
																					"src": "16561:17:12"
																				},
																				"nativeSrc": "16558:43:12",
																				"nodeType": "YulIf",
																				"src": "16558:43:12"
																			},
																			{
																				"nativeSrc": "16614:25:12",
																				"nodeType": "YulAssignment",
																				"src": "16614:25:12",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "16627:1:12",
																							"nodeType": "YulLiteral",
																							"src": "16627:1:12",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "16630:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "16630:8:12"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "16623:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "16623:3:12"
																					},
																					"nativeSrc": "16623:16:12",
																					"nodeType": "YulFunctionCall",
																					"src": "16623:16:12"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "16614:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "16614:5:12"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "16670:22:12",
																					"nodeType": "YulBlock",
																					"src": "16670:22:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "16672:16:12",
																									"nodeType": "YulIdentifier",
																									"src": "16672:16:12"
																								},
																								"nativeSrc": "16672:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "16672:18:12"
																							},
																							"nativeSrc": "16672:18:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "16672:18:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "16658:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "16658:5:12"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "16665:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "16665:3:12"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "16655:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "16655:2:12"
																					},
																					"nativeSrc": "16655:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "16655:14:12"
																				},
																				"nativeSrc": "16652:40:12",
																				"nodeType": "YulIf",
																				"src": "16652:40:12"
																			},
																			{
																				"nativeSrc": "16705:5:12",
																				"nodeType": "YulLeave",
																				"src": "16705:5:12"
																			}
																		]
																	},
																	"nativeSrc": "16529:191:12",
																	"nodeType": "YulCase",
																	"src": "16529:191:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16534:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16534:1:12",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "16450:4:12",
																"nodeType": "YulIdentifier",
																"src": "16450:4:12"
															},
															"nativeSrc": "16443:277:12",
															"nodeType": "YulSwitch",
															"src": "16443:277:12"
														},
														{
															"body": {
																"nativeSrc": "16852:123:12",
																"nodeType": "YulBlock",
																"src": "16852:123:12",
																"statements": [
																	{
																		"nativeSrc": "16866:28:12",
																		"nodeType": "YulAssignment",
																		"src": "16866:28:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "16879:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "16879:4:12"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "16885:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "16885:8:12"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "16875:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "16875:3:12"
																			},
																			"nativeSrc": "16875:19:12",
																			"nodeType": "YulFunctionCall",
																			"src": "16875:19:12"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "16866:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "16866:5:12"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "16925:22:12",
																			"nodeType": "YulBlock",
																			"src": "16925:22:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "16927:16:12",
																							"nodeType": "YulIdentifier",
																							"src": "16927:16:12"
																						},
																						"nativeSrc": "16927:18:12",
																						"nodeType": "YulFunctionCall",
																						"src": "16927:18:12"
																					},
																					"nativeSrc": "16927:18:12",
																					"nodeType": "YulExpressionStatement",
																					"src": "16927:18:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "16913:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "16913:5:12"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "16920:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16920:3:12"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "16910:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "16910:2:12"
																			},
																			"nativeSrc": "16910:14:12",
																			"nodeType": "YulFunctionCall",
																			"src": "16910:14:12"
																		},
																		"nativeSrc": "16907:40:12",
																		"nodeType": "YulIf",
																		"src": "16907:40:12"
																	},
																	{
																		"nativeSrc": "16960:5:12",
																		"nodeType": "YulLeave",
																		"src": "16960:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "16755:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "16755:4:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16761:2:12",
																						"nodeType": "YulLiteral",
																						"src": "16761:2:12",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "16752:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "16752:2:12"
																				},
																				"nativeSrc": "16752:12:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16752:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "16769:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "16769:8:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16779:2:12",
																						"nodeType": "YulLiteral",
																						"src": "16779:2:12",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "16766:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "16766:2:12"
																				},
																				"nativeSrc": "16766:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16766:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16748:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16748:3:12"
																		},
																		"nativeSrc": "16748:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16748:35:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "16804:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "16804:4:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16810:3:12",
																						"nodeType": "YulLiteral",
																						"src": "16810:3:12",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "16801:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "16801:2:12"
																				},
																				"nativeSrc": "16801:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16801:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "16819:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "16819:8:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16829:2:12",
																						"nodeType": "YulLiteral",
																						"src": "16829:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "16816:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "16816:2:12"
																				},
																				"nativeSrc": "16816:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16816:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16797:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16797:3:12"
																		},
																		"nativeSrc": "16797:36:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16797:36:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "16732:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "16732:2:12"
																},
																"nativeSrc": "16732:111:12",
																"nodeType": "YulFunctionCall",
																"src": "16732:111:12"
															},
															"nativeSrc": "16729:246:12",
															"nodeType": "YulIf",
															"src": "16729:246:12"
														},
														{
															"nativeSrc": "16985:57:12",
															"nodeType": "YulAssignment",
															"src": "16985:57:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17019:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17019:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "17022:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17022:4:12"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "17028:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "17028:8:12"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "17038:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17038:3:12"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "17000:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "17000:18:12"
																},
																"nativeSrc": "17000:42:12",
																"nodeType": "YulFunctionCall",
																"src": "17000:42:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "16985:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "16985:5:12"
																},
																{
																	"name": "base",
																	"nativeSrc": "16992:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16992:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17081:22:12",
																"nodeType": "YulBlock",
																"src": "17081:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17083:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "17083:16:12"
																			},
																			"nativeSrc": "17083:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17083:18:12"
																		},
																		"nativeSrc": "17083:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "17083:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "17058:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "17058:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "17069:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "17069:3:12"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "17074:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "17074:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "17065:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17065:3:12"
																		},
																		"nativeSrc": "17065:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17065:14:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17055:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "17055:2:12"
																},
																"nativeSrc": "17055:25:12",
																"nodeType": "YulFunctionCall",
																"src": "17055:25:12"
															},
															"nativeSrc": "17052:51:12",
															"nodeType": "YulIf",
															"src": "17052:51:12"
														},
														{
															"nativeSrc": "17112:25:12",
															"nodeType": "YulAssignment",
															"src": "17112:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "17125:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "17125:5:12"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "17132:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17132:4:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "17121:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17121:3:12"
																},
																"nativeSrc": "17121:16:12",
																"nodeType": "YulFunctionCall",
																"src": "17121:16:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "17112:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "17112:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "16070:1073:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "16100:4:12",
														"nodeType": "YulTypedName",
														"src": "16100:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "16106:8:12",
														"nodeType": "YulTypedName",
														"src": "16106:8:12",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "16116:3:12",
														"nodeType": "YulTypedName",
														"src": "16116:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "16124:5:12",
														"nodeType": "YulTypedName",
														"src": "16124:5:12",
														"type": ""
													}
												],
												"src": "16070:1073:12"
											},
											{
												"body": {
													"nativeSrc": "17213:217:12",
													"nodeType": "YulBlock",
													"src": "17213:217:12",
													"statements": [
														{
															"nativeSrc": "17223:31:12",
															"nodeType": "YulAssignment",
															"src": "17223:31:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "17249:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17249:4:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17231:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "17231:17:12"
																},
																"nativeSrc": "17231:23:12",
																"nodeType": "YulFunctionCall",
																"src": "17231:23:12"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "17223:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17223:4:12"
																}
															]
														},
														{
															"nativeSrc": "17263:37:12",
															"nodeType": "YulAssignment",
															"src": "17263:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "17291:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "17291:8:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "17275:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "17275:15:12"
																},
																"nativeSrc": "17275:25:12",
																"nodeType": "YulFunctionCall",
																"src": "17275:25:12"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "17263:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "17263:8:12"
																}
															]
														},
														{
															"nativeSrc": "17310:113:12",
															"nodeType": "YulAssignment",
															"src": "17310:113:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "17340:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17340:4:12"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "17346:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "17346:8:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17356:66:12",
																		"nodeType": "YulLiteral",
																		"src": "17356:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "17319:20:12",
																	"nodeType": "YulIdentifier",
																	"src": "17319:20:12"
																},
																"nativeSrc": "17319:104:12",
																"nodeType": "YulFunctionCall",
																"src": "17319:104:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "17310:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "17310:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "17149:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "17188:4:12",
														"nodeType": "YulTypedName",
														"src": "17188:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "17194:8:12",
														"nodeType": "YulTypedName",
														"src": "17194:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "17207:5:12",
														"nodeType": "YulTypedName",
														"src": "17207:5:12",
														"type": ""
													}
												],
												"src": "17149:281:12"
											},
											{
												"body": {
													"nativeSrc": "17464:152:12",
													"nodeType": "YulBlock",
													"src": "17464:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17481:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17481:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17484:77:12",
																		"nodeType": "YulLiteral",
																		"src": "17484:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17474:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17474:6:12"
																},
																"nativeSrc": "17474:88:12",
																"nodeType": "YulFunctionCall",
																"src": "17474:88:12"
															},
															"nativeSrc": "17474:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "17474:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17578:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17578:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17581:4:12",
																		"nodeType": "YulLiteral",
																		"src": "17581:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17571:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17571:6:12"
																},
																"nativeSrc": "17571:15:12",
																"nodeType": "YulFunctionCall",
																"src": "17571:15:12"
															},
															"nativeSrc": "17571:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "17571:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17602:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17602:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17605:4:12",
																		"nodeType": "YulLiteral",
																		"src": "17605:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17595:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17595:6:12"
																},
																"nativeSrc": "17595:15:12",
																"nodeType": "YulFunctionCall",
																"src": "17595:15:12"
															},
															"nativeSrc": "17595:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "17595:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "17436:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "17436:180:12"
											},
											{
												"body": {
													"nativeSrc": "17664:143:12",
													"nodeType": "YulBlock",
													"src": "17664:143:12",
													"statements": [
														{
															"nativeSrc": "17674:25:12",
															"nodeType": "YulAssignment",
															"src": "17674:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17697:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17697:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17679:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "17679:17:12"
																},
																"nativeSrc": "17679:20:12",
																"nodeType": "YulFunctionCall",
																"src": "17679:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17674:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "17674:1:12"
																}
															]
														},
														{
															"nativeSrc": "17708:25:12",
															"nodeType": "YulAssignment",
															"src": "17708:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17731:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17731:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17713:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "17713:17:12"
																},
																"nativeSrc": "17713:20:12",
																"nodeType": "YulFunctionCall",
																"src": "17713:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17708:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "17708:1:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17755:22:12",
																"nodeType": "YulBlock",
																"src": "17755:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "17757:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "17757:16:12"
																			},
																			"nativeSrc": "17757:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17757:18:12"
																		},
																		"nativeSrc": "17757:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "17757:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17752:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17752:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17745:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17745:6:12"
																},
																"nativeSrc": "17745:9:12",
																"nodeType": "YulFunctionCall",
																"src": "17745:9:12"
															},
															"nativeSrc": "17742:35:12",
															"nodeType": "YulIf",
															"src": "17742:35:12"
														},
														{
															"nativeSrc": "17787:14:12",
															"nodeType": "YulAssignment",
															"src": "17787:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17796:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17796:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17799:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17799:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "17792:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17792:3:12"
																},
																"nativeSrc": "17792:9:12",
																"nodeType": "YulFunctionCall",
																"src": "17792:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "17787:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "17787:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "17622:185:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17653:1:12",
														"nodeType": "YulTypedName",
														"src": "17653:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17656:1:12",
														"nodeType": "YulTypedName",
														"src": "17656:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "17662:1:12",
														"nodeType": "YulTypedName",
														"src": "17662:1:12",
														"type": ""
													}
												],
												"src": "17622:185:12"
											},
											{
												"body": {
													"nativeSrc": "17856:148:12",
													"nodeType": "YulBlock",
													"src": "17856:148:12",
													"statements": [
														{
															"nativeSrc": "17866:23:12",
															"nodeType": "YulAssignment",
															"src": "17866:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17887:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17887:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "17871:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "17871:15:12"
																},
																"nativeSrc": "17871:18:12",
																"nodeType": "YulFunctionCall",
																"src": "17871:18:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17866:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "17866:1:12"
																}
															]
														},
														{
															"nativeSrc": "17898:23:12",
															"nodeType": "YulAssignment",
															"src": "17898:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17919:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17919:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "17903:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "17903:15:12"
																},
																"nativeSrc": "17903:18:12",
																"nodeType": "YulFunctionCall",
																"src": "17903:18:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17898:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "17898:1:12"
																}
															]
														},
														{
															"nativeSrc": "17930:17:12",
															"nodeType": "YulAssignment",
															"src": "17930:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17942:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17942:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17945:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17945:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "17938:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17938:3:12"
																},
																"nativeSrc": "17938:9:12",
																"nodeType": "YulFunctionCall",
																"src": "17938:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "17930:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17930:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17975:22:12",
																"nodeType": "YulBlock",
																"src": "17975:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17977:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "17977:16:12"
																			},
																			"nativeSrc": "17977:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17977:18:12"
																		},
																		"nativeSrc": "17977:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "17977:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "17963:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17963:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17969:4:12",
																		"nodeType": "YulLiteral",
																		"src": "17969:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17960:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "17960:2:12"
																},
																"nativeSrc": "17960:14:12",
																"nodeType": "YulFunctionCall",
																"src": "17960:14:12"
															},
															"nativeSrc": "17957:40:12",
															"nodeType": "YulIf",
															"src": "17957:40:12"
														}
													]
												},
												"name": "checked_sub_t_uint8",
												"nativeSrc": "17813:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17842:1:12",
														"nodeType": "YulTypedName",
														"src": "17842:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17845:1:12",
														"nodeType": "YulTypedName",
														"src": "17845:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "17851:4:12",
														"nodeType": "YulTypedName",
														"src": "17851:4:12",
														"type": ""
													}
												],
												"src": "17813:191:12"
											},
											{
												"body": {
													"nativeSrc": "18164:288:12",
													"nodeType": "YulBlock",
													"src": "18164:288:12",
													"statements": [
														{
															"nativeSrc": "18174:26:12",
															"nodeType": "YulAssignment",
															"src": "18174:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18186:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "18186:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18197:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18197:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18182:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18182:3:12"
																},
																"nativeSrc": "18182:18:12",
																"nodeType": "YulFunctionCall",
																"src": "18182:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18174:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18174:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18254:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18254:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18267:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18267:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18278:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18278:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18263:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18263:3:12"
																		},
																		"nativeSrc": "18263:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18263:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18210:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18210:43:12"
																},
																"nativeSrc": "18210:71:12",
																"nodeType": "YulFunctionCall",
																"src": "18210:71:12"
															},
															"nativeSrc": "18210:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "18210:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18335:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18335:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18348:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18348:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18359:2:12",
																				"nodeType": "YulLiteral",
																				"src": "18359:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18344:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18344:3:12"
																		},
																		"nativeSrc": "18344:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18344:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18291:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18291:43:12"
																},
																"nativeSrc": "18291:72:12",
																"nodeType": "YulFunctionCall",
																"src": "18291:72:12"
															},
															"nativeSrc": "18291:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "18291:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18417:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18417:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18430:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18430:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18441:2:12",
																				"nodeType": "YulLiteral",
																				"src": "18441:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18426:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18426:3:12"
																		},
																		"nativeSrc": "18426:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18426:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18373:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18373:43:12"
																},
																"nativeSrc": "18373:72:12",
																"nodeType": "YulFunctionCall",
																"src": "18373:72:12"
															},
															"nativeSrc": "18373:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "18373:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18010:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18120:9:12",
														"nodeType": "YulTypedName",
														"src": "18120:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18132:6:12",
														"nodeType": "YulTypedName",
														"src": "18132:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18140:6:12",
														"nodeType": "YulTypedName",
														"src": "18140:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18148:6:12",
														"nodeType": "YulTypedName",
														"src": "18148:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18159:4:12",
														"nodeType": "YulTypedName",
														"src": "18159:4:12",
														"type": ""
													}
												],
												"src": "18010:442:12"
											},
											{
												"body": {
													"nativeSrc": "18584:206:12",
													"nodeType": "YulBlock",
													"src": "18584:206:12",
													"statements": [
														{
															"nativeSrc": "18594:26:12",
															"nodeType": "YulAssignment",
															"src": "18594:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18606:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "18606:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18617:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18617:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18602:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18602:3:12"
																},
																"nativeSrc": "18602:18:12",
																"nodeType": "YulFunctionCall",
																"src": "18602:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18594:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18594:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18674:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18674:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18687:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18687:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18698:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18698:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18683:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18683:3:12"
																		},
																		"nativeSrc": "18683:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18683:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18630:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18630:43:12"
																},
																"nativeSrc": "18630:71:12",
																"nodeType": "YulFunctionCall",
																"src": "18630:71:12"
															},
															"nativeSrc": "18630:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "18630:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18755:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18755:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18768:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18768:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18779:2:12",
																				"nodeType": "YulLiteral",
																				"src": "18779:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18764:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18764:3:12"
																		},
																		"nativeSrc": "18764:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18764:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18711:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18711:43:12"
																},
																"nativeSrc": "18711:72:12",
																"nodeType": "YulFunctionCall",
																"src": "18711:72:12"
															},
															"nativeSrc": "18711:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "18711:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18458:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18548:9:12",
														"nodeType": "YulTypedName",
														"src": "18548:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18560:6:12",
														"nodeType": "YulTypedName",
														"src": "18560:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18568:6:12",
														"nodeType": "YulTypedName",
														"src": "18568:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18579:4:12",
														"nodeType": "YulTypedName",
														"src": "18579:4:12",
														"type": ""
													}
												],
												"src": "18458:332:12"
											},
											{
												"body": {
													"nativeSrc": "18922:206:12",
													"nodeType": "YulBlock",
													"src": "18922:206:12",
													"statements": [
														{
															"nativeSrc": "18932:26:12",
															"nodeType": "YulAssignment",
															"src": "18932:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18944:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "18944:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18955:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18955:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18940:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18940:3:12"
																},
																"nativeSrc": "18940:18:12",
																"nodeType": "YulFunctionCall",
																"src": "18940:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18932:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18932:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19012:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19012:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19025:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19025:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19036:1:12",
																				"nodeType": "YulLiteral",
																				"src": "19036:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19021:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19021:3:12"
																		},
																		"nativeSrc": "19021:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19021:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18968:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18968:43:12"
																},
																"nativeSrc": "18968:71:12",
																"nodeType": "YulFunctionCall",
																"src": "18968:71:12"
															},
															"nativeSrc": "18968:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "18968:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19093:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19093:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19106:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19106:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19117:2:12",
																				"nodeType": "YulLiteral",
																				"src": "19117:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19102:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19102:3:12"
																		},
																		"nativeSrc": "19102:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19102:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "19049:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "19049:43:12"
																},
																"nativeSrc": "19049:72:12",
																"nodeType": "YulFunctionCall",
																"src": "19049:72:12"
															},
															"nativeSrc": "19049:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "19049:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "18796:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18886:9:12",
														"nodeType": "YulTypedName",
														"src": "18886:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18898:6:12",
														"nodeType": "YulTypedName",
														"src": "18898:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18906:6:12",
														"nodeType": "YulTypedName",
														"src": "18906:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18917:4:12",
														"nodeType": "YulTypedName",
														"src": "18917:4:12",
														"type": ""
													}
												],
												"src": "18796:332:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_addresst_boolt_uint8t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bool_t_bool_t_uint8_t_uint256_t_address__to_t_bool_t_bool_t_uint8_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint8(x, y) -> diff {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xff) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1218": [
									{
										"length": 32,
										"start": 1859
									},
									{
										"length": 32,
										"start": 1900
									},
									{
										"length": 32,
										"start": 2808
									},
									{
										"length": 32,
										"start": 2849
									},
									{
										"length": 32,
										"start": 7067
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x134 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0xAA JUMPI DUP1 PUSH4 0xD391014B GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xD391014B EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0xDCB6E250 EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xF9BDA21F EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0xFE136C4E EQ PUSH2 0x4D6 JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x9C50ADEE EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x9E281A98 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xC311D049 EQ PUSH2 0x3BA JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x2F6EE695 GT PUSH2 0xFC JUMPI DUP1 PUSH4 0x2F6EE695 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x31F7D964 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x338B5DEA EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x439370B1 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x4CC05A71 EQ PUSH2 0x2DA JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x29608BA6 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x2DFDF0B5 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x204 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x247B JUMP JUMPDEST PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x24C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x250C JUMP JUMPDEST PUSH2 0x58F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x25EA JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x2643 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x261 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x26AE JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x25EA JUMP JUMPDEST PUSH2 0x98D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D8 PUSH2 0xA08 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x25EA JUMP JUMPDEST PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x24C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x366 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x2740 JUMP JUMPDEST PUSH2 0xD7B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x373 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x26AE JUMP JUMPDEST PUSH2 0x101C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A4 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x27B7 JUMP JUMPDEST PUSH2 0x1531 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F6 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x432 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x25EA JUMP JUMPDEST PUSH2 0x1A66 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x45A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x27E2 JUMP JUMPDEST PUSH2 0x1A88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x496 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x2820 JUMP JUMPDEST PUSH2 0x1B18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0x1B99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0x2820 JUMP JUMPDEST PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x284B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x588 JUMPI POP PUSH2 0x587 DUP3 PUSH2 0x1C32 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5C0 DUP3 PUSH2 0x58F JUMP JUMPDEST PUSH2 0x5C9 DUP2 PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0x5D3 DUP4 DUP4 PUSH2 0x1CAF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 JUMP JUMPDEST PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x5EA PUSH2 0x1D98 JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F2A200500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x695 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xBF16AAB600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68C SWAP2 SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x6 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x723 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xBF16AAB600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71A SWAP2 SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x72E DUP7 DUP7 PUSH2 0x1DE7 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x2 SLOAD PUSH2 0x73F SWAP2 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 GT ISZERO PUSH2 0x7C8 JUMPI DUP1 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0xF480E28500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BF SWAP3 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x5 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x84F SWAP2 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH2 0x89B CALLER ADDRESS DUP9 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x213C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4E2CA0515ED1AEF1395F66B5303BB5D6F1BF9D61A353FA53F73F8AC9973FA9F6 DUP9 PUSH1 0x5 PUSH0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP7 PUSH1 0x40 MLOAD PUSH2 0x974 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2923 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP PUSH2 0x989 PUSH2 0x21BE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x995 PUSH2 0x21C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA03 DUP3 DUP3 PUSH2 0x21CE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA10 PUSH2 0x1D98 JUMP JUMPDEST CALLVALUE PUSH0 DUP2 SUB PUSH2 0xA4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F2A200500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAD8 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xBF16AAB600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACF SWAP2 SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xAE3 PUSH0 CALLVALUE PUSH2 0x1DE7 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x2 SLOAD PUSH2 0xAF4 SWAP2 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 GT ISZERO PUSH2 0xB7D JUMPI DUP1 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0xF480E28500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB74 SWAP3 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x5 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC04 SWAP2 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4E2CA0515ED1AEF1395F66B5303BB5D6F1BF9D61A353FA53F73F8AC9973FA9F6 CALLVALUE PUSH1 0x5 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP7 PUSH1 0x40 MLOAD PUSH2 0xCFC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2923 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH2 0xD10 PUSH2 0x21BE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2172861495E7B85EDAC73E3CD5FBB42DD675BAADF627720E687BCFDACA025096 PUSH2 0xDA5 DUP2 PUSH2 0x1C9B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE15 JUMPI DUP6 PUSH1 0x40 MLOAD PUSH32 0xBF16AAB600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0C SWAP2 SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP6 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 DUP6 PUSH1 0xFF AND SUB PUSH2 0xF45 JUMPI DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xEFC JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEF9 SWAP2 SWAP1 PUSH2 0x296C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF22 JUMPI PUSH1 0x12 DUP2 PUSH0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xF40 JUMP JUMPDEST DUP1 DUP3 PUSH0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMPDEST PUSH2 0xF62 JUMP JUMPDEST DUP5 DUP2 PUSH0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP4 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCEEC6D18B470B58EABBFC22B7D771C54609ACB2BBE777747424F6E9A5A9D5A25 DUP8 PUSH0 DUP5 PUSH0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x100B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x284B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1024 PUSH2 0x1D98 JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x105E JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F2A200500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10CF JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xBF16AAB600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C6 SWAP2 SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x6 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x115D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xBF16AAB600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1154 SWAP2 SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP5 PUSH0 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x60 ADD MLOAD DUP3 GT ISZERO PUSH2 0x12A7 JUMPI DUP2 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x16D0EF100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129E SWAP3 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP8 DUP2 LT ISZERO PUSH2 0x136A JUMPI DUP1 DUP9 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1361 SWAP3 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 DUP2 PUSH2 0x1376 SWAP2 SWAP1 PUSH2 0x2997 JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH2 0x142E CALLER DUP10 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x22B7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEBFF2602B3F468259E1E99F613FED6691F3A6526EFFE6EF3E768BA7AE7A36C4F DUP11 PUSH1 0x5 PUSH0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1501 DUP15 DUP15 PUSH2 0x1DE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1510 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2923 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP PUSH2 0x1527 PUSH2 0x21BE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x1539 PUSH2 0x1D98 JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x1573 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F2A200500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1601 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xBF16AAB600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F8 SWAP2 SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 PUSH0 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x60 ADD MLOAD DUP3 GT ISZERO PUSH2 0x174B JUMPI DUP2 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x16D0EF100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1742 SWAP3 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP7 DUP2 LT ISZERO PUSH2 0x180E JUMPI DUP1 DUP8 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1805 SWAP3 SWAP2 SWAP1 PUSH2 0x28FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP2 PUSH2 0x181A SWAP2 SWAP1 PUSH2 0x2997 JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x40 MLOAD PUSH2 0x18CC SWAP1 PUSH2 0x29F7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1906 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x190B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1946 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6D963F8800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEBFF2602B3F468259E1E99F613FED6691F3A6526EFFE6EF3E768BA7AE7A36C4F DUP11 PUSH1 0x5 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1A19 PUSH0 DUP15 PUSH2 0x1DE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A28 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2923 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP PUSH2 0x1A3F PUSH2 0x21BE JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x2172861495E7B85EDAC73E3CD5FBB42DD675BAADF627720E687BCFDACA025096 DUP2 JUMP JUMPDEST PUSH2 0x1A6F DUP3 PUSH2 0x58F JUMP JUMPDEST PUSH2 0x1A78 DUP2 PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0x1A82 DUP4 DUP4 PUSH2 0x21CE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x1B0F DUP5 DUP3 PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CAC DUP2 PUSH2 0x1CA7 PUSH2 0x21C7 JUMP JUMPDEST PUSH2 0x2336 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1CBA DUP4 DUP4 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x1D8E JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1D2B PUSH2 0x21C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1D92 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1DDD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DD4 SWAP1 PUSH2 0x2A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SUB PUSH2 0x1DF7 JUMPI PUSH0 SWAP1 POP PUSH2 0x2136 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH1 0x80 ADD MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F68 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x8A7A791D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F5F SWAP2 SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FB2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FD6 SWAP2 SWAP1 PUSH2 0x2B09 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP2 SGT PUSH2 0x2015 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4FD58D4B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x205F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2083 SWAP2 SWAP1 PUSH2 0x296C JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 DUP8 PUSH2 0x2092 SWAP2 SWAP1 PUSH2 0x2B80 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0xFF AND GT ISZERO PUSH2 0x20BA JUMPI DUP2 PUSH1 0xA PUSH2 0x20AC SWAP2 SWAP1 PUSH2 0x2CF0 JUMP JUMPDEST DUP2 PUSH2 0x20B7 SWAP2 SWAP1 PUSH2 0x2D67 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x6 PUSH1 0xFF AND DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0xFF AND LT PUSH2 0x2100 JUMPI PUSH0 PUSH1 0x6 DUP7 PUSH1 0x40 ADD MLOAD PUSH2 0x20DE SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0xA PUSH2 0x20EA SWAP2 SWAP1 PUSH2 0x2CF0 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x20F8 SWAP2 SWAP1 PUSH2 0x2D67 JUMP JUMPDEST SWAP7 POP POP PUSH2 0x2130 JUMP JUMPDEST PUSH0 DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x6 PUSH2 0x2112 SWAP2 SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0xA PUSH2 0x211E SWAP2 SWAP1 PUSH2 0x2CF0 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x212C SWAP2 SWAP1 PUSH2 0x2B80 JUMP JUMPDEST SWAP7 POP POP JUMPDEST POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21B8 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2171 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2387 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x21D9 DUP4 DUP4 PUSH2 0xD18 JUMP JUMPDEST ISZERO PUSH2 0x22AD JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x224A PUSH2 0x21C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x22B1 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2331 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x22EA SWAP3 SWAP2 SWAP1 PUSH2 0x2E00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2387 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2340 DUP3 DUP3 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x2383 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x237A SWAP3 SWAP2 SWAP1 PUSH2 0x2E27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x23A6 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x23BF JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x23DA JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x241C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2413 SWAP2 SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x245A DUP2 PUSH2 0x2426 JUMP JUMPDEST DUP2 EQ PUSH2 0x2464 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2475 DUP2 PUSH2 0x2451 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2490 JUMPI PUSH2 0x248F PUSH2 0x2422 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x249D DUP5 DUP3 DUP6 ADD PUSH2 0x2467 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24BA DUP2 PUSH2 0x24A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24D3 PUSH0 DUP4 ADD DUP5 PUSH2 0x24B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24EB DUP2 PUSH2 0x24D9 JUMP JUMPDEST DUP2 EQ PUSH2 0x24F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2506 DUP2 PUSH2 0x24E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2521 JUMPI PUSH2 0x2520 PUSH2 0x2422 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x252E DUP5 DUP3 DUP6 ADD PUSH2 0x24F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2540 DUP2 PUSH2 0x24D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2559 PUSH0 DUP4 ADD DUP5 PUSH2 0x2537 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2571 DUP2 PUSH2 0x255F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x258A PUSH0 DUP4 ADD DUP5 PUSH2 0x2568 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25B9 DUP3 PUSH2 0x2590 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25C9 DUP2 PUSH2 0x25AF JUMP JUMPDEST DUP2 EQ PUSH2 0x25D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25E4 DUP2 PUSH2 0x25C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2600 JUMPI PUSH2 0x25FF PUSH2 0x2422 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x260D DUP6 DUP3 DUP7 ADD PUSH2 0x24F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x261E DUP6 DUP3 DUP7 ADD PUSH2 0x25D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x263D DUP2 PUSH2 0x2628 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2656 PUSH0 DUP4 ADD DUP5 PUSH2 0x2634 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2665 DUP2 PUSH2 0x25AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x267E PUSH0 DUP4 ADD DUP5 PUSH2 0x265C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x268D DUP2 PUSH2 0x255F JUMP JUMPDEST DUP2 EQ PUSH2 0x2697 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26A8 DUP2 PUSH2 0x2684 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26C4 JUMPI PUSH2 0x26C3 PUSH2 0x2422 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26D1 DUP6 DUP3 DUP7 ADD PUSH2 0x25D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26E2 DUP6 DUP3 DUP7 ADD PUSH2 0x269A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F5 DUP2 PUSH2 0x24A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x26FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2710 DUP2 PUSH2 0x26EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x271F DUP2 PUSH2 0x2628 JUMP JUMPDEST DUP2 EQ PUSH2 0x2729 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x273A DUP2 PUSH2 0x2716 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2759 JUMPI PUSH2 0x2758 PUSH2 0x2422 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2766 DUP9 DUP3 DUP10 ADD PUSH2 0x25D6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2777 DUP9 DUP3 DUP10 ADD PUSH2 0x2702 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2788 DUP9 DUP3 DUP10 ADD PUSH2 0x272C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2799 DUP9 DUP3 DUP10 ADD PUSH2 0x269A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x27AA DUP9 DUP3 DUP10 ADD PUSH2 0x25D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27CC JUMPI PUSH2 0x27CB PUSH2 0x2422 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27D9 DUP5 DUP3 DUP6 ADD PUSH2 0x269A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27F8 JUMPI PUSH2 0x27F7 PUSH2 0x2422 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2805 DUP6 DUP3 DUP7 ADD PUSH2 0x25D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2816 DUP6 DUP3 DUP7 ADD PUSH2 0x25D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2835 JUMPI PUSH2 0x2834 PUSH2 0x2422 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2842 DUP5 DUP3 DUP6 ADD PUSH2 0x25D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x285E PUSH0 DUP4 ADD DUP9 PUSH2 0x24B1 JUMP JUMPDEST PUSH2 0x286B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x24B1 JUMP JUMPDEST PUSH2 0x2878 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2634 JUMP JUMPDEST PUSH2 0x2885 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x2892 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x265C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x28D3 DUP3 PUSH2 0x255F JUMP JUMPDEST SWAP2 POP PUSH2 0x28DE DUP4 PUSH2 0x255F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x28F6 JUMPI PUSH2 0x28F5 PUSH2 0x289C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x290F PUSH0 DUP4 ADD DUP6 PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x291C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2568 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2936 PUSH0 DUP4 ADD DUP7 PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x2943 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x2950 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2568 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2966 DUP2 PUSH2 0x2716 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2981 JUMPI PUSH2 0x2980 PUSH2 0x2422 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x298E DUP5 DUP3 DUP6 ADD PUSH2 0x2958 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29A1 DUP3 PUSH2 0x255F JUMP JUMPDEST SWAP2 POP PUSH2 0x29AC DUP4 PUSH2 0x255F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x29C4 JUMPI PUSH2 0x29C3 PUSH2 0x289C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x29E2 PUSH0 DUP4 PUSH2 0x29CA JUMP JUMPDEST SWAP2 POP PUSH2 0x29ED DUP3 PUSH2 0x29D4 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2A01 DUP3 PUSH2 0x29D7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A4F PUSH1 0x1F DUP4 PUSH2 0x2A0B JUMP JUMPDEST SWAP2 POP PUSH2 0x2A5A DUP3 PUSH2 0x2A1B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A7C DUP2 PUSH2 0x2A43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AA1 DUP2 PUSH2 0x2A83 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AAB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2ABC DUP2 PUSH2 0x2A98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AD4 DUP2 PUSH2 0x2AC2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2ADE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2AEF DUP2 PUSH2 0x2ACB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B03 DUP2 PUSH2 0x2684 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2B22 JUMPI PUSH2 0x2B21 PUSH2 0x2422 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B2F DUP9 DUP3 DUP10 ADD PUSH2 0x2AAE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2B40 DUP9 DUP3 DUP10 ADD PUSH2 0x2AE1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2B51 DUP9 DUP3 DUP10 ADD PUSH2 0x2AF5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2B62 DUP9 DUP3 DUP10 ADD PUSH2 0x2AF5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2B73 DUP9 DUP3 DUP10 ADD PUSH2 0x2AAE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH2 0x2B8A DUP3 PUSH2 0x255F JUMP JUMPDEST SWAP2 POP PUSH2 0x2B95 DUP4 PUSH2 0x255F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2BA3 DUP2 PUSH2 0x255F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2BBA JUMPI PUSH2 0x2BB9 PUSH2 0x289C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x2C16 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x2BF2 JUMPI PUSH2 0x2BF1 PUSH2 0x289C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x2C01 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2C0F DUP6 PUSH2 0x2BC1 JUMP JUMPDEST SWAP5 POP PUSH2 0x2BD6 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2C2E JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2CE9 JUMP JUMPDEST DUP2 PUSH2 0x2C3B JUMPI PUSH0 SWAP1 POP PUSH2 0x2CE9 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2C51 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2C5B JUMPI PUSH2 0x2C8A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2CE9 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2C6D JUMPI PUSH2 0x2C6C PUSH2 0x289C JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x2C84 JUMPI PUSH2 0x2C83 PUSH2 0x289C JUMP JUMPDEST JUMPDEST POP PUSH2 0x2CE9 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2CBF JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2CBA JUMPI PUSH2 0x2CB9 PUSH2 0x289C JUMP JUMPDEST JUMPDEST PUSH2 0x2CE9 JUMP JUMPDEST PUSH2 0x2CCC DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2BCD JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2CE3 JUMPI PUSH2 0x2CE2 PUSH2 0x289C JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CFA DUP3 PUSH2 0x255F JUMP JUMPDEST SWAP2 POP PUSH2 0x2D05 DUP4 PUSH2 0x2628 JUMP JUMPDEST SWAP3 POP PUSH2 0x2D32 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2C1F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2D71 DUP3 PUSH2 0x255F JUMP JUMPDEST SWAP2 POP PUSH2 0x2D7C DUP4 PUSH2 0x255F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2D8C JUMPI PUSH2 0x2D8B PUSH2 0x2D3A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2DA1 DUP3 PUSH2 0x2628 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DAC DUP4 PUSH2 0x2628 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x2DC5 JUMPI PUSH2 0x2DC4 PUSH2 0x289C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2DDE PUSH0 DUP4 ADD DUP7 PUSH2 0x265C JUMP JUMPDEST PUSH2 0x2DEB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x265C JUMP JUMPDEST PUSH2 0x2DF8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2568 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E13 PUSH0 DUP4 ADD DUP6 PUSH2 0x265C JUMP JUMPDEST PUSH2 0x2E20 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2568 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E3A PUSH0 DUP4 ADD DUP6 PUSH2 0x265C JUMP JUMPDEST PUSH2 0x2E47 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2537 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x601F4BFDEAD2F9B62145 0xD9 0xC3 GAS 0xBA KECCAK256 SWAP6 0xC1 0xDD CALLER PUSH19 0xD55863D615DE5EF69CAE4264736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "1607:12809:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2541:202:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3786:120;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2641:33:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2726:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4202:136:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2228:38:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2101:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9693:819;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5304:245:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8932:700:11;;;:::i;:::-;;2760:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:136:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7364:1236:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11576:696;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2196:49:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10755:760:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1962:60;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4618:138:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12761:174:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12551:120;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2530:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3010:50;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;2541:202:0;2626:4;2664:32;2649:47;;;:11;:47;;;;:87;;;;2700:36;2724:11;2700:23;:36::i;:::-;2649:87;2642:94;;2541:202;;;:::o;3786:120::-;3851:7;3877:6;:12;3884:4;3877:12;;;;;;;;;;;:22;;;3870:29;;3786:120;;;:::o;2641:33:11:-;;;;:::o;2726:27::-;;;;:::o;4202:136:0:-;4276:18;4289:4;4276:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;2228:38:11:-;2265:1;2228:38;:::o;2101:49::-;2148:1;2101:49;:::o;9693:819::-;2261:21:5;:19;:21::i;:::-;9803:6:11::1;6279:1;6269:6;:11:::0;6265:36:::1;;6289:12;;;;;;;;;;;;;;6265:36;9830:5:::2;2148:1;6669:21;;:5;:21;;::::0;6665:57:::2;;6716:5;6699:23;;;;;;;;;;;:::i;:::-;;;;;;;;6665:57;9861:5:::3;6449:11;:18;6461:5;6449:18;;;;;;;;;;;;;;;:28;;;;;;;;;;;;6444:65;;6503:5;6486:23;;;;;;;;;;;:::i;:::-;;;;;;;;6444:65;9937:12:::4;9952:21;9959:5;9966:6;9952;:21::i;:::-;9937:36;;9984:20;10028:4;10007:18;;:25;;;;:::i;:::-;9984:48;;10062:11;10047:12;:26;10043:77;;;10094:12;10108:11;10082:38;;;;;;;;;;;;:::i;:::-;;;;;;;;10043:77;10184:6;10153:8;:15;10162:5;10153:15;;;;;;;;;;;;;;;:27;10169:10;10153:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;10222:12;10201:18;:33;;;;10257:12;;:14;;;;;;;;;;;;;10334:65;10365:10;10385:4;10392:6;10341:5;10334:30;;;;:65;;;;;;:::i;:::-;10450:10;10435:69;;10443:5;10435:69;;;10462:6;10470:8;:15;10479:5;10470:15;;;;;;;;;;;;;;;:27;10486:10;10470:27;;;;;;;;;;;;;;;;10499:4;10435:69;;;;;;;;:::i;:::-;;;;;;;;9873:639;;6733:1:::3;6312::::2;2292::5::1;2303:20:::0;:18;:20::i;:::-;9693:819:11;;:::o;5304:245:0:-;5419:12;:10;:12::i;:::-;5397:34;;:18;:34;;;5393:102;;5454:30;;;;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;8932:700:11:-;2261:21:5;:19;:21::i;:::-;9028:9:11::1;6279:1;6269:6;:11:::0;6265:36:::1;;6289:12;;;;;;;;;;;;;;6265:36;2148:1:::2;6449:11;:18;6461:5;6449:18;;;;;;;;;;;;;;;:28;;;;;;;;;;;;6444:65;;6503:5;6486:23;;;;;;;;;;;:::i;:::-;;;;;;;;6444:65;9146:12:::3;9161:31;2148:1;9182:9;9161:6;:31::i;:::-;9146:46;;9203:20;9247:4;9226:18;;:25;;;;:::i;:::-;9203:48;;9281:11;9266:12;:26;9262:77;;;9313:12;9327:11;9301:38;;;;;;;;;;;;:::i;:::-;;;;;;;;9262:77;9410:9;9372:8;:22;2148:1:::0;9372:22:::3;;;;;;;;;;;;;;;:34;9395:10;9372:34;;;;;;;;;;;;;;;;:47;;;;;;;:::i;:::-;;;;;;;;9451:12;9430:18;:33;;;;9486:12;;:14;;;;;;;;;;;;;9560:10;9538:86;;2148:1;9538:86;;;9572:9;9583:8;:22;2148:1:::0;9583:22:::3;;;;;;;;;;;;;;;:34;9606:10;9583:34;;;;;;;;;;;;;;;;9619:4;9538:86;;;;;;;;:::i;:::-;;;;;;;;9082:550;;6312:1:::2;2292::5::1;2303:20:::0;:18;:20::i;:::-;8932:700:11:o;2760:28::-;;;;:::o;2830:136:0:-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;7364:1236:11:-;1999:23;2473:16:0;2484:4;2473:10;:16::i;:::-;2148:1:11::1;7579:21;;:5;:21;;::::0;7575:57:::1;;7626:5;7609:23;;;;;;;;;;;:::i;:::-;;;;;;;;7575:57;7645:23;7671:11;:18;7683:5;7671:18;;;;;;;;;;;;;;;7645:44;;7718:9;7700:3;:13;;;:27;;;;;;;;;;;;;;;;;;7756:5;7738:3;:12;;;:23;;;;;;;;;;;;;;;;;;7881:1;7864:13;:18;;::::0;7860:455:::1;;8001:5;7986:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;7982:256;;8220:2;8200:3;:17;;;:22;;;;;;;;;;;;;;;;;;7982:256;;;8078:3;8058;:17;;;:23;;;;;;;;;;;;;;;;;;8019:78;7982:256;7860:455;;;8290:13;8270:3;:17;;;:33;;;;;;;;;;;;;;;;;;7860:455;8347:13;8327:3;:17;;:33;;;;8391:9;8371:3;:13;;;:29;;;;;;;;;;;;;;;;;;8448:5;8418:174;;;8468:9;8492:5;8512:3;:17;;;;;;;;;;;;8544:13;8572:9;8418:174;;;;;;;;;;:::i;:::-;;;;;;;;7564:1036;7364:1236:::0;;;;;;:::o;11576:696::-;2261:21:5;:19;:21::i;:::-;11687:6:11::1;6279:1;6269:6;:11:::0;6265:36:::1;;6289:12;;;;;;;;;;;;;;6265:36;11714:5:::2;2148:1;6669:21;;:5;:21;;::::0;6665:57:::2;;6716:5;6699:23;;;;;;;;;;;:::i;:::-;;;;;;;;6665:57;11745:5:::3;6449:11;:18;6461:5;6449:18;;;;;;;;;;;;;;;:28;;;;;;;;;;;;6444:65;;6503:5;6486:23;;;;;;;;;;;:::i;:::-;;;;;;;;6444:65;11780:5:::4;11787:6;6906:22;6931:11;:18;6943:5;6931:18;;;;;;;;;;;;;;;6906:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::4;;;6973:3;:17;;;6964:6;:26;6960:87;;;7021:6;7029:3;:17;;;6999:48;;;;;;;;;;;;:::i;:::-;;;;;;;;6960:87;11811:15:::5;11829:8;:15;11838:5;11829:15;;;;;;;;;;;;;;;:27;11845:10;11829:27;;;;;;;;;;;;;;;;11811:45;;11881:6;11871:7;:16;11867:65;;;11916:7;11925:6;11896:36;;;;;;;;;;;;:::i;:::-;;;;;;;;11867:65;12005:6;11995:7;:16;;;;:::i;:::-;11965:8;:15;11974:5;11965:15;;;;;;;;;;;;;;;:27;11981:10;11965:27;;;;;;;;;;;;;;;:46;;;;12034:13;;:15;;;;;;;;;;;;;12113:46;12140:10;12152:6;12120:5;12113:26;;;;:46;;;;;:::i;:::-;12193:10;12177:87;;12186:5;12177:87;;;12205:6;12213:8;:15;12222:5;12213:15;;;;;;;;;;;;;;;:27;12229:10;12213:27;;;;;;;;;;;;;;;;12242:21;12249:5;12256:6;12242;:21::i;:::-;12177:87;;;;;;;;:::i;:::-;;;;;;;;11800:472;6895:172:::4;6520:1;;6733::::3;6312::::2;2292::5::1;2303:20:::0;:18;:20::i;:::-;11576:696:11;;:::o;2196:49:0:-;2241:4;2196:49;;;:::o;10755:760:11:-;2261:21:5;:19;:21::i;:::-;10849:6:11::1;6279:1;6269:6;:11:::0;6265:36:::1;;6289:12;;;;;;;;;;;;;;6265:36;2148:1:::2;6449:11;:18;6461:5;6449:18;;;;;;;;;;;;;;;:28;;;;;;;;;;;;6444:65;;6503:5;6486:23;;;;;;;;;;;:::i;:::-;;;;;;;;6444:65;2148:1:::3;10937:6;6906:22;6931:11;:18;6943:5;6931:18;;;;;;;;;;;;;;;6906:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::3;;;6973:3;:17;;;6964:6;:26;6960:87;;;7021:6;7029:3;:17;;;6999:48;;;;;;;;;;;;:::i;:::-;;;;;;;;6960:87;10961:15:::4;10979:8;:22;2148:1:::0;10979:22:::4;;;;;;;;;;;;;;;:34;11002:10;10979:34;;;;;;;;;;;;;;;;10961:52;;11038:6;11028:7;:16;11024:65;;;11073:7;11082:6;11053:36;;;;;;;;;;;;:::i;:::-;;;;;;;;11024:65;11169:6;11159:7;:16;;;;:::i;:::-;11122:8;:22;2148:1:::0;11122:22:::4;;;;;;;;;;;;;;;:34;11145:10;11122:34;;;;;;;;;;;;;;;:53;;;;11198:13;;:15;;;;;;;;;;;;;11284:9;11299:10;:15;;11322:6;11299:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11283:50;;;11349:4;11344:37;;11362:19;;;;;;;;;;;;;;11344:37;11422:10;11399:108;;2148:1;11399:108;;;11434:6;11442:8;:22;2148:1:::0;11442:22:::4;;;;;;;;;;;;;;;:34;11465:10;11442:34;;;;;;;;;;;;;;;;11478:28;2148:1;11499:6;11478;:28::i;:::-;11399:108;;;;;;;;:::i;:::-;;;;;;;;10950:565;;6895:172:::3;6520:1;;6312::::2;2292::5::1;2303:20:::0;:18;:20::i;:::-;10755:760:11;:::o;1962:60::-;1999:23;1962:60;:::o;4618:138:0:-;4693:18;4706:4;4693:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;:::-;;4618:138:::0;;;:::o;12761:174:11:-;12836:7;12856:11;12870:8;:15;12879:5;12870:15;;;;;;;;;;;;;;;:21;12886:4;12870:21;;;;;;;;;;;;;;;;12856:35;;12909:18;12916:5;12923:3;12909:6;:18::i;:::-;12902:25;;;12761:174;;;;:::o;12551:120::-;12609:7;12636:8;:15;12645:5;12636:15;;;;;;;;;;;;;;;:27;12652:10;12636:27;;;;;;;;;;;;;;;;12629:34;;12551:120;;;:::o;2530:36::-;;;:::o;3010:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;730:146:9:-;806:4;844:25;829:40;;;:11;:40;;;;822:47;;730:146;;;:::o;3175:103:0:-;3241:30;3252:4;3258:12;:10;:12::i;:::-;3241:10;:30::i;:::-;3175:103;:::o;6155:316::-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;:12::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;2336:287:5:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;13218:1195:11:-;13288:12;13327:1;13317:6;:11;13313:25;;13337:1;13330:8;;;;13313:25;13349:22;13374:11;:18;13386:5;13374:18;;;;;;;;;;;;;;;13349:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13403:12;13418:3;:13;;;13403:28;;13462:1;13446:18;;:4;:18;;;13442:53;;13489:5;13473:22;;;;;;;;;;;:::i;:::-;;;;;;;;13442:53;13548:12;13590:4;13568:43;;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13545:68;;;;;;13637:1;13628:5;:10;13624:38;;13647:15;;;;;;;;;;;;;;13624:38;13675:19;13719:4;13697:36;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13675:60;;13824:17;13861:5;13844:6;:23;;;;:::i;:::-;13824:43;;13963:1;13947:13;:17;;;13943:95;;;14012:13;14006:2;:19;;;;:::i;:::-;13993:9;:33;;;;:::i;:::-;13981:45;;13943:95;2265:1;14117:33;;:3;:17;;;:33;;;14113:293;;14167:14;2265:1;14191:3;:17;;;:32;;;;:::i;:::-;14184:2;:40;;;;:::i;:::-;14167:57;;14258:6;14246:9;:18;;;;:::i;:::-;14239:25;;14152:124;14113:293;;;14297:14;14336:3;:17;;;2265:1;14321:32;;;;:::i;:::-;14314:2;:40;;;;:::i;:::-;14297:57;;14388:6;14376:9;:18;;;;:::i;:::-;14369:25;;14282:124;14113:293;13302:1111;;;;;13218:1195;;;;;:::o;1618:188:7:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;2629:209:5:-;1716:1;2809:7;:22;;;;2629:209::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;6708:317:0:-;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:6;:12;6851:4;6844:12;;;;;;;;;;;:20;;:29;6865:7;6844:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6927:12;:10;:12::i;:::-;6900:40;;6918:7;6900:40;;6912:4;6900:40;;;;;;;;;;6961:4;6954:11;;;;6802:217;7003:5;6996:12;;6708:317;;;;;:::o;1219:160:7:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;3408:197:0:-;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3574:7;3583:4;3541:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3491:108;3408:197;;:::o;8370:720:7:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;88:117:12:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:118::-;2296:24;2314:5;2296:24;:::i;:::-;2291:3;2284:37;2209:118;;:::o;2333:222::-;2426:4;2464:2;2453:9;2449:18;2441:26;;2477:71;2545:1;2534:9;2530:17;2521:6;2477:71;:::i;:::-;2333:222;;;;:::o;2561:77::-;2598:7;2627:5;2616:16;;2561:77;;;:::o;2644:118::-;2731:24;2749:5;2731:24;:::i;:::-;2726:3;2719:37;2644:118;;:::o;2768:222::-;2861:4;2899:2;2888:9;2884:18;2876:26;;2912:71;2980:1;2969:9;2965:17;2956:6;2912:71;:::i;:::-;2768:222;;;;:::o;2996:126::-;3033:7;3073:42;3066:5;3062:54;3051:65;;2996:126;;;:::o;3128:96::-;3165:7;3194:24;3212:5;3194:24;:::i;:::-;3183:35;;3128:96;;;:::o;3230:122::-;3303:24;3321:5;3303:24;:::i;:::-;3296:5;3293:35;3283:63;;3342:1;3339;3332:12;3283:63;3230:122;:::o;3358:139::-;3404:5;3442:6;3429:20;3420:29;;3458:33;3485:5;3458:33;:::i;:::-;3358:139;;;;:::o;3503:474::-;3571:6;3579;3628:2;3616:9;3607:7;3603:23;3599:32;3596:119;;;3634:79;;:::i;:::-;3596:119;3754:1;3779:53;3824:7;3815:6;3804:9;3800:22;3779:53;:::i;:::-;3769:63;;3725:117;3881:2;3907:53;3952:7;3943:6;3932:9;3928:22;3907:53;:::i;:::-;3897:63;;3852:118;3503:474;;;;;:::o;3983:86::-;4018:7;4058:4;4051:5;4047:16;4036:27;;3983:86;;;:::o;4075:112::-;4158:22;4174:5;4158:22;:::i;:::-;4153:3;4146:35;4075:112;;:::o;4193:214::-;4282:4;4320:2;4309:9;4305:18;4297:26;;4333:67;4397:1;4386:9;4382:17;4373:6;4333:67;:::i;:::-;4193:214;;;;:::o;4413:118::-;4500:24;4518:5;4500:24;:::i;:::-;4495:3;4488:37;4413:118;;:::o;4537:222::-;4630:4;4668:2;4657:9;4653:18;4645:26;;4681:71;4749:1;4738:9;4734:17;4725:6;4681:71;:::i;:::-;4537:222;;;;:::o;4765:122::-;4838:24;4856:5;4838:24;:::i;:::-;4831:5;4828:35;4818:63;;4877:1;4874;4867:12;4818:63;4765:122;:::o;4893:139::-;4939:5;4977:6;4964:20;4955:29;;4993:33;5020:5;4993:33;:::i;:::-;4893:139;;;;:::o;5038:474::-;5106:6;5114;5163:2;5151:9;5142:7;5138:23;5134:32;5131:119;;;5169:79;;:::i;:::-;5131:119;5289:1;5314:53;5359:7;5350:6;5339:9;5335:22;5314:53;:::i;:::-;5304:63;;5260:117;5416:2;5442:53;5487:7;5478:6;5467:9;5463:22;5442:53;:::i;:::-;5432:63;;5387:118;5038:474;;;;;:::o;5518:116::-;5588:21;5603:5;5588:21;:::i;:::-;5581:5;5578:32;5568:60;;5624:1;5621;5614:12;5568:60;5518:116;:::o;5640:133::-;5683:5;5721:6;5708:20;5699:29;;5737:30;5761:5;5737:30;:::i;:::-;5640:133;;;;:::o;5779:118::-;5850:22;5866:5;5850:22;:::i;:::-;5843:5;5840:33;5830:61;;5887:1;5884;5877:12;5830:61;5779:118;:::o;5903:135::-;5947:5;5985:6;5972:20;5963:29;;6001:31;6026:5;6001:31;:::i;:::-;5903:135;;;;:::o;6044:901::-;6134:6;6142;6150;6158;6166;6215:3;6203:9;6194:7;6190:23;6186:33;6183:120;;;6222:79;;:::i;:::-;6183:120;6342:1;6367:53;6412:7;6403:6;6392:9;6388:22;6367:53;:::i;:::-;6357:63;;6313:117;6469:2;6495:50;6537:7;6528:6;6517:9;6513:22;6495:50;:::i;:::-;6485:60;;6440:115;6594:2;6620:51;6663:7;6654:6;6643:9;6639:22;6620:51;:::i;:::-;6610:61;;6565:116;6720:2;6746:53;6791:7;6782:6;6771:9;6767:22;6746:53;:::i;:::-;6736:63;;6691:118;6848:3;6875:53;6920:7;6911:6;6900:9;6896:22;6875:53;:::i;:::-;6865:63;;6819:119;6044:901;;;;;;;;:::o;6951:329::-;7010:6;7059:2;7047:9;7038:7;7034:23;7030:32;7027:119;;;7065:79;;:::i;:::-;7027:119;7185:1;7210:53;7255:7;7246:6;7235:9;7231:22;7210:53;:::i;:::-;7200:63;;7156:117;6951:329;;;;:::o;7286:474::-;7354:6;7362;7411:2;7399:9;7390:7;7386:23;7382:32;7379:119;;;7417:79;;:::i;:::-;7379:119;7537:1;7562:53;7607:7;7598:6;7587:9;7583:22;7562:53;:::i;:::-;7552:63;;7508:117;7664:2;7690:53;7735:7;7726:6;7715:9;7711:22;7690:53;:::i;:::-;7680:63;;7635:118;7286:474;;;;;:::o;7766:329::-;7825:6;7874:2;7862:9;7853:7;7849:23;7845:32;7842:119;;;7880:79;;:::i;:::-;7842:119;8000:1;8025:53;8070:7;8061:6;8050:9;8046:22;8025:53;:::i;:::-;8015:63;;7971:117;7766:329;;;;:::o;8101:632::-;8290:4;8328:3;8317:9;8313:19;8305:27;;8342:65;8404:1;8393:9;8389:17;8380:6;8342:65;:::i;:::-;8417:66;8479:2;8468:9;8464:18;8455:6;8417:66;:::i;:::-;8493:68;8557:2;8546:9;8542:18;8533:6;8493:68;:::i;:::-;8571:72;8639:2;8628:9;8624:18;8615:6;8571:72;:::i;:::-;8653:73;8721:3;8710:9;8706:19;8697:6;8653:73;:::i;:::-;8101:632;;;;;;;;:::o;8739:180::-;8787:77;8784:1;8777:88;8884:4;8881:1;8874:15;8908:4;8905:1;8898:15;8925:191;8965:3;8984:20;9002:1;8984:20;:::i;:::-;8979:25;;9018:20;9036:1;9018:20;:::i;:::-;9013:25;;9061:1;9058;9054:9;9047:16;;9082:3;9079:1;9076:10;9073:36;;;9089:18;;:::i;:::-;9073:36;8925:191;;;;:::o;9122:332::-;9243:4;9281:2;9270:9;9266:18;9258:26;;9294:71;9362:1;9351:9;9347:17;9338:6;9294:71;:::i;:::-;9375:72;9443:2;9432:9;9428:18;9419:6;9375:72;:::i;:::-;9122:332;;;;;:::o;9460:442::-;9609:4;9647:2;9636:9;9632:18;9624:26;;9660:71;9728:1;9717:9;9713:17;9704:6;9660:71;:::i;:::-;9741:72;9809:2;9798:9;9794:18;9785:6;9741:72;:::i;:::-;9823;9891:2;9880:9;9876:18;9867:6;9823:72;:::i;:::-;9460:442;;;;;;:::o;9908:139::-;9963:5;9994:6;9988:13;9979:22;;10010:31;10035:5;10010:31;:::i;:::-;9908:139;;;;:::o;10053:347::-;10121:6;10170:2;10158:9;10149:7;10145:23;10141:32;10138:119;;;10176:79;;:::i;:::-;10138:119;10296:1;10321:62;10375:7;10366:6;10355:9;10351:22;10321:62;:::i;:::-;10311:72;;10267:126;10053:347;;;;:::o;10406:194::-;10446:4;10466:20;10484:1;10466:20;:::i;:::-;10461:25;;10500:20;10518:1;10500:20;:::i;:::-;10495:25;;10544:1;10541;10537:9;10529:17;;10568:1;10562:4;10559:11;10556:37;;;10573:18;;:::i;:::-;10556:37;10406:194;;;;:::o;10606:147::-;10707:11;10744:3;10729:18;;10606:147;;;;:::o;10759:114::-;;:::o;10879:398::-;11038:3;11059:83;11140:1;11135:3;11059:83;:::i;:::-;11052:90;;11151:93;11240:3;11151:93;:::i;:::-;11269:1;11264:3;11260:11;11253:18;;10879:398;;;:::o;11283:379::-;11467:3;11489:147;11632:3;11489:147;:::i;:::-;11482:154;;11653:3;11646:10;;11283:379;;;:::o;11668:169::-;11752:11;11786:6;11781:3;11774:19;11826:4;11821:3;11817:14;11802:29;;11668:169;;;;:::o;11843:181::-;11983:33;11979:1;11971:6;11967:14;11960:57;11843:181;:::o;12030:366::-;12172:3;12193:67;12257:2;12252:3;12193:67;:::i;:::-;12186:74;;12269:93;12358:3;12269:93;:::i;:::-;12387:2;12382:3;12378:12;12371:19;;12030:366;;;:::o;12402:419::-;12568:4;12606:2;12595:9;12591:18;12583:26;;12655:9;12649:4;12645:20;12641:1;12630:9;12626:17;12619:47;12683:131;12809:4;12683:131;:::i;:::-;12675:139;;12402:419;;;:::o;12827:105::-;12863:7;12903:22;12896:5;12892:34;12881:45;;12827:105;;;:::o;12938:120::-;13010:23;13027:5;13010:23;:::i;:::-;13003:5;13000:34;12990:62;;13048:1;13045;13038:12;12990:62;12938:120;:::o;13064:141::-;13120:5;13151:6;13145:13;13136:22;;13167:32;13193:5;13167:32;:::i;:::-;13064:141;;;;:::o;13211:76::-;13247:7;13276:5;13265:16;;13211:76;;;:::o;13293:120::-;13365:23;13382:5;13365:23;:::i;:::-;13358:5;13355:34;13345:62;;13403:1;13400;13393:12;13345:62;13293:120;:::o;13419:141::-;13475:5;13506:6;13500:13;13491:22;;13522:32;13548:5;13522:32;:::i;:::-;13419:141;;;;:::o;13566:143::-;13623:5;13654:6;13648:13;13639:22;;13670:33;13697:5;13670:33;:::i;:::-;13566:143;;;;:::o;13715:971::-;13818:6;13826;13834;13842;13850;13899:3;13887:9;13878:7;13874:23;13870:33;13867:120;;;13906:79;;:::i;:::-;13867:120;14026:1;14051:63;14106:7;14097:6;14086:9;14082:22;14051:63;:::i;:::-;14041:73;;13997:127;14163:2;14189:63;14244:7;14235:6;14224:9;14220:22;14189:63;:::i;:::-;14179:73;;14134:128;14301:2;14327:64;14383:7;14374:6;14363:9;14359:22;14327:64;:::i;:::-;14317:74;;14272:129;14440:2;14466:64;14522:7;14513:6;14502:9;14498:22;14466:64;:::i;:::-;14456:74;;14411:129;14579:3;14606:63;14661:7;14652:6;14641:9;14637:22;14606:63;:::i;:::-;14596:73;;14550:129;13715:971;;;;;;;;:::o;14692:410::-;14732:7;14755:20;14773:1;14755:20;:::i;:::-;14750:25;;14789:20;14807:1;14789:20;:::i;:::-;14784:25;;14844:1;14841;14837:9;14866:30;14884:11;14866:30;:::i;:::-;14855:41;;15045:1;15036:7;15032:15;15029:1;15026:22;15006:1;14999:9;14979:83;14956:139;;15075:18;;:::i;:::-;14956:139;14740:362;14692:410;;;;:::o;15108:102::-;15150:8;15197:5;15194:1;15190:13;15169:34;;15108:102;;;:::o;15216:848::-;15277:5;15284:4;15308:6;15299:15;;15332:5;15323:14;;15346:712;15367:1;15357:8;15354:15;15346:712;;;15462:4;15457:3;15453:14;15447:4;15444:24;15441:50;;;15471:18;;:::i;:::-;15441:50;15521:1;15511:8;15507:16;15504:451;;;15936:4;15929:5;15925:16;15916:25;;15504:451;15986:4;15980;15976:15;15968:23;;16016:32;16039:8;16016:32;:::i;:::-;16004:44;;15346:712;;;15216:848;;;;;;;:::o;16070:1073::-;16124:5;16315:8;16305:40;;16336:1;16327:10;;16338:5;;16305:40;16364:4;16354:36;;16381:1;16372:10;;16383:5;;16354:36;16450:4;16498:1;16493:27;;;;16534:1;16529:191;;;;16443:277;;16493:27;16511:1;16502:10;;16513:5;;;16529:191;16574:3;16564:8;16561:17;16558:43;;;16581:18;;:::i;:::-;16558:43;16630:8;16627:1;16623:16;16614:25;;16665:3;16658:5;16655:14;16652:40;;;16672:18;;:::i;:::-;16652:40;16705:5;;;16443:277;;16829:2;16819:8;16816:16;16810:3;16804:4;16801:13;16797:36;16779:2;16769:8;16766:16;16761:2;16755:4;16752:12;16748:35;16732:111;16729:246;;;16885:8;16879:4;16875:19;16866:28;;16920:3;16913:5;16910:14;16907:40;;;16927:18;;:::i;:::-;16907:40;16960:5;;16729:246;17000:42;17038:3;17028:8;17022:4;17019:1;17000:42;:::i;:::-;16985:57;;;;17074:4;17069:3;17065:14;17058:5;17055:25;17052:51;;;17083:18;;:::i;:::-;17052:51;17132:4;17125:5;17121:16;17112:25;;16070:1073;;;;;;:::o;17149:281::-;17207:5;17231:23;17249:4;17231:23;:::i;:::-;17223:31;;17275:25;17291:8;17275:25;:::i;:::-;17263:37;;17319:104;17356:66;17346:8;17340:4;17319:104;:::i;:::-;17310:113;;17149:281;;;;:::o;17436:180::-;17484:77;17481:1;17474:88;17581:4;17578:1;17571:15;17605:4;17602:1;17595:15;17622:185;17662:1;17679:20;17697:1;17679:20;:::i;:::-;17674:25;;17713:20;17731:1;17713:20;:::i;:::-;17708:25;;17752:1;17742:35;;17757:18;;:::i;:::-;17742:35;17799:1;17796;17792:9;17787:14;;17622:185;;;;:::o;17813:191::-;17851:4;17871:18;17887:1;17871:18;:::i;:::-;17866:23;;17903:18;17919:1;17903:18;:::i;:::-;17898:23;;17945:1;17942;17938:9;17930:17;;17969:4;17963;17960:14;17957:40;;;17977:18;;:::i;:::-;17957:40;17813:191;;;;:::o;18010:442::-;18159:4;18197:2;18186:9;18182:18;18174:26;;18210:71;18278:1;18267:9;18263:17;18254:6;18210:71;:::i;:::-;18291:72;18359:2;18348:9;18344:18;18335:6;18291:72;:::i;:::-;18373;18441:2;18430:9;18426:18;18417:6;18373:72;:::i;:::-;18010:442;;;;;;:::o;18458:332::-;18579:4;18617:2;18606:9;18602:18;18594:26;;18630:71;18698:1;18687:9;18683:17;18674:6;18630:71;:::i;:::-;18711:72;18779:2;18768:9;18764:18;18755:6;18711:72;:::i;:::-;18458:332;;;;;:::o;18796:::-;18917:4;18955:2;18944:9;18940:18;18932:26;;18968:71;19036:1;19025:9;19021:17;19012:6;18968:71;:::i;:::-;19049:72;19117:2;19106:9;19102:18;19093:6;19049:72;:::i;:::-;18796:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2381600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "419",
								"NATIVE_TOKEN()": "417",
								"ROLE_ADMIN()": "347",
								"USD_DECIMALS()": "354",
								"bankCapUsd6()": "infinite",
								"depositCount()": "2515",
								"depositEth()": "infinite",
								"depositToken(address,uint256)": "infinite",
								"getBalance(address)": "3004",
								"getRoleAdmin(bytes32)": "infinite",
								"getUsdBalance(address,address)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3145",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setTokenConfig(address,bool,uint8,uint256,address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"tokenConfig(address)": "infinite",
								"totalDepositedUsd6()": "2493",
								"withdrawCount()": "2558",
								"withdrawEth(uint256)": "infinite",
								"withdrawToken(address,uint256)": "infinite"
							},
							"internal": {
								"_toUsd(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1607,
									"end": 14416,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 5106,
									"end": 5959,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5253,
									"end": 5254,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5237,
									"end": 5249,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5237,
									"end": 5254,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 5233,
									"end": 5275,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 5233,
									"end": 5275,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5263,
									"end": 5275,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 5263,
									"end": 5275,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 5263,
									"end": 5275,
									"name": "PUSH",
									"source": 11,
									"value": "1F2A200500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5263,
									"end": 5275,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5263,
									"end": 5275,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5263,
									"end": 5275,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 5263,
									"end": 5275,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5263,
									"end": 5275,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 5263,
									"end": 5275,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 5263,
									"end": 5275,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5263,
									"end": 5275,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5263,
									"end": 5275,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 5263,
									"end": 5275,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5263,
									"end": 5275,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 5233,
									"end": 5275,
									"name": "tag",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 5233,
									"end": 5275,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5304,
									"end": 5316,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5290,
									"end": 5316,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 5290,
									"end": 5316,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5290,
									"end": 5316,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5290,
									"end": 5316,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5290,
									"end": 5316,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5290,
									"end": 5316,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5368,
									"end": 5410,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 2241,
									"end": 2245,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5379,
									"end": 5397,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5379,
									"end": 5397,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 5399,
									"end": 5409,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 5368,
									"end": 5378,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 5368,
									"end": 5378,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5368,
									"end": 5378,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 5368,
									"end": 5410,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5368,
									"end": 5410,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 5368,
									"end": 5410,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5368,
									"end": 5410,
									"name": "tag",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 5368,
									"end": 5410,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5368,
									"end": 5410,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 1999,
									"end": 2022,
									"name": "PUSH",
									"source": 11,
									"value": "2172861495E7B85EDAC73E3CD5FBB42DD675BAADF627720E687BCFDACA025096"
								},
								{
									"begin": 5504,
									"end": 5514,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 5481,
									"end": 5491,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 5481,
									"end": 5491,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5481,
									"end": 5491,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 5481,
									"end": 5515,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5610,
									"end": 5632,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 5610,
									"end": 5632,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 5610,
									"end": 5632,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5610,
									"end": 5632,
									"name": "tag",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 5610,
									"end": 5632,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5659,
									"end": 5663,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 5643,
									"end": 5646,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5643,
									"end": 5656,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5643,
									"end": 5656,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5643,
									"end": 5663,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5643,
									"end": 5663,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5643,
									"end": 5663,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5643,
									"end": 5663,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5643,
									"end": 5663,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5643,
									"end": 5663,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5643,
									"end": 5663,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5643,
									"end": 5663,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5643,
									"end": 5663,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5643,
									"end": 5663,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5643,
									"end": 5663,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5689,
									"end": 5693,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 5674,
									"end": 5677,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5674,
									"end": 5686,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5674,
									"end": 5686,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5674,
									"end": 5693,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5674,
									"end": 5693,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5674,
									"end": 5693,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5674,
									"end": 5693,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5674,
									"end": 5693,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5674,
									"end": 5693,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5674,
									"end": 5693,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5674,
									"end": 5693,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5674,
									"end": 5693,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5674,
									"end": 5693,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5674,
									"end": 5693,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5724,
									"end": 5726,
									"name": "PUSH",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 5704,
									"end": 5707,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5704,
									"end": 5721,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 5704,
									"end": 5721,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5704,
									"end": 5726,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5704,
									"end": 5726,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 5704,
									"end": 5726,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5704,
									"end": 5726,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5704,
									"end": 5726,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5704,
									"end": 5726,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 5704,
									"end": 5726,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5704,
									"end": 5726,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5704,
									"end": 5726,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5704,
									"end": 5726,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5704,
									"end": 5726,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5759,
									"end": 5775,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5739,
									"end": 5742,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5739,
									"end": 5756,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 5739,
									"end": 5756,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5739,
									"end": 5775,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5739,
									"end": 5775,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5739,
									"end": 5775,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5739,
									"end": 5775,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5739,
									"end": 5775,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5802,
									"end": 5814,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5786,
									"end": 5789,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5786,
									"end": 5799,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 5786,
									"end": 5799,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5786,
									"end": 5814,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5786,
									"end": 5814,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5786,
									"end": 5814,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5786,
									"end": 5814,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5786,
									"end": 5814,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5786,
									"end": 5814,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5786,
									"end": 5814,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5786,
									"end": 5814,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5786,
									"end": 5814,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5786,
									"end": 5814,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5786,
									"end": 5814,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5853,
									"end": 5856,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5836,
									"name": "PUSH",
									"source": 11,
									"value": "6"
								},
								{
									"begin": 5825,
									"end": 5850,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2148,
									"end": 2149,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5850,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5825,
									"end": 5850,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5850,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5825,
									"end": 5850,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5850,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5850,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5850,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5825,
									"end": 5850,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5850,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5850,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5850,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5850,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5825,
									"end": 5850,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5850,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5825,
									"end": 5850,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5825,
									"end": 5856,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2148,
									"end": 2149,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5874,
									"end": 5951,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5874,
									"end": 5951,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5874,
									"end": 5951,
									"name": "PUSH",
									"source": 11,
									"value": "CEEC6D18B470B58EABBFC22B7D771C54609ACB2BBE777747424F6E9A5A9D5A25"
								},
								{
									"begin": 5904,
									"end": 5908,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 5910,
									"end": 5914,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5916,
									"end": 5918,
									"name": "PUSH",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 5920,
									"end": 5936,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 5938,
									"end": 5950,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 5874,
									"end": 5951,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 5874,
									"end": 5951,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 5874,
									"end": 5951,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 5874,
									"end": 5951,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 5874,
									"end": 5951,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 5874,
									"end": 5951,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 5874,
									"end": 5951,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 5874,
									"end": 5951,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5874,
									"end": 5951,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5874,
									"end": 5951,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 5874,
									"end": 5951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5874,
									"end": 5951,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 5874,
									"end": 5951,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5874,
									"end": 5951,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 5874,
									"end": 5951,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 5874,
									"end": 5951,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5874,
									"end": 5951,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5874,
									"end": 5951,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 5874,
									"end": 5951,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5874,
									"end": 5951,
									"name": "LOG2",
									"source": 11
								},
								{
									"begin": 5222,
									"end": 5959,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5106,
									"end": 5959,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6232,
									"end": 6236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6261,
									"end": 6265,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6267,
									"end": 6274,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6323,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6291,
									"end": 6297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6312,
									"end": 6319,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6358,
									"end": 6362,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6407,
									"end": 6411,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2907,
									"end": 2911,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2936,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2937,
									"end": 2941,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2951,
									"end": 2958,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 694,
									"end": 820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 826,
									"end": 922,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 826,
									"end": 922,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 863,
									"end": 870,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 910,
									"end": 915,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 892,
									"end": 916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 892,
									"end": 916,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 881,
									"end": 916,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 881,
									"end": 916,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 826,
									"end": 922,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 826,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1874,
									"end": 1964,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 1874,
									"end": 1964,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1908,
									"end": 1915,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1944,
									"end": 1957,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1937,
									"end": 1958,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1926,
									"end": 1958,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1926,
									"end": 1958,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1874,
									"end": 1964,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1874,
									"end": 1964,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1874,
									"end": 1964,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1874,
									"end": 1964,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1970,
									"end": 2079,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 1970,
									"end": 2079,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 2066,
									"end": 2071,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 2051,
									"end": 2072,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "tag",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2046,
									"end": 2049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2039,
									"end": 2073,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1970,
									"end": 2079,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1970,
									"end": 2079,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1970,
									"end": 2079,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2085,
									"end": 2171,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 2085,
									"end": 2171,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2131,
									"end": 2138,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2160,
									"end": 2165,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2149,
									"end": 2165,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2149,
									"end": 2165,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2085,
									"end": 2171,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2085,
									"end": 2171,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2085,
									"end": 2171,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2085,
									"end": 2171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2177,
									"end": 2263,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 2177,
									"end": 2263,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2212,
									"end": 2219,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2252,
									"end": 2256,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 2245,
									"end": 2250,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2241,
									"end": 2257,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2230,
									"end": 2257,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2230,
									"end": 2257,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2177,
									"end": 2263,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2177,
									"end": 2263,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2177,
									"end": 2263,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2177,
									"end": 2263,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2269,
									"end": 2329,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2269,
									"end": 2329,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2297,
									"end": 2300,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2318,
									"end": 2323,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2311,
									"end": 2323,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2311,
									"end": 2323,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2269,
									"end": 2329,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2269,
									"end": 2329,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2269,
									"end": 2329,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2269,
									"end": 2329,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2335,
									"end": 2491,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 2335,
									"end": 2491,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2392,
									"end": 2401,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2425,
									"end": 2485,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 2441,
									"end": 2484,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 2450,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2477,
									"end": 2482,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2450,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 2450,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2450,
									"end": 2483,
									"name": "tag",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2450,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2441,
									"end": 2484,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2441,
									"end": 2484,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2441,
									"end": 2484,
									"name": "tag",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 2441,
									"end": 2484,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2425,
									"end": 2485,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 2425,
									"end": 2485,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2425,
									"end": 2485,
									"name": "tag",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 2425,
									"end": 2485,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2412,
									"end": 2485,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2412,
									"end": 2485,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2335,
									"end": 2491,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2335,
									"end": 2491,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2335,
									"end": 2491,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2335,
									"end": 2491,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2497,
									"end": 2642,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 2497,
									"end": 2642,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2591,
									"end": 2635,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 2629,
									"end": 2634,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2591,
									"end": 2635,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 2591,
									"end": 2635,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2591,
									"end": 2635,
									"name": "tag",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 2591,
									"end": 2635,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2586,
									"end": 2589,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2636,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2497,
									"end": 2642,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2497,
									"end": 2642,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2497,
									"end": 2642,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2648,
									"end": 2766,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 2648,
									"end": 2766,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2735,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 2753,
									"end": 2758,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2735,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 2735,
									"end": 2759,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2735,
									"end": 2759,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 2735,
									"end": 2759,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2730,
									"end": 2733,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2723,
									"end": 2760,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2648,
									"end": 2766,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2648,
									"end": 2766,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2648,
									"end": 2766,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2772,
									"end": 2890,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 2772,
									"end": 2890,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2859,
									"end": 2883,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 2877,
									"end": 2882,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2859,
									"end": 2883,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 2859,
									"end": 2883,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2859,
									"end": 2883,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 2859,
									"end": 2883,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2854,
									"end": 2857,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2847,
									"end": 2884,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2772,
									"end": 2890,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2772,
									"end": 2890,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2772,
									"end": 2890,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2896,
									"end": 3550,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 2896,
									"end": 3550,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3096,
									"end": 3100,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3134,
									"end": 3137,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 3123,
									"end": 3132,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3119,
									"end": 3138,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3111,
									"end": 3138,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3111,
									"end": 3138,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3148,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 3210,
									"end": 3211,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3199,
									"end": 3208,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3195,
									"end": 3212,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3186,
									"end": 3192,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 3148,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 3148,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3148,
									"end": 3213,
									"name": "tag",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 3148,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3223,
									"end": 3289,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 3285,
									"end": 3287,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3274,
									"end": 3283,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3270,
									"end": 3288,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3261,
									"end": 3267,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3223,
									"end": 3289,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 3223,
									"end": 3289,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3223,
									"end": 3289,
									"name": "tag",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 3223,
									"end": 3289,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3299,
									"end": 3378,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 3374,
									"end": 3376,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3363,
									"end": 3372,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3377,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3350,
									"end": 3356,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3299,
									"end": 3378,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 3299,
									"end": 3378,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3299,
									"end": 3378,
									"name": "tag",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 3299,
									"end": 3378,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3388,
									"end": 3460,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 3456,
									"end": 3458,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 3445,
									"end": 3454,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3441,
									"end": 3459,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3432,
									"end": 3438,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3388,
									"end": 3460,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 3388,
									"end": 3460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3388,
									"end": 3460,
									"name": "tag",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 3388,
									"end": 3460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3470,
									"end": 3543,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 3538,
									"end": 3541,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 3527,
									"end": 3536,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3523,
									"end": 3542,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3514,
									"end": 3520,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3470,
									"end": 3543,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 3470,
									"end": 3543,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3470,
									"end": 3543,
									"name": "tag",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 3470,
									"end": 3543,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2896,
									"end": 3550,
									"name": "SWAP7",
									"source": 12
								},
								{
									"begin": 2896,
									"end": 3550,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 2896,
									"end": 3550,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2896,
									"end": 3550,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2896,
									"end": 3550,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2896,
									"end": 3550,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2896,
									"end": 3550,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2896,
									"end": 3550,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2896,
									"end": 3550,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "1218"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1607,
									"end": 14416,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122069601f4bfdead2f9b62145d9c35aba2095c1dd3372d55863d615de5ef69cae4264736f6c634300081a0033",
									".code": [
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "D391014B"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "D391014B"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "DCB6E250"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "F8B2CB4F"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "F9BDA21F"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "FE136C4E"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "9C50ADEE"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "9E281A98"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "C311D049"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "2F6EE695"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "2F6EE695"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "31F7D964"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "338B5DEA"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "439370B1"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "4CC05A71"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "29608BA6"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "2DFDF0B5"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1607,
											"end": 14416,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 2641,
											"end": 2674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2641,
											"end": 2674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 2726,
											"end": 2753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2726,
											"end": 2753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2228,
											"end": 2266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 2228,
											"end": 2266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 2101,
											"end": 2150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2101,
											"end": 2150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 9693,
											"end": 10512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 9693,
											"end": 10512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8932,
											"end": 9632,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 8932,
											"end": 9632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8932,
											"end": 9632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 8932,
											"end": 9632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 8932,
											"end": 9632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8932,
											"end": 9632,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 8932,
											"end": 9632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8932,
											"end": 9632,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 2760,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2760,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 7364,
											"end": 8600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 7364,
											"end": 8600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 11576,
											"end": 12272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 11576,
											"end": 12272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 10755,
											"end": 11515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 10755,
											"end": 11515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 1962,
											"end": 2022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 12761,
											"end": 12935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 12761,
											"end": 12935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 12761,
											"end": 12935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 12551,
											"end": 12671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 12551,
											"end": 12671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 12551,
											"end": 12671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 2530,
											"end": 2566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2530,
											"end": 2566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 3010,
											"end": 3060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 3010,
											"end": 3060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 3010,
											"end": 3060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2724,
											"end": 2735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2700,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4289,
											"end": 4293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4276,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4317,
											"end": 4321,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4306,
											"end": 4331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2265,
											"end": 2266,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 2228,
											"end": 2266,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2148,
											"end": 2149,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2150,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9803,
											"end": 9809,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6279,
											"end": 6280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6269,
											"end": 6275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6269,
											"end": 6280,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6265,
											"end": 6301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 6265,
											"end": 6301,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F2A200500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6265,
											"end": 6301,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 6265,
											"end": 6301,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9830,
											"end": 9835,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2148,
											"end": 2149,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6669,
											"end": 6690,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6669,
											"end": 6690,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6669,
											"end": 6674,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6669,
											"end": 6690,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6669,
											"end": 6690,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6669,
											"end": 6690,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6665,
											"end": 6722,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 6665,
											"end": 6722,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6716,
											"end": 6721,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "BF16AAB600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6699,
											"end": 6722,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6665,
											"end": 6722,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 6665,
											"end": 6722,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9861,
											"end": 9866,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6460,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6461,
											"end": 6466,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 3,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6444,
											"end": 6509,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 6444,
											"end": 6509,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6508,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "BF16AAB600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6486,
											"end": 6509,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6444,
											"end": 6509,
											"modifierDepth": 3,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 6444,
											"end": 6509,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9937,
											"end": 9949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9952,
											"end": 9973,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 9959,
											"end": 9964,
											"modifierDepth": 4,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9966,
											"end": 9972,
											"modifierDepth": 4,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9952,
											"end": 9958,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 9952,
											"end": 9973,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9952,
											"end": 9973,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 9952,
											"end": 9973,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9937,
											"end": 9973,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9937,
											"end": 9973,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9984,
											"end": 10004,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10028,
											"end": 10032,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10007,
											"end": 10025,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 10007,
											"end": 10025,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10007,
											"end": 10032,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 10007,
											"end": 10032,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10007,
											"end": 10032,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10007,
											"end": 10032,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 10007,
											"end": 10032,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10007,
											"end": 10032,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 10007,
											"end": 10032,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9984,
											"end": 10032,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9984,
											"end": 10032,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10062,
											"end": 10073,
											"modifierDepth": 4,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1218"
										},
										{
											"begin": 10047,
											"end": 10059,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10047,
											"end": 10073,
											"modifierDepth": 4,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10043,
											"end": 10120,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10043,
											"end": 10120,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 10043,
											"end": 10120,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10094,
											"end": 10106,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10108,
											"end": 10119,
											"modifierDepth": 4,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1218"
										},
										{
											"begin": 10082,
											"end": 10120,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10082,
											"end": 10120,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10082,
											"end": 10120,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "F480E28500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10082,
											"end": 10120,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10082,
											"end": 10120,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10082,
											"end": 10120,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10082,
											"end": 10120,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10082,
											"end": 10120,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 10082,
											"end": 10120,
											"modifierDepth": 4,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10082,
											"end": 10120,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10082,
											"end": 10120,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10082,
											"end": 10120,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 10082,
											"end": 10120,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10082,
											"end": 10120,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 10082,
											"end": 10120,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10082,
											"end": 10120,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10082,
											"end": 10120,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10082,
											"end": 10120,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10082,
											"end": 10120,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10082,
											"end": 10120,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10082,
											"end": 10120,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10082,
											"end": 10120,
											"modifierDepth": 4,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10043,
											"end": 10120,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 10043,
											"end": 10120,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10184,
											"end": 10190,
											"modifierDepth": 4,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10161,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 10153,
											"end": 10168,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10162,
											"end": 10167,
											"modifierDepth": 4,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10168,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10153,
											"end": 10168,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10168,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10153,
											"end": 10168,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10168,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10168,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10168,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10153,
											"end": 10168,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10168,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10168,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10168,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10168,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10153,
											"end": 10168,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10168,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10153,
											"end": 10168,
											"modifierDepth": 4,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10180,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10169,
											"end": 10179,
											"modifierDepth": 4,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10180,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10153,
											"end": 10180,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10180,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10153,
											"end": 10180,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10180,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10180,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10180,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10153,
											"end": 10180,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10180,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10180,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10180,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10180,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10153,
											"end": 10180,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10180,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10153,
											"end": 10180,
											"modifierDepth": 4,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10180,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10153,
											"end": 10190,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10190,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10190,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10190,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 10153,
											"end": 10190,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10190,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10190,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 10153,
											"end": 10190,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10190,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 10153,
											"end": 10190,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10190,
											"modifierDepth": 4,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10190,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10190,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10190,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10190,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10190,
											"modifierDepth": 4,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10190,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10222,
											"end": 10234,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10201,
											"end": 10219,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 10201,
											"end": 10234,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10201,
											"end": 10234,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10201,
											"end": 10234,
											"modifierDepth": 4,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 10201,
											"end": 10234,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10257,
											"end": 10269,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 10257,
											"end": 10269,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10257,
											"end": 10271,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10257,
											"end": 10271,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10257,
											"end": 10271,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10257,
											"end": 10271,
											"modifierDepth": 4,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10257,
											"end": 10271,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10257,
											"end": 10271,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10257,
											"end": 10271,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10257,
											"end": 10271,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10257,
											"end": 10271,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10257,
											"end": 10271,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10257,
											"end": 10271,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10257,
											"end": 10271,
											"modifierDepth": 4,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 10257,
											"end": 10271,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10334,
											"end": 10399,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 10365,
											"end": 10375,
											"modifierDepth": 4,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 10385,
											"end": 10389,
											"modifierDepth": 4,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 10392,
											"end": 10398,
											"modifierDepth": 4,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 10341,
											"end": 10346,
											"modifierDepth": 4,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 10334,
											"end": 10364,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10334,
											"end": 10364,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10334,
											"end": 10364,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 10334,
											"end": 10364,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10334,
											"end": 10399,
											"modifierDepth": 4,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 10334,
											"end": 10399,
											"modifierDepth": 4,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10334,
											"end": 10399,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10334,
											"end": 10399,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10334,
											"end": 10399,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10334,
											"end": 10399,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10334,
											"end": 10399,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10334,
											"end": 10399,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 10334,
											"end": 10399,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10450,
											"end": 10460,
											"modifierDepth": 4,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 10435,
											"end": 10504,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10435,
											"end": 10504,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10443,
											"end": 10448,
											"modifierDepth": 4,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 10435,
											"end": 10504,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10435,
											"end": 10504,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10435,
											"end": 10504,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "4E2CA0515ED1AEF1395F66B5303BB5D6F1BF9D61A353FA53F73F8AC9973FA9F6"
										},
										{
											"begin": 10462,
											"end": 10468,
											"modifierDepth": 4,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10478,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 10470,
											"end": 10485,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10479,
											"end": 10484,
											"modifierDepth": 4,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10485,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10470,
											"end": 10485,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10485,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10470,
											"end": 10485,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10485,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10485,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10485,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10470,
											"end": 10485,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10485,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10485,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10485,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10485,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10470,
											"end": 10485,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10485,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10470,
											"end": 10485,
											"modifierDepth": 4,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10497,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10486,
											"end": 10496,
											"modifierDepth": 4,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10497,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10470,
											"end": 10497,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10497,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10470,
											"end": 10497,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10497,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10497,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10497,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10470,
											"end": 10497,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10497,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10497,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10497,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10497,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10470,
											"end": 10497,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10497,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10470,
											"end": 10497,
											"modifierDepth": 4,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 10470,
											"end": 10497,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10499,
											"end": 10503,
											"modifierDepth": 4,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10435,
											"end": 10504,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10435,
											"end": 10504,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10435,
											"end": 10504,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 10435,
											"end": 10504,
											"modifierDepth": 4,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 10435,
											"end": 10504,
											"modifierDepth": 4,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10435,
											"end": 10504,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10435,
											"end": 10504,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10435,
											"end": 10504,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 10435,
											"end": 10504,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10435,
											"end": 10504,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 10435,
											"end": 10504,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10435,
											"end": 10504,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10435,
											"end": 10504,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10435,
											"end": 10504,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10435,
											"end": 10504,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10435,
											"end": 10504,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10435,
											"end": 10504,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10435,
											"end": 10504,
											"modifierDepth": 4,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 9873,
											"end": 10512,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9873,
											"end": 10512,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6733,
											"end": 6734,
											"modifierDepth": 3,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6312,
											"end": 6313,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9693,
											"end": 10512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5419,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5419,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 5517,
											"end": 5521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 5505,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8932,
											"end": 9632,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 8932,
											"end": 9632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9028,
											"end": 9037,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 6279,
											"end": 6280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6269,
											"end": 6275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6269,
											"end": 6280,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6265,
											"end": 6301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 6265,
											"end": 6301,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F2A200500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6265,
											"end": 6301,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 6265,
											"end": 6301,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2148,
											"end": 2149,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6460,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6461,
											"end": 6466,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6444,
											"end": 6509,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 6444,
											"end": 6509,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6508,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "BF16AAB600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6486,
											"end": 6509,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6444,
											"end": 6509,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 6444,
											"end": 6509,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9146,
											"end": 9158,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9192,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 2148,
											"end": 2149,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9182,
											"end": 9191,
											"modifierDepth": 3,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 9161,
											"end": 9167,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 9161,
											"end": 9192,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9161,
											"end": 9192,
											"modifierDepth": 3,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 9161,
											"end": 9192,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9146,
											"end": 9192,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9146,
											"end": 9192,
											"modifierDepth": 3,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9203,
											"end": 9223,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9251,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9226,
											"end": 9244,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 9226,
											"end": 9244,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9226,
											"end": 9251,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 9226,
											"end": 9251,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9226,
											"end": 9251,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9226,
											"end": 9251,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 9226,
											"end": 9251,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9226,
											"end": 9251,
											"modifierDepth": 3,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 9226,
											"end": 9251,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9203,
											"end": 9251,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9203,
											"end": 9251,
											"modifierDepth": 3,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9281,
											"end": 9292,
											"modifierDepth": 3,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1218"
										},
										{
											"begin": 9266,
											"end": 9278,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9266,
											"end": 9292,
											"modifierDepth": 3,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9262,
											"end": 9339,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9262,
											"end": 9339,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 9262,
											"end": 9339,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9313,
											"end": 9325,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9327,
											"end": 9338,
											"modifierDepth": 3,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1218"
										},
										{
											"begin": 9301,
											"end": 9339,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9301,
											"end": 9339,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9301,
											"end": 9339,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "F480E28500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9301,
											"end": 9339,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9301,
											"end": 9339,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9301,
											"end": 9339,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9301,
											"end": 9339,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9301,
											"end": 9339,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 9301,
											"end": 9339,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9301,
											"end": 9339,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9301,
											"end": 9339,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9301,
											"end": 9339,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 9301,
											"end": 9339,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9301,
											"end": 9339,
											"modifierDepth": 3,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 9301,
											"end": 9339,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9301,
											"end": 9339,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9301,
											"end": 9339,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9301,
											"end": 9339,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9301,
											"end": 9339,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9301,
											"end": 9339,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9301,
											"end": 9339,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9301,
											"end": 9339,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9262,
											"end": 9339,
											"modifierDepth": 3,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 9262,
											"end": 9339,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9410,
											"end": 9419,
											"modifierDepth": 3,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9380,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 9372,
											"end": 9394,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2149,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9394,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9372,
											"end": 9394,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9394,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9372,
											"end": 9394,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9394,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9394,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9394,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9372,
											"end": 9394,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9394,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9394,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9394,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9394,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9372,
											"end": 9394,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9394,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9372,
											"end": 9394,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9406,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9395,
											"end": 9405,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9406,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9372,
											"end": 9406,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9406,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9372,
											"end": 9406,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9406,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9406,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9406,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9372,
											"end": 9406,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9406,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9406,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9406,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9406,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9372,
											"end": 9406,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9406,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9372,
											"end": 9406,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9406,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9372,
											"end": 9419,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9419,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9419,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9419,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 9372,
											"end": 9419,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9419,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9419,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 9372,
											"end": 9419,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9419,
											"modifierDepth": 3,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 9372,
											"end": 9419,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9419,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9419,
											"modifierDepth": 3,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9419,
											"modifierDepth": 3,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9419,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9419,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9419,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9419,
											"modifierDepth": 3,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9451,
											"end": 9463,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9430,
											"end": 9448,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 9430,
											"end": 9463,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9430,
											"end": 9463,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9430,
											"end": 9463,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 9430,
											"end": 9463,
											"modifierDepth": 3,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9498,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 9486,
											"end": 9498,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9486,
											"end": 9500,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9500,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9500,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9500,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9500,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9500,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9500,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 9486,
											"end": 9500,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9500,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9500,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9500,
											"modifierDepth": 3,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9500,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9500,
											"modifierDepth": 3,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9560,
											"end": 9570,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 9538,
											"end": 9624,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9538,
											"end": 9624,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2148,
											"end": 2149,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9538,
											"end": 9624,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9538,
											"end": 9624,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9538,
											"end": 9624,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "4E2CA0515ED1AEF1395F66B5303BB5D6F1BF9D61A353FA53F73F8AC9973FA9F6"
										},
										{
											"begin": 9572,
											"end": 9581,
											"modifierDepth": 3,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9591,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 9583,
											"end": 9605,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2149,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9605,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9583,
											"end": 9605,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9605,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9583,
											"end": 9605,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9605,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9605,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9605,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9583,
											"end": 9605,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9605,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9605,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9605,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9605,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9583,
											"end": 9605,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9605,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9583,
											"end": 9605,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9617,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9606,
											"end": 9616,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9617,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9583,
											"end": 9617,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9617,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9583,
											"end": 9617,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9617,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9617,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9617,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9583,
											"end": 9617,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9617,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9617,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9617,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9617,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9583,
											"end": 9617,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9617,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9583,
											"end": 9617,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 9583,
											"end": 9617,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9619,
											"end": 9623,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9538,
											"end": 9624,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9538,
											"end": 9624,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9538,
											"end": 9624,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 9538,
											"end": 9624,
											"modifierDepth": 3,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9538,
											"end": 9624,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9538,
											"end": 9624,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9538,
											"end": 9624,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9538,
											"end": 9624,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 9538,
											"end": 9624,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9538,
											"end": 9624,
											"modifierDepth": 3,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 9538,
											"end": 9624,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9538,
											"end": 9624,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9538,
											"end": 9624,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9538,
											"end": 9624,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9538,
											"end": 9624,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9538,
											"end": 9624,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9538,
											"end": 9624,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9538,
											"end": 9624,
											"modifierDepth": 3,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 9082,
											"end": 9632,
											"modifierDepth": 3,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9082,
											"end": 9632,
											"modifierDepth": 3,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6312,
											"end": 6313,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8932,
											"end": 9632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2941,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1999,
											"end": 2022,
											"name": "PUSH",
											"source": 11,
											"value": "2172861495E7B85EDAC73E3CD5FBB42DD675BAADF627720E687BCFDACA025096"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7579,
											"end": 7600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7579,
											"end": 7600,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7579,
											"end": 7584,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7579,
											"end": 7600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7579,
											"end": 7600,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7579,
											"end": 7600,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7575,
											"end": 7632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 7575,
											"end": 7632,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7626,
											"end": 7631,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7609,
											"end": 7632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7609,
											"end": 7632,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7609,
											"end": 7632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "BF16AAB600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7609,
											"end": 7632,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7609,
											"end": 7632,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7609,
											"end": 7632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7609,
											"end": 7632,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7609,
											"end": 7632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 7609,
											"end": 7632,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7609,
											"end": 7632,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7609,
											"end": 7632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 7609,
											"end": 7632,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7609,
											"end": 7632,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 7609,
											"end": 7632,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7609,
											"end": 7632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7609,
											"end": 7632,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7609,
											"end": 7632,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7609,
											"end": 7632,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7609,
											"end": 7632,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7609,
											"end": 7632,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7609,
											"end": 7632,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7575,
											"end": 7632,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 7575,
											"end": 7632,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7671,
											"end": 7682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 7671,
											"end": 7689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7683,
											"end": 7688,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7671,
											"end": 7689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7671,
											"end": 7689,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7671,
											"end": 7689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7671,
											"end": 7689,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7671,
											"end": 7689,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7671,
											"end": 7689,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7671,
											"end": 7689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7671,
											"end": 7689,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7671,
											"end": 7689,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7671,
											"end": 7689,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7671,
											"end": 7689,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7671,
											"end": 7689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7671,
											"end": 7689,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7671,
											"end": 7689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7671,
											"end": 7689,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7689,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7689,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7718,
											"end": 7727,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7700,
											"end": 7703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7700,
											"end": 7713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7700,
											"end": 7713,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7700,
											"end": 7713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7700,
											"end": 7727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7700,
											"end": 7727,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 7700,
											"end": 7727,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7700,
											"end": 7727,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7700,
											"end": 7727,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7700,
											"end": 7727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 7700,
											"end": 7727,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7700,
											"end": 7727,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 7700,
											"end": 7727,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7700,
											"end": 7727,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7700,
											"end": 7727,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7700,
											"end": 7727,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7700,
											"end": 7727,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7700,
											"end": 7727,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7700,
											"end": 7727,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 7700,
											"end": 7727,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7700,
											"end": 7727,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7700,
											"end": 7727,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7756,
											"end": 7761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7738,
											"end": 7741,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 7750,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7738,
											"end": 7750,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 7750,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7738,
											"end": 7761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7738,
											"end": 7761,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 7761,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 7761,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 7761,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 7761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 7738,
											"end": 7761,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 7761,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 7761,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 7761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 7761,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 7761,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 7761,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 7761,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 7761,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 7761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 7761,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 7761,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7864,
											"end": 7877,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7864,
											"end": 7882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 7864,
											"end": 7882,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7864,
											"end": 7882,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7860,
											"end": 8315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 7860,
											"end": 8315,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8001,
											"end": 8006,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7986,
											"end": 8016,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 7986,
											"end": 8018,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 7986,
											"end": 8018,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7982,
											"end": 8238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 7982,
											"end": 8238,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8220,
											"end": 8222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 8200,
											"end": 8203,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8200,
											"end": 8217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8200,
											"end": 8217,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8200,
											"end": 8217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 8200,
											"end": 8222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 8200,
											"end": 8222,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 8200,
											"end": 8222,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8200,
											"end": 8222,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8200,
											"end": 8222,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8200,
											"end": 8222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 8200,
											"end": 8222,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8200,
											"end": 8222,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 8200,
											"end": 8222,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8200,
											"end": 8222,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8200,
											"end": 8222,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8200,
											"end": 8222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 8200,
											"end": 8222,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8200,
											"end": 8222,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8200,
											"end": 8222,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 8200,
											"end": 8222,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8200,
											"end": 8222,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8200,
											"end": 8222,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7982,
											"end": 8238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 7982,
											"end": 8238,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7982,
											"end": 8238,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 7982,
											"end": 8238,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8078,
											"end": 8081,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8058,
											"end": 8061,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8058,
											"end": 8075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8058,
											"end": 8075,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8058,
											"end": 8075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 8058,
											"end": 8081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 8058,
											"end": 8081,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 8058,
											"end": 8081,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8058,
											"end": 8081,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8058,
											"end": 8081,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8058,
											"end": 8081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 8058,
											"end": 8081,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8058,
											"end": 8081,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 8058,
											"end": 8081,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8058,
											"end": 8081,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8058,
											"end": 8081,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8058,
											"end": 8081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 8058,
											"end": 8081,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8058,
											"end": 8081,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8058,
											"end": 8081,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 8058,
											"end": 8081,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8058,
											"end": 8081,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8058,
											"end": 8081,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8019,
											"end": 8097,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7982,
											"end": 8238,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 7982,
											"end": 8238,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7860,
											"end": 8315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 7860,
											"end": 8315,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7860,
											"end": 8315,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 7860,
											"end": 8315,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8290,
											"end": 8303,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8270,
											"end": 8273,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8270,
											"end": 8287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8270,
											"end": 8287,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8270,
											"end": 8287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 8270,
											"end": 8303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 8270,
											"end": 8303,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 8270,
											"end": 8303,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8270,
											"end": 8303,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8270,
											"end": 8303,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8270,
											"end": 8303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 8270,
											"end": 8303,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8270,
											"end": 8303,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 8270,
											"end": 8303,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8270,
											"end": 8303,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8270,
											"end": 8303,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8270,
											"end": 8303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 8270,
											"end": 8303,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8270,
											"end": 8303,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8270,
											"end": 8303,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 8270,
											"end": 8303,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8270,
											"end": 8303,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8270,
											"end": 8303,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7860,
											"end": 8315,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 7860,
											"end": 8315,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8360,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8327,
											"end": 8330,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8327,
											"end": 8344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8327,
											"end": 8344,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8327,
											"end": 8360,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8327,
											"end": 8360,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8327,
											"end": 8360,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8327,
											"end": 8360,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8391,
											"end": 8400,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8371,
											"end": 8374,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8371,
											"end": 8384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 8371,
											"end": 8384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8371,
											"end": 8384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8371,
											"end": 8400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 8371,
											"end": 8400,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 8371,
											"end": 8400,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8371,
											"end": 8400,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8371,
											"end": 8400,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8371,
											"end": 8400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8371,
											"end": 8400,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8371,
											"end": 8400,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 8371,
											"end": 8400,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8371,
											"end": 8400,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8371,
											"end": 8400,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8371,
											"end": 8400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8371,
											"end": 8400,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8371,
											"end": 8400,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8371,
											"end": 8400,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 8371,
											"end": 8400,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8371,
											"end": 8400,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8371,
											"end": 8400,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8448,
											"end": 8453,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8418,
											"end": 8592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8418,
											"end": 8592,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8418,
											"end": 8592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "CEEC6D18B470B58EABBFC22B7D771C54609ACB2BBE777747424F6E9A5A9D5A25"
										},
										{
											"begin": 8468,
											"end": 8477,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8492,
											"end": 8497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8512,
											"end": 8515,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8512,
											"end": 8529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8512,
											"end": 8529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8512,
											"end": 8529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 8512,
											"end": 8529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8512,
											"end": 8529,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8512,
											"end": 8529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8512,
											"end": 8529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 8512,
											"end": 8529,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 8512,
											"end": 8529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8512,
											"end": 8529,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 8512,
											"end": 8529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 8512,
											"end": 8529,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8544,
											"end": 8557,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8572,
											"end": 8581,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8418,
											"end": 8592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8418,
											"end": 8592,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8418,
											"end": 8592,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 8418,
											"end": 8592,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 8418,
											"end": 8592,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 8418,
											"end": 8592,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8418,
											"end": 8592,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8418,
											"end": 8592,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8418,
											"end": 8592,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8418,
											"end": 8592,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 8418,
											"end": 8592,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8418,
											"end": 8592,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 8418,
											"end": 8592,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8418,
											"end": 8592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8418,
											"end": 8592,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8418,
											"end": 8592,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8418,
											"end": 8592,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8418,
											"end": 8592,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8418,
											"end": 8592,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8418,
											"end": 8592,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 7564,
											"end": 8600,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 8600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11687,
											"end": 11693,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6279,
											"end": 6280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6269,
											"end": 6275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6269,
											"end": 6280,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6265,
											"end": 6301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 6265,
											"end": 6301,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F2A200500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6265,
											"end": 6301,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 6265,
											"end": 6301,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11714,
											"end": 11719,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2148,
											"end": 2149,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6669,
											"end": 6690,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6669,
											"end": 6690,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6669,
											"end": 6674,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6669,
											"end": 6690,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6669,
											"end": 6690,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6669,
											"end": 6690,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6665,
											"end": 6722,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 6665,
											"end": 6722,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6716,
											"end": 6721,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "BF16AAB600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6699,
											"end": 6722,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6722,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6665,
											"end": 6722,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 6665,
											"end": 6722,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11745,
											"end": 11750,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6460,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6461,
											"end": 6466,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 3,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6444,
											"end": 6509,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 6444,
											"end": 6509,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6508,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "BF16AAB600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6486,
											"end": 6509,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6444,
											"end": 6509,
											"modifierDepth": 3,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 6444,
											"end": 6509,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11780,
											"end": 11785,
											"modifierDepth": 4,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11787,
											"end": 11793,
											"modifierDepth": 4,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6928,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6931,
											"end": 6942,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6943,
											"end": 6948,
											"modifierDepth": 4,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 4,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6973,
											"end": 6976,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6973,
											"end": 6990,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6973,
											"end": 6990,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6973,
											"end": 6990,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6964,
											"end": 6970,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6964,
											"end": 6990,
											"modifierDepth": 4,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6960,
											"end": 7047,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6960,
											"end": 7047,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 6960,
											"end": 7047,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7021,
											"end": 7027,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7029,
											"end": 7032,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7029,
											"end": 7046,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7029,
											"end": 7046,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7029,
											"end": 7046,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "16D0EF100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 4,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 6999,
											"end": 7047,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 4,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6960,
											"end": 7047,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 6960,
											"end": 7047,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11811,
											"end": 11826,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11829,
											"end": 11837,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 11829,
											"end": 11844,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11838,
											"end": 11843,
											"modifierDepth": 5,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 11829,
											"end": 11844,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11829,
											"end": 11844,
											"modifierDepth": 5,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11829,
											"end": 11844,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11829,
											"end": 11844,
											"modifierDepth": 5,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11829,
											"end": 11844,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11829,
											"end": 11844,
											"modifierDepth": 5,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11829,
											"end": 11844,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11829,
											"end": 11844,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11829,
											"end": 11844,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11829,
											"end": 11844,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11829,
											"end": 11844,
											"modifierDepth": 5,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11829,
											"end": 11844,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11829,
											"end": 11844,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11829,
											"end": 11844,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11829,
											"end": 11844,
											"modifierDepth": 5,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 11829,
											"end": 11856,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11845,
											"end": 11855,
											"modifierDepth": 5,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 11829,
											"end": 11856,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11829,
											"end": 11856,
											"modifierDepth": 5,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11829,
											"end": 11856,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11829,
											"end": 11856,
											"modifierDepth": 5,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11829,
											"end": 11856,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11829,
											"end": 11856,
											"modifierDepth": 5,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11829,
											"end": 11856,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11829,
											"end": 11856,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11829,
											"end": 11856,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11829,
											"end": 11856,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11829,
											"end": 11856,
											"modifierDepth": 5,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11829,
											"end": 11856,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11829,
											"end": 11856,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11829,
											"end": 11856,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11829,
											"end": 11856,
											"modifierDepth": 5,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 11829,
											"end": 11856,
											"modifierDepth": 5,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11811,
											"end": 11856,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11811,
											"end": 11856,
											"modifierDepth": 5,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11881,
											"end": 11887,
											"modifierDepth": 5,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 11871,
											"end": 11878,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11871,
											"end": 11887,
											"modifierDepth": 5,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 11867,
											"end": 11932,
											"modifierDepth": 5,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11867,
											"end": 11932,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 11867,
											"end": 11932,
											"modifierDepth": 5,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11916,
											"end": 11923,
											"modifierDepth": 5,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11925,
											"end": 11931,
											"modifierDepth": 5,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 11896,
											"end": 11932,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11896,
											"end": 11932,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11896,
											"end": 11932,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "CF47918100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11896,
											"end": 11932,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11896,
											"end": 11932,
											"modifierDepth": 5,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11896,
											"end": 11932,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11896,
											"end": 11932,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11896,
											"end": 11932,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 11896,
											"end": 11932,
											"modifierDepth": 5,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11896,
											"end": 11932,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11896,
											"end": 11932,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11896,
											"end": 11932,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 11896,
											"end": 11932,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11896,
											"end": 11932,
											"modifierDepth": 5,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 11896,
											"end": 11932,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11896,
											"end": 11932,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11896,
											"end": 11932,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11896,
											"end": 11932,
											"modifierDepth": 5,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11896,
											"end": 11932,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11896,
											"end": 11932,
											"modifierDepth": 5,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11896,
											"end": 11932,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11896,
											"end": 11932,
											"modifierDepth": 5,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11867,
											"end": 11932,
											"modifierDepth": 5,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 11867,
											"end": 11932,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12005,
											"end": 12011,
											"modifierDepth": 5,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 11995,
											"end": 12002,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11995,
											"end": 12011,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 11995,
											"end": 12011,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11995,
											"end": 12011,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11995,
											"end": 12011,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 11995,
											"end": 12011,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11995,
											"end": 12011,
											"modifierDepth": 5,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 11995,
											"end": 12011,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 11973,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 11965,
											"end": 11980,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11974,
											"end": 11979,
											"modifierDepth": 5,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 11980,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11965,
											"end": 11980,
											"modifierDepth": 5,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 11980,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11965,
											"end": 11980,
											"modifierDepth": 5,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 11980,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 11980,
											"modifierDepth": 5,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 11980,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11965,
											"end": 11980,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 11980,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 11980,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 11980,
											"modifierDepth": 5,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 11980,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11965,
											"end": 11980,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 11980,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11965,
											"end": 11980,
											"modifierDepth": 5,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 11992,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11981,
											"end": 11991,
											"modifierDepth": 5,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 11992,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11965,
											"end": 11992,
											"modifierDepth": 5,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 11992,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11965,
											"end": 11992,
											"modifierDepth": 5,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 11992,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 11992,
											"modifierDepth": 5,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 11992,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11965,
											"end": 11992,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 11992,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 11992,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 11992,
											"modifierDepth": 5,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 11992,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11965,
											"end": 11992,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 11992,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11965,
											"end": 11992,
											"modifierDepth": 5,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 12011,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 12011,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 12011,
											"modifierDepth": 5,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 11965,
											"end": 12011,
											"modifierDepth": 5,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12034,
											"end": 12047,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12034,
											"end": 12047,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12034,
											"end": 12049,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12034,
											"end": 12049,
											"modifierDepth": 5,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12034,
											"end": 12049,
											"modifierDepth": 5,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12034,
											"end": 12049,
											"modifierDepth": 5,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12034,
											"end": 12049,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12034,
											"end": 12049,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12034,
											"end": 12049,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 12034,
											"end": 12049,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12034,
											"end": 12049,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12034,
											"end": 12049,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12034,
											"end": 12049,
											"modifierDepth": 5,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12034,
											"end": 12049,
											"modifierDepth": 5,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 12034,
											"end": 12049,
											"modifierDepth": 5,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12113,
											"end": 12159,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 12140,
											"end": 12150,
											"modifierDepth": 5,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 12152,
											"end": 12158,
											"modifierDepth": 5,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 12120,
											"end": 12125,
											"modifierDepth": 5,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 12113,
											"end": 12139,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12113,
											"end": 12139,
											"modifierDepth": 5,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12113,
											"end": 12139,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 12113,
											"end": 12139,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12113,
											"end": 12159,
											"modifierDepth": 5,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12113,
											"end": 12159,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12113,
											"end": 12159,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12113,
											"end": 12159,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12113,
											"end": 12159,
											"modifierDepth": 5,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12113,
											"end": 12159,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12113,
											"end": 12159,
											"modifierDepth": 5,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 12113,
											"end": 12159,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12193,
											"end": 12203,
											"modifierDepth": 5,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 12177,
											"end": 12264,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12177,
											"end": 12264,
											"modifierDepth": 5,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12186,
											"end": 12191,
											"modifierDepth": 5,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 12177,
											"end": 12264,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12177,
											"end": 12264,
											"modifierDepth": 5,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12177,
											"end": 12264,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "EBFF2602B3F468259E1E99F613FED6691F3A6526EFFE6EF3E768BA7AE7A36C4F"
										},
										{
											"begin": 12205,
											"end": 12211,
											"modifierDepth": 5,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 12213,
											"end": 12221,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 12213,
											"end": 12228,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12222,
											"end": 12227,
											"modifierDepth": 5,
											"name": "DUP15",
											"source": 11
										},
										{
											"begin": 12213,
											"end": 12228,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12213,
											"end": 12228,
											"modifierDepth": 5,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12213,
											"end": 12228,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12213,
											"end": 12228,
											"modifierDepth": 5,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12213,
											"end": 12228,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12213,
											"end": 12228,
											"modifierDepth": 5,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12213,
											"end": 12228,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12213,
											"end": 12228,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12213,
											"end": 12228,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12213,
											"end": 12228,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12213,
											"end": 12228,
											"modifierDepth": 5,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12213,
											"end": 12228,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12213,
											"end": 12228,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12213,
											"end": 12228,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12213,
											"end": 12228,
											"modifierDepth": 5,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 12213,
											"end": 12240,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12229,
											"end": 12239,
											"modifierDepth": 5,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 12213,
											"end": 12240,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12213,
											"end": 12240,
											"modifierDepth": 5,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12213,
											"end": 12240,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12213,
											"end": 12240,
											"modifierDepth": 5,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12213,
											"end": 12240,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12213,
											"end": 12240,
											"modifierDepth": 5,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12213,
											"end": 12240,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12213,
											"end": 12240,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12213,
											"end": 12240,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12213,
											"end": 12240,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12213,
											"end": 12240,
											"modifierDepth": 5,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12213,
											"end": 12240,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12213,
											"end": 12240,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12213,
											"end": 12240,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12213,
											"end": 12240,
											"modifierDepth": 5,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 12213,
											"end": 12240,
											"modifierDepth": 5,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12242,
											"end": 12263,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 12249,
											"end": 12254,
											"modifierDepth": 5,
											"name": "DUP15",
											"source": 11
										},
										{
											"begin": 12256,
											"end": 12262,
											"modifierDepth": 5,
											"name": "DUP15",
											"source": 11
										},
										{
											"begin": 12242,
											"end": 12248,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 12242,
											"end": 12263,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12242,
											"end": 12263,
											"modifierDepth": 5,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 12242,
											"end": 12263,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12177,
											"end": 12264,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12177,
											"end": 12264,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12177,
											"end": 12264,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 12177,
											"end": 12264,
											"modifierDepth": 5,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 12177,
											"end": 12264,
											"modifierDepth": 5,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12177,
											"end": 12264,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12177,
											"end": 12264,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12177,
											"end": 12264,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 12177,
											"end": 12264,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12177,
											"end": 12264,
											"modifierDepth": 5,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 12177,
											"end": 12264,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12177,
											"end": 12264,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12177,
											"end": 12264,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12177,
											"end": 12264,
											"modifierDepth": 5,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12177,
											"end": 12264,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12177,
											"end": 12264,
											"modifierDepth": 5,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12177,
											"end": 12264,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12177,
											"end": 12264,
											"modifierDepth": 5,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 11800,
											"end": 12272,
											"modifierDepth": 5,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6895,
											"end": 7067,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6520,
											"end": 6521,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6520,
											"end": 6521,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6733,
											"end": 6734,
											"modifierDepth": 3,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6312,
											"end": 6313,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11576,
											"end": 12272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10849,
											"end": 10855,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6279,
											"end": 6280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6269,
											"end": 6275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6269,
											"end": 6280,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6265,
											"end": 6301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 6265,
											"end": 6301,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F2A200500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6301,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6265,
											"end": 6301,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 6265,
											"end": 6301,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2148,
											"end": 2149,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6460,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6461,
											"end": 6466,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6467,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6449,
											"end": 6477,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6444,
											"end": 6509,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 6444,
											"end": 6509,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6508,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "BF16AAB600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6486,
											"end": 6509,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6509,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6444,
											"end": 6509,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 6444,
											"end": 6509,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2148,
											"end": 2149,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10937,
											"end": 10943,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6928,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6931,
											"end": 6942,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6943,
											"end": 6948,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6931,
											"end": 6949,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6949,
											"modifierDepth": 3,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6973,
											"end": 6976,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6973,
											"end": 6990,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6973,
											"end": 6990,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6973,
											"end": 6990,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6964,
											"end": 6970,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6964,
											"end": 6990,
											"modifierDepth": 3,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6960,
											"end": 7047,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6960,
											"end": 7047,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 6960,
											"end": 7047,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7021,
											"end": 7027,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7029,
											"end": 7032,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7029,
											"end": 7046,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7029,
											"end": 7046,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7029,
											"end": 7046,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "16D0EF100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 6999,
											"end": 7047,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 3,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7047,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6960,
											"end": 7047,
											"modifierDepth": 3,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 6960,
											"end": 7047,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10961,
											"end": 10976,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10979,
											"end": 10987,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 10979,
											"end": 11001,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2149,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10979,
											"end": 11001,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10979,
											"end": 11001,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10979,
											"end": 11001,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10979,
											"end": 11001,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10979,
											"end": 11001,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10979,
											"end": 11001,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10979,
											"end": 11001,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10979,
											"end": 11001,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10979,
											"end": 11001,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10979,
											"end": 11001,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10979,
											"end": 11001,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10979,
											"end": 11001,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10979,
											"end": 11001,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10979,
											"end": 11001,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10979,
											"end": 11001,
											"modifierDepth": 4,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 10979,
											"end": 11013,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11002,
											"end": 11012,
											"modifierDepth": 4,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 10979,
											"end": 11013,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10979,
											"end": 11013,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10979,
											"end": 11013,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10979,
											"end": 11013,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10979,
											"end": 11013,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10979,
											"end": 11013,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10979,
											"end": 11013,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10979,
											"end": 11013,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10979,
											"end": 11013,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10979,
											"end": 11013,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10979,
											"end": 11013,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10979,
											"end": 11013,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10979,
											"end": 11013,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10979,
											"end": 11013,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10979,
											"end": 11013,
											"modifierDepth": 4,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 10979,
											"end": 11013,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10961,
											"end": 11013,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10961,
											"end": 11013,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11038,
											"end": 11044,
											"modifierDepth": 4,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 11028,
											"end": 11035,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11028,
											"end": 11044,
											"modifierDepth": 4,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 11024,
											"end": 11089,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11024,
											"end": 11089,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 11024,
											"end": 11089,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11073,
											"end": 11080,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11082,
											"end": 11088,
											"modifierDepth": 4,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 11053,
											"end": 11089,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11053,
											"end": 11089,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11053,
											"end": 11089,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "CF47918100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11053,
											"end": 11089,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11053,
											"end": 11089,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11053,
											"end": 11089,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11053,
											"end": 11089,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11053,
											"end": 11089,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 11053,
											"end": 11089,
											"modifierDepth": 4,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11053,
											"end": 11089,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11053,
											"end": 11089,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11053,
											"end": 11089,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 11053,
											"end": 11089,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11053,
											"end": 11089,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 11053,
											"end": 11089,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11053,
											"end": 11089,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11053,
											"end": 11089,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11053,
											"end": 11089,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11053,
											"end": 11089,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11053,
											"end": 11089,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11053,
											"end": 11089,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11053,
											"end": 11089,
											"modifierDepth": 4,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11024,
											"end": 11089,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 11024,
											"end": 11089,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11169,
											"end": 11175,
											"modifierDepth": 4,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 11159,
											"end": 11166,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11159,
											"end": 11175,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 11159,
											"end": 11175,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11159,
											"end": 11175,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11159,
											"end": 11175,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 11159,
											"end": 11175,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11159,
											"end": 11175,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 11159,
											"end": 11175,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11130,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 11122,
											"end": 11144,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2149,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11144,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11122,
											"end": 11144,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11144,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11122,
											"end": 11144,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11144,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11144,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11144,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11122,
											"end": 11144,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11144,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11144,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11144,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11144,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11122,
											"end": 11144,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11144,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11122,
											"end": 11144,
											"modifierDepth": 4,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11156,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11145,
											"end": 11155,
											"modifierDepth": 4,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11156,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11122,
											"end": 11156,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11156,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11122,
											"end": 11156,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11156,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11156,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11156,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11122,
											"end": 11156,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11156,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11156,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11156,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11156,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11122,
											"end": 11156,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11156,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11122,
											"end": 11156,
											"modifierDepth": 4,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11175,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11175,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11175,
											"modifierDepth": 4,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11175,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11198,
											"end": 11211,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11198,
											"end": 11211,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11198,
											"end": 11213,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11198,
											"end": 11213,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11198,
											"end": 11213,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11198,
											"end": 11213,
											"modifierDepth": 4,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11198,
											"end": 11213,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11198,
											"end": 11213,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11198,
											"end": 11213,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 11198,
											"end": 11213,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11198,
											"end": 11213,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11198,
											"end": 11213,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11198,
											"end": 11213,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11198,
											"end": 11213,
											"modifierDepth": 4,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 11198,
											"end": 11213,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11284,
											"end": 11293,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11299,
											"end": 11309,
											"modifierDepth": 4,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11314,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11299,
											"end": 11314,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11322,
											"end": 11328,
											"modifierDepth": 4,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 11299,
											"end": 11333,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11333,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11283,
											"end": 11333,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11283,
											"end": 11333,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11283,
											"end": 11333,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11349,
											"end": 11353,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11344,
											"end": 11381,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 11344,
											"end": 11381,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11362,
											"end": 11381,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11362,
											"end": 11381,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11362,
											"end": 11381,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "6D963F8800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11362,
											"end": 11381,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11362,
											"end": 11381,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11362,
											"end": 11381,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11362,
											"end": 11381,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11362,
											"end": 11381,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11362,
											"end": 11381,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11362,
											"end": 11381,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11362,
											"end": 11381,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11362,
											"end": 11381,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11362,
											"end": 11381,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11362,
											"end": 11381,
											"modifierDepth": 4,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11344,
											"end": 11381,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 11344,
											"end": 11381,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11422,
											"end": 11432,
											"modifierDepth": 4,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 11399,
											"end": 11507,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11399,
											"end": 11507,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2148,
											"end": 2149,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11399,
											"end": 11507,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11399,
											"end": 11507,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11399,
											"end": 11507,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "EBFF2602B3F468259E1E99F613FED6691F3A6526EFFE6EF3E768BA7AE7A36C4F"
										},
										{
											"begin": 11434,
											"end": 11440,
											"modifierDepth": 4,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11450,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 11442,
											"end": 11464,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2149,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11464,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11442,
											"end": 11464,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11464,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11442,
											"end": 11464,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11464,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11464,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11464,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11442,
											"end": 11464,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11464,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11464,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11464,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11464,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11442,
											"end": 11464,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11464,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11442,
											"end": 11464,
											"modifierDepth": 4,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11476,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11465,
											"end": 11475,
											"modifierDepth": 4,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11476,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11442,
											"end": 11476,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11476,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11442,
											"end": 11476,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11476,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11476,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11476,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11442,
											"end": 11476,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11476,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11476,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11476,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11476,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11442,
											"end": 11476,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11476,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11442,
											"end": 11476,
											"modifierDepth": 4,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11476,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11506,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 2148,
											"end": 2149,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11499,
											"end": 11505,
											"modifierDepth": 4,
											"name": "DUP15",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11484,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 11478,
											"end": 11506,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11478,
											"end": 11506,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 11478,
											"end": 11506,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11399,
											"end": 11507,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11399,
											"end": 11507,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11399,
											"end": 11507,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 11399,
											"end": 11507,
											"modifierDepth": 4,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 11399,
											"end": 11507,
											"modifierDepth": 4,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11399,
											"end": 11507,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11399,
											"end": 11507,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11399,
											"end": 11507,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 11399,
											"end": 11507,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11399,
											"end": 11507,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 11399,
											"end": 11507,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11399,
											"end": 11507,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11399,
											"end": 11507,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11399,
											"end": 11507,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11399,
											"end": 11507,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11399,
											"end": 11507,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11399,
											"end": 11507,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11399,
											"end": 11507,
											"modifierDepth": 4,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 10950,
											"end": 11515,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10950,
											"end": 11515,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6895,
											"end": 7067,
											"modifierDepth": 3,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6520,
											"end": 6521,
											"modifierDepth": 3,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6520,
											"end": 6521,
											"modifierDepth": 3,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6312,
											"end": 6313,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10755,
											"end": 11515,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10755,
											"end": 11515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1999,
											"end": 2022,
											"name": "PUSH",
											"source": 11,
											"value": "2172861495E7B85EDAC73E3CD5FBB42DD675BAADF627720E687BCFDACA025096"
										},
										{
											"begin": 1962,
											"end": 2022,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 4706,
											"end": 4710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4693,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 4735,
											"end": 4739,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4741,
											"end": 4748,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 4723,
											"end": 4749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12836,
											"end": 12843,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12856,
											"end": 12867,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12870,
											"end": 12878,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 12870,
											"end": 12885,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12879,
											"end": 12884,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12870,
											"end": 12885,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12870,
											"end": 12885,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12870,
											"end": 12885,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12870,
											"end": 12885,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12870,
											"end": 12885,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12870,
											"end": 12885,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12870,
											"end": 12885,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12870,
											"end": 12885,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12870,
											"end": 12885,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12870,
											"end": 12885,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12870,
											"end": 12885,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12870,
											"end": 12885,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12870,
											"end": 12885,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12870,
											"end": 12885,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12870,
											"end": 12885,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 12870,
											"end": 12891,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12886,
											"end": 12890,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12870,
											"end": 12891,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12870,
											"end": 12891,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12870,
											"end": 12891,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12870,
											"end": 12891,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12870,
											"end": 12891,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12870,
											"end": 12891,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12870,
											"end": 12891,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12870,
											"end": 12891,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12870,
											"end": 12891,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12870,
											"end": 12891,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12870,
											"end": 12891,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12870,
											"end": 12891,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12870,
											"end": 12891,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12870,
											"end": 12891,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12870,
											"end": 12891,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 12870,
											"end": 12891,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12856,
											"end": 12891,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12856,
											"end": 12891,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12909,
											"end": 12927,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12923,
											"end": 12926,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12909,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 12909,
											"end": 12927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12909,
											"end": 12927,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 12909,
											"end": 12927,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12902,
											"end": 12927,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12902,
											"end": 12927,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12902,
											"end": 12927,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12609,
											"end": 12616,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12636,
											"end": 12644,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 12636,
											"end": 12651,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12645,
											"end": 12650,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12636,
											"end": 12651,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12636,
											"end": 12651,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12636,
											"end": 12651,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12636,
											"end": 12651,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12636,
											"end": 12651,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12636,
											"end": 12651,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12636,
											"end": 12651,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12636,
											"end": 12651,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12636,
											"end": 12651,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12636,
											"end": 12651,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12636,
											"end": 12651,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12636,
											"end": 12651,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12636,
											"end": 12651,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12636,
											"end": 12651,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12636,
											"end": 12651,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 12636,
											"end": 12663,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12652,
											"end": 12662,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 12636,
											"end": 12663,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12636,
											"end": 12663,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12636,
											"end": 12663,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12636,
											"end": 12663,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12636,
											"end": 12663,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12636,
											"end": 12663,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12636,
											"end": 12663,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12636,
											"end": 12663,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12636,
											"end": 12663,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12636,
											"end": 12663,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12636,
											"end": 12663,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12636,
											"end": 12663,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12636,
											"end": 12663,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12636,
											"end": 12663,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12636,
											"end": 12663,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 12636,
											"end": 12663,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12629,
											"end": 12663,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12629,
											"end": 12663,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1218"
										},
										{
											"begin": 2530,
											"end": 2566,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 730,
											"end": 876,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 730,
											"end": 876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 806,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 829,
											"end": 840,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 829,
											"end": 869,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 822,
											"end": 869,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 822,
											"end": 869,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 730,
											"end": 876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 730,
											"end": 876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 3252,
											"end": 3256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3258,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 3241,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 6261,
											"end": 6265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6267,
											"end": 6274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6253,
											"end": 6275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6319,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 6373,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6373,
											"end": 6385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6364,
											"end": 6371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6407,
											"end": 6411,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13218,
											"end": 14413,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 13218,
											"end": 14413,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13288,
											"end": 13300,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13327,
											"end": 13328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13317,
											"end": 13323,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13317,
											"end": 13328,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13313,
											"end": 13338,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 13313,
											"end": 13338,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13337,
											"end": 13338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13330,
											"end": 13338,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13330,
											"end": 13338,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13330,
											"end": 13338,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 13330,
											"end": 13338,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13313,
											"end": 13338,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 13313,
											"end": 13338,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13371,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13374,
											"end": 13385,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13386,
											"end": 13391,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13392,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13403,
											"end": 13415,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13418,
											"end": 13421,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13418,
											"end": 13431,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 13418,
											"end": 13431,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13418,
											"end": 13431,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13403,
											"end": 13431,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13403,
											"end": 13431,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13462,
											"end": 13463,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13446,
											"end": 13464,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13446,
											"end": 13464,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13446,
											"end": 13450,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13446,
											"end": 13464,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13446,
											"end": 13464,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13446,
											"end": 13464,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13442,
											"end": 13495,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 13442,
											"end": 13495,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13489,
											"end": 13494,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13473,
											"end": 13495,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13473,
											"end": 13495,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13473,
											"end": 13495,
											"name": "PUSH",
											"source": 11,
											"value": "8A7A791D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13473,
											"end": 13495,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13473,
											"end": 13495,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13473,
											"end": 13495,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13473,
											"end": 13495,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13473,
											"end": 13495,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 13473,
											"end": 13495,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13473,
											"end": 13495,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13473,
											"end": 13495,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 13473,
											"end": 13495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13473,
											"end": 13495,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 13473,
											"end": 13495,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13473,
											"end": 13495,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13473,
											"end": 13495,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13473,
											"end": 13495,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13473,
											"end": 13495,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13473,
											"end": 13495,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13473,
											"end": 13495,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13473,
											"end": 13495,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13442,
											"end": 13495,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 13442,
											"end": 13495,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13548,
											"end": 13560,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13590,
											"end": 13594,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13611,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13568,
											"end": 13611,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13611,
											"name": "PUSH",
											"source": 11,
											"value": "FEAF968C"
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 13568,
											"end": 13613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 13568,
											"end": 13613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13545,
											"end": 13613,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13545,
											"end": 13613,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13545,
											"end": 13613,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13545,
											"end": 13613,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13545,
											"end": 13613,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13545,
											"end": 13613,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13637,
											"end": 13638,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13628,
											"end": 13633,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13628,
											"end": 13638,
											"name": "SGT",
											"source": 11
										},
										{
											"begin": 13624,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 13624,
											"end": 13662,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13647,
											"end": 13662,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13647,
											"end": 13662,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13647,
											"end": 13662,
											"name": "PUSH",
											"source": 11,
											"value": "4FD58D4B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13647,
											"end": 13662,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13647,
											"end": 13662,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13647,
											"end": 13662,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13647,
											"end": 13662,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13647,
											"end": 13662,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13647,
											"end": 13662,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13647,
											"end": 13662,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13647,
											"end": 13662,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13647,
											"end": 13662,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13647,
											"end": 13662,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13647,
											"end": 13662,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13624,
											"end": 13662,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 13624,
											"end": 13662,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13675,
											"end": 13694,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13719,
											"end": 13723,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13733,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13697,
											"end": 13733,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13733,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 13697,
											"end": 13735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 13697,
											"end": 13735,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13675,
											"end": 13735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13675,
											"end": 13735,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13824,
											"end": 13841,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13861,
											"end": 13866,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13844,
											"end": 13850,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 13844,
											"end": 13867,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 13844,
											"end": 13867,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13844,
											"end": 13867,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13844,
											"end": 13867,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 13844,
											"end": 13867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13844,
											"end": 13867,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 13844,
											"end": 13867,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13824,
											"end": 13867,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13824,
											"end": 13867,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13963,
											"end": 13964,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13947,
											"end": 13960,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13947,
											"end": 13964,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 13947,
											"end": 13964,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13947,
											"end": 13964,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 13943,
											"end": 14038,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13943,
											"end": 14038,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 13943,
											"end": 14038,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14012,
											"end": 14025,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14006,
											"end": 14008,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 14006,
											"end": 14025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 14006,
											"end": 14025,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14006,
											"end": 14025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14006,
											"end": 14025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 14006,
											"end": 14025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14006,
											"end": 14025,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 14006,
											"end": 14025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13993,
											"end": 14002,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13993,
											"end": 14026,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 13993,
											"end": 14026,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13993,
											"end": 14026,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13993,
											"end": 14026,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 13993,
											"end": 14026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13993,
											"end": 14026,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 13993,
											"end": 14026,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13981,
											"end": 14026,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13981,
											"end": 14026,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13943,
											"end": 14038,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 13943,
											"end": 14038,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2265,
											"end": 2266,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 14117,
											"end": 14150,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 14117,
											"end": 14150,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14117,
											"end": 14120,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14117,
											"end": 14134,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14117,
											"end": 14134,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14117,
											"end": 14134,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14117,
											"end": 14150,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 14117,
											"end": 14150,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14117,
											"end": 14150,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 14113,
											"end": 14406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 14113,
											"end": 14406,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14167,
											"end": 14181,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2266,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 14191,
											"end": 14194,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 14191,
											"end": 14208,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14191,
											"end": 14208,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14191,
											"end": 14208,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14191,
											"end": 14223,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 14191,
											"end": 14223,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14191,
											"end": 14223,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14191,
											"end": 14223,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 14191,
											"end": 14223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14191,
											"end": 14223,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 14191,
											"end": 14223,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14184,
											"end": 14186,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 14184,
											"end": 14224,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 14184,
											"end": 14224,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14184,
											"end": 14224,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14184,
											"end": 14224,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 14184,
											"end": 14224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14184,
											"end": 14224,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 14184,
											"end": 14224,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14167,
											"end": 14224,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14167,
											"end": 14224,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14258,
											"end": 14264,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14246,
											"end": 14255,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 14246,
											"end": 14264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14239,
											"end": 14264,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 14239,
											"end": 14264,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14152,
											"end": 14276,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14113,
											"end": 14406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 14113,
											"end": 14406,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14113,
											"end": 14406,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 14113,
											"end": 14406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14297,
											"end": 14311,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14336,
											"end": 14339,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14336,
											"end": 14353,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14336,
											"end": 14353,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14336,
											"end": 14353,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2265,
											"end": 2266,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 14321,
											"end": 14353,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 14321,
											"end": 14353,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14321,
											"end": 14353,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14321,
											"end": 14353,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 14321,
											"end": 14353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14321,
											"end": 14353,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 14321,
											"end": 14353,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14314,
											"end": 14316,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 14314,
											"end": 14354,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 14314,
											"end": 14354,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14314,
											"end": 14354,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14314,
											"end": 14354,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 14314,
											"end": 14354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14314,
											"end": 14354,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 14314,
											"end": 14354,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14297,
											"end": 14354,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14297,
											"end": 14354,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14388,
											"end": 14394,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14376,
											"end": 14385,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14376,
											"end": 14394,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 14376,
											"end": 14394,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14376,
											"end": 14394,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14376,
											"end": 14394,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 14376,
											"end": 14394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14376,
											"end": 14394,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 14376,
											"end": 14394,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14369,
											"end": 14394,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 14369,
											"end": 14394,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14282,
											"end": 14406,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14113,
											"end": 14406,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 14113,
											"end": 14406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13302,
											"end": 14413,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13302,
											"end": 14413,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13302,
											"end": 14413,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13302,
											"end": 14413,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13302,
											"end": 14413,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13218,
											"end": 14413,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 13218,
											"end": 14413,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13218,
											"end": 14413,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13218,
											"end": 14413,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13218,
											"end": 14413,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13218,
											"end": 14413,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13218,
											"end": 14413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6806,
											"end": 6828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6876,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6855,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6872,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 6927,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6927,
											"end": 6939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6912,
											"end": 6916,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6961,
											"end": 6965,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3496,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3583,
											"end": 3587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3541,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 1988,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 2296,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2291,
											"end": 2294,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2284,
											"end": 2321,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2209,
											"end": 2327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2426,
											"end": 2430,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2466,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2462,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2530,
											"end": 2547,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 2477,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2632,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2616,
											"end": 2632,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2616,
											"end": 2632,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 2762,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 2644,
											"end": 2762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2731,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 2749,
											"end": 2754,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2731,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 2731,
											"end": 2755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2731,
											"end": 2755,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 2731,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2726,
											"end": 2729,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2719,
											"end": 2756,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 2762,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 2762,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 2762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2990,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 2768,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2861,
											"end": 2865,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2901,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2888,
											"end": 2897,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 2902,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2876,
											"end": 2902,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2876,
											"end": 2902,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 2980,
											"end": 2981,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2978,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2965,
											"end": 2982,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 2912,
											"end": 2983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 2983,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 2912,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2990,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2990,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2990,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2990,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3122,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 2996,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3033,
											"end": 3040,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3115,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3066,
											"end": 3071,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3062,
											"end": 3116,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3051,
											"end": 3116,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3051,
											"end": 3116,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3122,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3122,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3122,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3128,
											"end": 3224,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 3128,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3165,
											"end": 3172,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 3212,
											"end": 3217,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3194,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 3194,
											"end": 3218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3194,
											"end": 3218,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 3194,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3183,
											"end": 3218,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3183,
											"end": 3218,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3128,
											"end": 3224,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3128,
											"end": 3224,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3128,
											"end": 3224,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3128,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3230,
											"end": 3352,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 3230,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 3321,
											"end": 3326,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 3303,
											"end": 3327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3296,
											"end": 3301,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3293,
											"end": 3328,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3283,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 3283,
											"end": 3346,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3342,
											"end": 3343,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3340,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3332,
											"end": 3344,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3283,
											"end": 3346,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 3283,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3230,
											"end": 3352,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3230,
											"end": 3352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3409,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3448,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3449,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3449,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3458,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 3485,
											"end": 3490,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3458,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 3458,
											"end": 3491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3458,
											"end": 3491,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 3458,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3358,
											"end": 3497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3977,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 3503,
											"end": 3977,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3577,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3585,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3625,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3607,
											"end": 3614,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3603,
											"end": 3626,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3599,
											"end": 3631,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3596,
											"end": 3715,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3596,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 3596,
											"end": 3715,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 3634,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 3634,
											"end": 3713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3713,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 3634,
											"end": 3713,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3596,
											"end": 3715,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 3596,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3754,
											"end": 3755,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 3824,
											"end": 3831,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3815,
											"end": 3821,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3804,
											"end": 3813,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3779,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 3779,
											"end": 3832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3779,
											"end": 3832,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 3779,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3769,
											"end": 3832,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3769,
											"end": 3832,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3725,
											"end": 3842,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3881,
											"end": 3883,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3907,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 3952,
											"end": 3959,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3932,
											"end": 3941,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3928,
											"end": 3950,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3907,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 3907,
											"end": 3960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3907,
											"end": 3960,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 3907,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3897,
											"end": 3960,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3897,
											"end": 3960,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3852,
											"end": 3970,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3977,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3977,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3977,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4069,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 3983,
											"end": 4069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4018,
											"end": 4025,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4062,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4051,
											"end": 4056,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4047,
											"end": 4063,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4036,
											"end": 4063,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4036,
											"end": 4063,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4069,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4069,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 4069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4187,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 4075,
											"end": 4187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 4174,
											"end": 4179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 4158,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4180,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 4158,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4153,
											"end": 4156,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4146,
											"end": 4181,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4193,
											"end": 4407,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 4193,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4282,
											"end": 4286,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4320,
											"end": 4322,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4305,
											"end": 4323,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4297,
											"end": 4323,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4297,
											"end": 4323,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4333,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 4397,
											"end": 4398,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4386,
											"end": 4395,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4382,
											"end": 4399,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4373,
											"end": 4379,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4333,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 4333,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4333,
											"end": 4400,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 4333,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4193,
											"end": 4407,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4193,
											"end": 4407,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4193,
											"end": 4407,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4193,
											"end": 4407,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4193,
											"end": 4407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4413,
											"end": 4531,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 4413,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4500,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 4518,
											"end": 4523,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4500,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 4500,
											"end": 4524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4500,
											"end": 4524,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 4500,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4495,
											"end": 4498,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4488,
											"end": 4525,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4413,
											"end": 4531,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4413,
											"end": 4531,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4413,
											"end": 4531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4759,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4537,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4668,
											"end": 4670,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4657,
											"end": 4666,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4653,
											"end": 4671,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4645,
											"end": 4671,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4645,
											"end": 4671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4681,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 4749,
											"end": 4750,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4738,
											"end": 4747,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4734,
											"end": 4751,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4725,
											"end": 4731,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4681,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 4681,
											"end": 4752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4681,
											"end": 4752,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 4681,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4759,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4759,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4759,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4759,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4765,
											"end": 4887,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 4765,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4838,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 4856,
											"end": 4861,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4838,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 4838,
											"end": 4862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4838,
											"end": 4862,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 4838,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4831,
											"end": 4836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4818,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 4818,
											"end": 4881,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4877,
											"end": 4878,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4874,
											"end": 4875,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4867,
											"end": 4879,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4818,
											"end": 4881,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 4818,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4765,
											"end": 4887,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4765,
											"end": 4887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4893,
											"end": 5032,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 4893,
											"end": 5032,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4939,
											"end": 4944,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4977,
											"end": 4983,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4964,
											"end": 4984,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4955,
											"end": 4984,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4955,
											"end": 4984,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4993,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 5020,
											"end": 5025,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4993,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 4993,
											"end": 5026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4993,
											"end": 5026,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 4993,
											"end": 5026,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4893,
											"end": 5032,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4893,
											"end": 5032,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4893,
											"end": 5032,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4893,
											"end": 5032,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4893,
											"end": 5032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5038,
											"end": 5512,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 5038,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5106,
											"end": 5112,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5114,
											"end": 5120,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5163,
											"end": 5165,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5151,
											"end": 5160,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5142,
											"end": 5149,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5138,
											"end": 5161,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5134,
											"end": 5166,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5131,
											"end": 5250,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5131,
											"end": 5250,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 5131,
											"end": 5250,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5169,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 5169,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 5169,
											"end": 5248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5169,
											"end": 5248,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 5169,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5131,
											"end": 5250,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 5131,
											"end": 5250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5289,
											"end": 5290,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 5359,
											"end": 5366,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5350,
											"end": 5356,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5339,
											"end": 5348,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5335,
											"end": 5357,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5314,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 5314,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5314,
											"end": 5367,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 5314,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5304,
											"end": 5367,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5304,
											"end": 5367,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5260,
											"end": 5377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5416,
											"end": 5418,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5442,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 5487,
											"end": 5494,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5478,
											"end": 5484,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5467,
											"end": 5476,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5463,
											"end": 5485,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5442,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 5442,
											"end": 5495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5442,
											"end": 5495,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 5442,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5432,
											"end": 5495,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5432,
											"end": 5495,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5387,
											"end": 5505,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5038,
											"end": 5512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5038,
											"end": 5512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5038,
											"end": 5512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5038,
											"end": 5512,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5038,
											"end": 5512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5038,
											"end": 5512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5518,
											"end": 5634,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 5518,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5588,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 5603,
											"end": 5608,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5588,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 5588,
											"end": 5609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5588,
											"end": 5609,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 5588,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5581,
											"end": 5586,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5578,
											"end": 5610,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5568,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 5568,
											"end": 5628,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5624,
											"end": 5625,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5621,
											"end": 5622,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5614,
											"end": 5626,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5568,
											"end": 5628,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 5568,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5518,
											"end": 5634,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5518,
											"end": 5634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5640,
											"end": 5773,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 5640,
											"end": 5773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5683,
											"end": 5688,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5721,
											"end": 5727,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5708,
											"end": 5728,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5699,
											"end": 5728,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5699,
											"end": 5728,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5737,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 5761,
											"end": 5766,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5737,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 5737,
											"end": 5767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5737,
											"end": 5767,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 5737,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5640,
											"end": 5773,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5640,
											"end": 5773,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5640,
											"end": 5773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5640,
											"end": 5773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5640,
											"end": 5773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5779,
											"end": 5897,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 5779,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5850,
											"end": 5872,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 5866,
											"end": 5871,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5850,
											"end": 5872,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 5850,
											"end": 5872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5850,
											"end": 5872,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 5850,
											"end": 5872,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5843,
											"end": 5848,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 5873,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5830,
											"end": 5891,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 5830,
											"end": 5891,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5887,
											"end": 5888,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5884,
											"end": 5885,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5877,
											"end": 5889,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5830,
											"end": 5891,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 5830,
											"end": 5891,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5779,
											"end": 5897,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5779,
											"end": 5897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 6038,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 5903,
											"end": 6038,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5947,
											"end": 5952,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5985,
											"end": 5991,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5972,
											"end": 5992,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 5992,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 5992,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6001,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 6026,
											"end": 6031,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6001,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 6001,
											"end": 6032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6001,
											"end": 6032,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 6001,
											"end": 6032,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 6038,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 6038,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 6038,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 6038,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 6038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6044,
											"end": 6945,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 6044,
											"end": 6945,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6134,
											"end": 6140,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6142,
											"end": 6148,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6150,
											"end": 6156,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6158,
											"end": 6164,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6166,
											"end": 6172,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6215,
											"end": 6218,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 6203,
											"end": 6212,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6194,
											"end": 6201,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6190,
											"end": 6213,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6186,
											"end": 6219,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6183,
											"end": 6303,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6183,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 6183,
											"end": 6303,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6222,
											"end": 6301,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 6222,
											"end": 6301,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 6222,
											"end": 6301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6222,
											"end": 6301,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 6222,
											"end": 6301,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6183,
											"end": 6303,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 6183,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6342,
											"end": 6343,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6367,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 6412,
											"end": 6419,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6403,
											"end": 6409,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6392,
											"end": 6401,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 6388,
											"end": 6410,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 6367,
											"end": 6420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6420,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 6367,
											"end": 6420,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6357,
											"end": 6420,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 6357,
											"end": 6420,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6313,
											"end": 6430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6469,
											"end": 6471,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6495,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 6537,
											"end": 6544,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6517,
											"end": 6526,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 6513,
											"end": 6535,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6495,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 6495,
											"end": 6545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6495,
											"end": 6545,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 6495,
											"end": 6545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6485,
											"end": 6545,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6485,
											"end": 6545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6440,
											"end": 6555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6594,
											"end": 6596,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6620,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 6663,
											"end": 6670,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6654,
											"end": 6660,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6643,
											"end": 6652,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 6639,
											"end": 6661,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6620,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 6620,
											"end": 6671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6620,
											"end": 6671,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 6620,
											"end": 6671,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6610,
											"end": 6671,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6610,
											"end": 6671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6565,
											"end": 6681,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6720,
											"end": 6722,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6746,
											"end": 6799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 6791,
											"end": 6798,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6771,
											"end": 6780,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 6767,
											"end": 6789,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6746,
											"end": 6799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 6746,
											"end": 6799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6746,
											"end": 6799,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 6746,
											"end": 6799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6736,
											"end": 6799,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6736,
											"end": 6799,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6691,
											"end": 6809,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6848,
											"end": 6851,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 6875,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 6920,
											"end": 6927,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6911,
											"end": 6917,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6900,
											"end": 6909,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 6896,
											"end": 6918,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6875,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 6875,
											"end": 6928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6875,
											"end": 6928,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 6875,
											"end": 6928,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6865,
											"end": 6928,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6865,
											"end": 6928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6819,
											"end": 6938,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6044,
											"end": 6945,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6044,
											"end": 6945,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 6044,
											"end": 6945,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6044,
											"end": 6945,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6044,
											"end": 6945,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 6044,
											"end": 6945,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6044,
											"end": 6945,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6044,
											"end": 6945,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6044,
											"end": 6945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6951,
											"end": 7280,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 6951,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7010,
											"end": 7016,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7059,
											"end": 7061,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7047,
											"end": 7056,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7038,
											"end": 7045,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7034,
											"end": 7057,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7030,
											"end": 7062,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7027,
											"end": 7146,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7027,
											"end": 7146,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 7027,
											"end": 7146,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7065,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 7065,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 7065,
											"end": 7144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7065,
											"end": 7144,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 7065,
											"end": 7144,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7027,
											"end": 7146,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 7027,
											"end": 7146,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7185,
											"end": 7186,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7210,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 7255,
											"end": 7262,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7246,
											"end": 7252,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7235,
											"end": 7244,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7253,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7210,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 7210,
											"end": 7263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7210,
											"end": 7263,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 7210,
											"end": 7263,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7200,
											"end": 7263,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7200,
											"end": 7263,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7156,
											"end": 7273,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6951,
											"end": 7280,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6951,
											"end": 7280,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6951,
											"end": 7280,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6951,
											"end": 7280,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6951,
											"end": 7280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7286,
											"end": 7760,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 7286,
											"end": 7760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7354,
											"end": 7360,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7362,
											"end": 7368,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7411,
											"end": 7413,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7399,
											"end": 7408,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7390,
											"end": 7397,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7386,
											"end": 7409,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7382,
											"end": 7414,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7379,
											"end": 7498,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7379,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 7379,
											"end": 7498,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7417,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 7417,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 7417,
											"end": 7496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7417,
											"end": 7496,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 7417,
											"end": 7496,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7379,
											"end": 7498,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 7379,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7537,
											"end": 7538,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7562,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 7607,
											"end": 7614,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7598,
											"end": 7604,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7587,
											"end": 7596,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7583,
											"end": 7605,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7562,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 7562,
											"end": 7615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7562,
											"end": 7615,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 7562,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7552,
											"end": 7615,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7552,
											"end": 7615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7508,
											"end": 7625,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7666,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7690,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7726,
											"end": 7732,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7715,
											"end": 7724,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7711,
											"end": 7733,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7690,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 7690,
											"end": 7743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7690,
											"end": 7743,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 7690,
											"end": 7743,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7680,
											"end": 7743,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7680,
											"end": 7743,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7635,
											"end": 7753,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7286,
											"end": 7760,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7286,
											"end": 7760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7286,
											"end": 7760,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7286,
											"end": 7760,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7286,
											"end": 7760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7286,
											"end": 7760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7766,
											"end": 8095,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 7766,
											"end": 8095,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7825,
											"end": 7831,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7874,
											"end": 7876,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7862,
											"end": 7871,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7853,
											"end": 7860,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7849,
											"end": 7872,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7845,
											"end": 7877,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7842,
											"end": 7961,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7842,
											"end": 7961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 7842,
											"end": 7961,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7880,
											"end": 7959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 7880,
											"end": 7959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 7880,
											"end": 7959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7880,
											"end": 7959,
											"name": "tag",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 7880,
											"end": 7959,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7842,
											"end": 7961,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 7842,
											"end": 7961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8000,
											"end": 8001,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8025,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 8070,
											"end": 8077,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8061,
											"end": 8067,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8050,
											"end": 8059,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8046,
											"end": 8068,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8025,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 8025,
											"end": 8078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8025,
											"end": 8078,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 8025,
											"end": 8078,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8015,
											"end": 8078,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8015,
											"end": 8078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7971,
											"end": 8088,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7766,
											"end": 8095,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7766,
											"end": 8095,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7766,
											"end": 8095,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7766,
											"end": 8095,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7766,
											"end": 8095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8101,
											"end": 8733,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 8101,
											"end": 8733,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8290,
											"end": 8294,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8328,
											"end": 8331,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 8317,
											"end": 8326,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8332,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8305,
											"end": 8332,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8305,
											"end": 8332,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8342,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 8404,
											"end": 8405,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8393,
											"end": 8402,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8389,
											"end": 8406,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8380,
											"end": 8386,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8342,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 8342,
											"end": 8407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8342,
											"end": 8407,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 8342,
											"end": 8407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8417,
											"end": 8483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 8479,
											"end": 8481,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8468,
											"end": 8477,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8464,
											"end": 8482,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8455,
											"end": 8461,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8417,
											"end": 8483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 8417,
											"end": 8483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8417,
											"end": 8483,
											"name": "tag",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 8417,
											"end": 8483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8493,
											"end": 8561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 8557,
											"end": 8559,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8546,
											"end": 8555,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8542,
											"end": 8560,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8533,
											"end": 8539,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8493,
											"end": 8561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 8493,
											"end": 8561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8493,
											"end": 8561,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 8493,
											"end": 8561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8571,
											"end": 8643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 8639,
											"end": 8641,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8628,
											"end": 8637,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8624,
											"end": 8642,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8615,
											"end": 8621,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8571,
											"end": 8643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 8571,
											"end": 8643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8571,
											"end": 8643,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 8571,
											"end": 8643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8653,
											"end": 8726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 8721,
											"end": 8724,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 8710,
											"end": 8719,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8706,
											"end": 8725,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8697,
											"end": 8703,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8653,
											"end": 8726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 8653,
											"end": 8726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8653,
											"end": 8726,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 8653,
											"end": 8726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8101,
											"end": 8733,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 8101,
											"end": 8733,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 8101,
											"end": 8733,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8101,
											"end": 8733,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8101,
											"end": 8733,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8101,
											"end": 8733,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8101,
											"end": 8733,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8101,
											"end": 8733,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8101,
											"end": 8733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8739,
											"end": 8919,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 8739,
											"end": 8919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8787,
											"end": 8864,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8784,
											"end": 8785,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8777,
											"end": 8865,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8884,
											"end": 8888,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 8881,
											"end": 8882,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8874,
											"end": 8889,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8908,
											"end": 8912,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8905,
											"end": 8906,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8898,
											"end": 8913,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8925,
											"end": 9116,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 8925,
											"end": 9116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8965,
											"end": 8968,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8984,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 9002,
											"end": 9003,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8984,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 8984,
											"end": 9004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8984,
											"end": 9004,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 8984,
											"end": 9004,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8979,
											"end": 9004,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8979,
											"end": 9004,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9018,
											"end": 9038,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 9036,
											"end": 9037,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9018,
											"end": 9038,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 9018,
											"end": 9038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9018,
											"end": 9038,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 9018,
											"end": 9038,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9013,
											"end": 9038,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9013,
											"end": 9038,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9061,
											"end": 9062,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9058,
											"end": 9059,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9054,
											"end": 9063,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9047,
											"end": 9063,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9047,
											"end": 9063,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9082,
											"end": 9085,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9079,
											"end": 9080,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9086,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9073,
											"end": 9109,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9073,
											"end": 9109,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 9073,
											"end": 9109,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9089,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 9089,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 9089,
											"end": 9107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9089,
											"end": 9107,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 9089,
											"end": 9107,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9073,
											"end": 9109,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 9073,
											"end": 9109,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8925,
											"end": 9116,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8925,
											"end": 9116,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8925,
											"end": 9116,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8925,
											"end": 9116,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8925,
											"end": 9116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9122,
											"end": 9454,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 9122,
											"end": 9454,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9243,
											"end": 9247,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9281,
											"end": 9283,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9270,
											"end": 9279,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9266,
											"end": 9284,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9258,
											"end": 9284,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9258,
											"end": 9284,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9294,
											"end": 9365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 9362,
											"end": 9363,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9351,
											"end": 9360,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9347,
											"end": 9364,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9338,
											"end": 9344,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9294,
											"end": 9365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 9294,
											"end": 9365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9294,
											"end": 9365,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 9294,
											"end": 9365,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9375,
											"end": 9447,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 9443,
											"end": 9445,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9432,
											"end": 9441,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9428,
											"end": 9446,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9419,
											"end": 9425,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9375,
											"end": 9447,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 9375,
											"end": 9447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9375,
											"end": 9447,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 9375,
											"end": 9447,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9122,
											"end": 9454,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9122,
											"end": 9454,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9122,
											"end": 9454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9122,
											"end": 9454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9122,
											"end": 9454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9122,
											"end": 9454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9460,
											"end": 9902,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 9460,
											"end": 9902,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9609,
											"end": 9613,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9647,
											"end": 9649,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9636,
											"end": 9645,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9632,
											"end": 9650,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9650,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9650,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9660,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 9728,
											"end": 9729,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9726,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9713,
											"end": 9730,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9704,
											"end": 9710,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9660,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 9660,
											"end": 9731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9660,
											"end": 9731,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 9660,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9741,
											"end": 9813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 9809,
											"end": 9811,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9798,
											"end": 9807,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9794,
											"end": 9812,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9785,
											"end": 9791,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9741,
											"end": 9813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 9741,
											"end": 9813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9741,
											"end": 9813,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 9741,
											"end": 9813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9823,
											"end": 9895,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 9891,
											"end": 9893,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9880,
											"end": 9889,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9894,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9867,
											"end": 9873,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9823,
											"end": 9895,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 9823,
											"end": 9895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9823,
											"end": 9895,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 9823,
											"end": 9895,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9460,
											"end": 9902,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 9460,
											"end": 9902,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9460,
											"end": 9902,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9460,
											"end": 9902,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9460,
											"end": 9902,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9460,
											"end": 9902,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9460,
											"end": 9902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9908,
											"end": 10047,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 9908,
											"end": 10047,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9963,
											"end": 9968,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9994,
											"end": 10000,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9988,
											"end": 10001,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9979,
											"end": 10001,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9979,
											"end": 10001,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10041,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 10035,
											"end": 10040,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10041,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 10010,
											"end": 10041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10041,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 10010,
											"end": 10041,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9908,
											"end": 10047,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9908,
											"end": 10047,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9908,
											"end": 10047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9908,
											"end": 10047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9908,
											"end": 10047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10053,
											"end": 10400,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 10053,
											"end": 10400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10121,
											"end": 10127,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10170,
											"end": 10172,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10158,
											"end": 10167,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10149,
											"end": 10156,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10145,
											"end": 10168,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10141,
											"end": 10173,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10138,
											"end": 10257,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10138,
											"end": 10257,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 10138,
											"end": 10257,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 10176,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 10176,
											"end": 10255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10255,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 10176,
											"end": 10255,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10138,
											"end": 10257,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 10138,
											"end": 10257,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10296,
											"end": 10297,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10321,
											"end": 10383,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 10375,
											"end": 10382,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10366,
											"end": 10372,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10355,
											"end": 10364,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10351,
											"end": 10373,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10321,
											"end": 10383,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 10321,
											"end": 10383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10321,
											"end": 10383,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 10321,
											"end": 10383,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10311,
											"end": 10383,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10311,
											"end": 10383,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10267,
											"end": 10393,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10053,
											"end": 10400,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10053,
											"end": 10400,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10053,
											"end": 10400,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10053,
											"end": 10400,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10053,
											"end": 10400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10406,
											"end": 10600,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 10406,
											"end": 10600,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10446,
											"end": 10450,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10466,
											"end": 10486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 10484,
											"end": 10485,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10466,
											"end": 10486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 10466,
											"end": 10486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10466,
											"end": 10486,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 10466,
											"end": 10486,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10461,
											"end": 10486,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10461,
											"end": 10486,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10500,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 10518,
											"end": 10519,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10500,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 10500,
											"end": 10520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10500,
											"end": 10520,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 10500,
											"end": 10520,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10495,
											"end": 10520,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10495,
											"end": 10520,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10544,
											"end": 10545,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10541,
											"end": 10542,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10537,
											"end": 10546,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10529,
											"end": 10546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10529,
											"end": 10546,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10568,
											"end": 10569,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10562,
											"end": 10566,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10559,
											"end": 10570,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10556,
											"end": 10593,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10556,
											"end": 10593,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 10556,
											"end": 10593,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10573,
											"end": 10591,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 10573,
											"end": 10591,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 10573,
											"end": 10591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10573,
											"end": 10591,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 10573,
											"end": 10591,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10556,
											"end": 10593,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 10556,
											"end": 10593,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10406,
											"end": 10600,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10406,
											"end": 10600,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10406,
											"end": 10600,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10406,
											"end": 10600,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10406,
											"end": 10600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10606,
											"end": 10753,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 10606,
											"end": 10753,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10744,
											"end": 10747,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10729,
											"end": 10747,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10729,
											"end": 10747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10606,
											"end": 10753,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10606,
											"end": 10753,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10606,
											"end": 10753,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10606,
											"end": 10753,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10606,
											"end": 10753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10759,
											"end": 10873,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 10759,
											"end": 10873,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10759,
											"end": 10873,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10759,
											"end": 10873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10879,
											"end": 11277,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 10879,
											"end": 11277,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11038,
											"end": 11041,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11059,
											"end": 11142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 11140,
											"end": 11141,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11135,
											"end": 11138,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11059,
											"end": 11142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 11059,
											"end": 11142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11059,
											"end": 11142,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 11059,
											"end": 11142,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11052,
											"end": 11142,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11052,
											"end": 11142,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11151,
											"end": 11244,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 11240,
											"end": 11243,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11151,
											"end": 11244,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 11151,
											"end": 11244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11151,
											"end": 11244,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 11151,
											"end": 11244,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11269,
											"end": 11270,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11264,
											"end": 11267,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11260,
											"end": 11271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11253,
											"end": 11271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11253,
											"end": 11271,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10879,
											"end": 11277,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10879,
											"end": 11277,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10879,
											"end": 11277,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10879,
											"end": 11277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11283,
											"end": 11662,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 11283,
											"end": 11662,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11467,
											"end": 11470,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11489,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 11632,
											"end": 11635,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11489,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 11489,
											"end": 11636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11489,
											"end": 11636,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 11489,
											"end": 11636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11482,
											"end": 11636,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11482,
											"end": 11636,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11653,
											"end": 11656,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11646,
											"end": 11656,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11646,
											"end": 11656,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11283,
											"end": 11662,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11283,
											"end": 11662,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11283,
											"end": 11662,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11283,
											"end": 11662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11668,
											"end": 11837,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 11668,
											"end": 11837,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11752,
											"end": 11763,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11786,
											"end": 11792,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11781,
											"end": 11784,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11774,
											"end": 11793,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11826,
											"end": 11830,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11821,
											"end": 11824,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11817,
											"end": 11831,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11802,
											"end": 11831,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11802,
											"end": 11831,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11668,
											"end": 11837,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11668,
											"end": 11837,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11668,
											"end": 11837,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11668,
											"end": 11837,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11668,
											"end": 11837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11843,
											"end": 12024,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 11843,
											"end": 12024,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11983,
											"end": 12016,
											"name": "PUSH",
											"source": 12,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 11979,
											"end": 11980,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11971,
											"end": 11977,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11967,
											"end": 11981,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11960,
											"end": 12017,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11843,
											"end": 12024,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11843,
											"end": 12024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12030,
											"end": 12396,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 12030,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12172,
											"end": 12175,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12193,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 12257,
											"end": 12259,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 12252,
											"end": 12255,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12193,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 12193,
											"end": 12260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12193,
											"end": 12260,
											"name": "tag",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 12193,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12186,
											"end": 12260,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12186,
											"end": 12260,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12269,
											"end": 12362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 12358,
											"end": 12361,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12269,
											"end": 12362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 12269,
											"end": 12362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12269,
											"end": 12362,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 12269,
											"end": 12362,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12387,
											"end": 12389,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12382,
											"end": 12385,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12378,
											"end": 12390,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12371,
											"end": 12390,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12371,
											"end": 12390,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12030,
											"end": 12396,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12030,
											"end": 12396,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12030,
											"end": 12396,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12030,
											"end": 12396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12402,
											"end": 12821,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 12402,
											"end": 12821,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12568,
											"end": 12572,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12606,
											"end": 12608,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12595,
											"end": 12604,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12591,
											"end": 12609,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12583,
											"end": 12609,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12583,
											"end": 12609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12655,
											"end": 12664,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12649,
											"end": 12653,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12645,
											"end": 12665,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12641,
											"end": 12642,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12630,
											"end": 12639,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12626,
											"end": 12643,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12619,
											"end": 12666,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12683,
											"end": 12814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 12809,
											"end": 12813,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12683,
											"end": 12814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 12683,
											"end": 12814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12683,
											"end": 12814,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 12683,
											"end": 12814,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12675,
											"end": 12814,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12675,
											"end": 12814,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12402,
											"end": 12821,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12402,
											"end": 12821,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12402,
											"end": 12821,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12402,
											"end": 12821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12827,
											"end": 12932,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 12827,
											"end": 12932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12863,
											"end": 12870,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12903,
											"end": 12925,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12896,
											"end": 12901,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12892,
											"end": 12926,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12881,
											"end": 12926,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12881,
											"end": 12926,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12827,
											"end": 12932,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12827,
											"end": 12932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12827,
											"end": 12932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12827,
											"end": 12932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12938,
											"end": 13058,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 12938,
											"end": 13058,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13010,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 13027,
											"end": 13032,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13010,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 13010,
											"end": 13033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13010,
											"end": 13033,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 13010,
											"end": 13033,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13003,
											"end": 13008,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13000,
											"end": 13034,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 12990,
											"end": 13052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 12990,
											"end": 13052,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13048,
											"end": 13049,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13045,
											"end": 13046,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13038,
											"end": 13050,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12990,
											"end": 13052,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 12990,
											"end": 13052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12938,
											"end": 13058,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12938,
											"end": 13058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13064,
											"end": 13205,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 13064,
											"end": 13205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13120,
											"end": 13125,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13151,
											"end": 13157,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13145,
											"end": 13158,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13136,
											"end": 13158,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13136,
											"end": 13158,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13167,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 13193,
											"end": 13198,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13167,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 13167,
											"end": 13199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13167,
											"end": 13199,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 13167,
											"end": 13199,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13064,
											"end": 13205,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13064,
											"end": 13205,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13064,
											"end": 13205,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13064,
											"end": 13205,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13064,
											"end": 13205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13211,
											"end": 13287,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 13211,
											"end": 13287,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13247,
											"end": 13254,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13276,
											"end": 13281,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13265,
											"end": 13281,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13265,
											"end": 13281,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13211,
											"end": 13287,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13211,
											"end": 13287,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13211,
											"end": 13287,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13211,
											"end": 13287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13293,
											"end": 13413,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 13293,
											"end": 13413,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13365,
											"end": 13388,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 13382,
											"end": 13387,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13365,
											"end": 13388,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 13365,
											"end": 13388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13365,
											"end": 13388,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 13365,
											"end": 13388,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13358,
											"end": 13363,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13355,
											"end": 13389,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 13345,
											"end": 13407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 13345,
											"end": 13407,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13403,
											"end": 13404,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13400,
											"end": 13401,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13393,
											"end": 13405,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 13345,
											"end": 13407,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 13345,
											"end": 13407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13293,
											"end": 13413,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13293,
											"end": 13413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13419,
											"end": 13560,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 13419,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13475,
											"end": 13480,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13506,
											"end": 13512,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13500,
											"end": 13513,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13491,
											"end": 13513,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13491,
											"end": 13513,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13522,
											"end": 13554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 13548,
											"end": 13553,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13522,
											"end": 13554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 13522,
											"end": 13554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13522,
											"end": 13554,
											"name": "tag",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 13522,
											"end": 13554,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13419,
											"end": 13560,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13419,
											"end": 13560,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13419,
											"end": 13560,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13419,
											"end": 13560,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13419,
											"end": 13560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13566,
											"end": 13709,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 13566,
											"end": 13709,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13623,
											"end": 13628,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13654,
											"end": 13660,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13648,
											"end": 13661,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13639,
											"end": 13661,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13639,
											"end": 13661,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13670,
											"end": 13703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 13697,
											"end": 13702,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13670,
											"end": 13703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 13670,
											"end": 13703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13670,
											"end": 13703,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 13670,
											"end": 13703,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13566,
											"end": 13709,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13566,
											"end": 13709,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13566,
											"end": 13709,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13566,
											"end": 13709,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13566,
											"end": 13709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13715,
											"end": 14686,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 13715,
											"end": 14686,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13818,
											"end": 13824,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13826,
											"end": 13832,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13834,
											"end": 13840,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13842,
											"end": 13848,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13850,
											"end": 13856,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13899,
											"end": 13902,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 13887,
											"end": 13896,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13878,
											"end": 13885,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 13874,
											"end": 13897,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13870,
											"end": 13903,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 13867,
											"end": 13987,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13867,
											"end": 13987,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 13867,
											"end": 13987,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13906,
											"end": 13985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 13906,
											"end": 13985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 13906,
											"end": 13985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13906,
											"end": 13985,
											"name": "tag",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 13906,
											"end": 13985,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13867,
											"end": 13987,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 13867,
											"end": 13987,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14026,
											"end": 14027,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14051,
											"end": 14114,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 14106,
											"end": 14113,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 14097,
											"end": 14103,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14086,
											"end": 14095,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 14082,
											"end": 14104,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14051,
											"end": 14114,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 14051,
											"end": 14114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14051,
											"end": 14114,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 14051,
											"end": 14114,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14041,
											"end": 14114,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 14041,
											"end": 14114,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13997,
											"end": 14124,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14163,
											"end": 14165,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14189,
											"end": 14252,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 14244,
											"end": 14251,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 14235,
											"end": 14241,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14224,
											"end": 14233,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 14220,
											"end": 14242,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14189,
											"end": 14252,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 14189,
											"end": 14252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14189,
											"end": 14252,
											"name": "tag",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 14189,
											"end": 14252,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14179,
											"end": 14252,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 14179,
											"end": 14252,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14134,
											"end": 14262,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14301,
											"end": 14303,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14327,
											"end": 14391,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 14383,
											"end": 14390,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 14374,
											"end": 14380,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14363,
											"end": 14372,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 14359,
											"end": 14381,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14327,
											"end": 14391,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 14327,
											"end": 14391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14327,
											"end": 14391,
											"name": "tag",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 14327,
											"end": 14391,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14317,
											"end": 14391,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 14317,
											"end": 14391,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14272,
											"end": 14401,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14440,
											"end": 14442,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 14522,
											"end": 14529,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 14513,
											"end": 14519,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14502,
											"end": 14511,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 14498,
											"end": 14520,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 14466,
											"end": 14530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "tag",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 14466,
											"end": 14530,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14456,
											"end": 14530,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14456,
											"end": 14530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14411,
											"end": 14540,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14579,
											"end": 14582,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 14606,
											"end": 14669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 14661,
											"end": 14668,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 14652,
											"end": 14658,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14641,
											"end": 14650,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 14637,
											"end": 14659,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14606,
											"end": 14669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 14606,
											"end": 14669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14606,
											"end": 14669,
											"name": "tag",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 14606,
											"end": 14669,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14596,
											"end": 14669,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14596,
											"end": 14669,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14550,
											"end": 14679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13715,
											"end": 14686,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13715,
											"end": 14686,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 13715,
											"end": 14686,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13715,
											"end": 14686,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13715,
											"end": 14686,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 13715,
											"end": 14686,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13715,
											"end": 14686,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 13715,
											"end": 14686,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13715,
											"end": 14686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14692,
											"end": 15102,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 14692,
											"end": 15102,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14732,
											"end": 14739,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 14773,
											"end": 14774,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 14755,
											"end": 14775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "tag",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14750,
											"end": 14775,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14750,
											"end": 14775,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14789,
											"end": 14809,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 14807,
											"end": 14808,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14789,
											"end": 14809,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 14789,
											"end": 14809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14789,
											"end": 14809,
											"name": "tag",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 14789,
											"end": 14809,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14784,
											"end": 14809,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14784,
											"end": 14809,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14844,
											"end": 14845,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14841,
											"end": 14842,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14837,
											"end": 14846,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 14866,
											"end": 14896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 14884,
											"end": 14895,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14866,
											"end": 14896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 14866,
											"end": 14896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14866,
											"end": 14896,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 14866,
											"end": 14896,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14855,
											"end": 14896,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14855,
											"end": 14896,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15045,
											"end": 15046,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15036,
											"end": 15043,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15032,
											"end": 15047,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 15029,
											"end": 15030,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15026,
											"end": 15048,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 15006,
											"end": 15007,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14999,
											"end": 15008,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14979,
											"end": 15062,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 14956,
											"end": 15095,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 14956,
											"end": 15095,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15075,
											"end": 15093,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 15075,
											"end": 15093,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 15075,
											"end": 15093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15075,
											"end": 15093,
											"name": "tag",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 15075,
											"end": 15093,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14956,
											"end": 15095,
											"name": "tag",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 14956,
											"end": 15095,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14740,
											"end": 15102,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14692,
											"end": 15102,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14692,
											"end": 15102,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14692,
											"end": 15102,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14692,
											"end": 15102,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14692,
											"end": 15102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15108,
											"end": 15210,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 15108,
											"end": 15210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15150,
											"end": 15158,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15197,
											"end": 15202,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15194,
											"end": 15195,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 15190,
											"end": 15203,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 15169,
											"end": 15203,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15169,
											"end": 15203,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15108,
											"end": 15210,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15108,
											"end": 15210,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15108,
											"end": 15210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15108,
											"end": 15210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15216,
											"end": 16064,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 15216,
											"end": 16064,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15277,
											"end": 15282,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15284,
											"end": 15288,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15308,
											"end": 15314,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15299,
											"end": 15314,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15299,
											"end": 15314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15332,
											"end": 15337,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15323,
											"end": 15337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15323,
											"end": 15337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15346,
											"end": 16058,
											"name": "tag",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 15346,
											"end": 16058,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15367,
											"end": 15368,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 15357,
											"end": 15365,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15354,
											"end": 15369,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15346,
											"end": 16058,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15346,
											"end": 16058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 15346,
											"end": 16058,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15462,
											"end": 15466,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15457,
											"end": 15460,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15453,
											"end": 15467,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 15447,
											"end": 15451,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15444,
											"end": 15468,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15441,
											"end": 15491,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15441,
											"end": 15491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 15441,
											"end": 15491,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15471,
											"end": 15489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 15471,
											"end": 15489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 15471,
											"end": 15489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15471,
											"end": 15489,
											"name": "tag",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 15471,
											"end": 15489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15441,
											"end": 15491,
											"name": "tag",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 15441,
											"end": 15491,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15521,
											"end": 15522,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 15511,
											"end": 15519,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15507,
											"end": 15523,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15504,
											"end": 15955,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15504,
											"end": 15955,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 15504,
											"end": 15955,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15936,
											"end": 15940,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15929,
											"end": 15934,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15925,
											"end": 15941,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 15916,
											"end": 15941,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15916,
											"end": 15941,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15504,
											"end": 15955,
											"name": "tag",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 15504,
											"end": 15955,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15986,
											"end": 15990,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15980,
											"end": 15984,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15976,
											"end": 15991,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 15968,
											"end": 15991,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15968,
											"end": 15991,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16016,
											"end": 16048,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 16039,
											"end": 16047,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16016,
											"end": 16048,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 16016,
											"end": 16048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16016,
											"end": 16048,
											"name": "tag",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 16016,
											"end": 16048,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16004,
											"end": 16048,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 16004,
											"end": 16048,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15346,
											"end": 16058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 15346,
											"end": 16058,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15346,
											"end": 16058,
											"name": "tag",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 15346,
											"end": 16058,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15216,
											"end": 16064,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 15216,
											"end": 16064,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15216,
											"end": 16064,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 15216,
											"end": 16064,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15216,
											"end": 16064,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15216,
											"end": 16064,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15216,
											"end": 16064,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15216,
											"end": 16064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16070,
											"end": 17143,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 16070,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16124,
											"end": 16129,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16315,
											"end": 16323,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16305,
											"end": 16345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 16305,
											"end": 16345,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16336,
											"end": 16337,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 16327,
											"end": 16337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16327,
											"end": 16337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16338,
											"end": 16343,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 16338,
											"end": 16343,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16305,
											"end": 16345,
											"name": "tag",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 16305,
											"end": 16345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16364,
											"end": 16368,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16354,
											"end": 16390,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 16354,
											"end": 16390,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16381,
											"end": 16382,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16372,
											"end": 16382,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16372,
											"end": 16382,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16383,
											"end": 16388,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 16383,
											"end": 16388,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16354,
											"end": 16390,
											"name": "tag",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 16354,
											"end": 16390,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16450,
											"end": 16454,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16498,
											"end": 16499,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 16493,
											"end": 16520,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16493,
											"end": 16520,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 16493,
											"end": 16520,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 16493,
											"end": 16520,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16534,
											"end": 16535,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 16529,
											"end": 16720,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16529,
											"end": 16720,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 16529,
											"end": 16720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 16529,
											"end": 16720,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16443,
											"end": 16720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 16443,
											"end": 16720,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16493,
											"end": 16520,
											"name": "tag",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 16493,
											"end": 16520,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16511,
											"end": 16512,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 16502,
											"end": 16512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16502,
											"end": 16512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16513,
											"end": 16518,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16513,
											"end": 16518,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 16513,
											"end": 16518,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16529,
											"end": 16720,
											"name": "tag",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 16529,
											"end": 16720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16574,
											"end": 16577,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 16564,
											"end": 16572,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16561,
											"end": 16578,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 16558,
											"end": 16601,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16558,
											"end": 16601,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 16558,
											"end": 16601,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16581,
											"end": 16599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 16581,
											"end": 16599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 16581,
											"end": 16599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16581,
											"end": 16599,
											"name": "tag",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 16581,
											"end": 16599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16558,
											"end": 16601,
											"name": "tag",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 16558,
											"end": 16601,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16630,
											"end": 16638,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16627,
											"end": 16628,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 16623,
											"end": 16639,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 16614,
											"end": 16639,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16614,
											"end": 16639,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16665,
											"end": 16668,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16658,
											"end": 16663,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16655,
											"end": 16669,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 16652,
											"end": 16692,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16652,
											"end": 16692,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 16652,
											"end": 16692,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 16672,
											"end": 16690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "tag",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16652,
											"end": 16692,
											"name": "tag",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 16652,
											"end": 16692,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16705,
											"end": 16710,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16705,
											"end": 16710,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 16705,
											"end": 16710,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16443,
											"end": 16720,
											"name": "tag",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 16443,
											"end": 16720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16443,
											"end": 16720,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16829,
											"end": 16831,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16819,
											"end": 16827,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16816,
											"end": 16832,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 16810,
											"end": 16813,
											"name": "PUSH",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 16804,
											"end": 16808,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16801,
											"end": 16814,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 16797,
											"end": 16833,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16779,
											"end": 16781,
											"name": "PUSH",
											"source": 12,
											"value": "4E"
										},
										{
											"begin": 16769,
											"end": 16777,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16766,
											"end": 16782,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 16761,
											"end": 16763,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 16755,
											"end": 16759,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16752,
											"end": 16764,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 16748,
											"end": 16783,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16732,
											"end": 16843,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 16729,
											"end": 16975,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16729,
											"end": 16975,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 16729,
											"end": 16975,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16885,
											"end": 16893,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16879,
											"end": 16883,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16875,
											"end": 16894,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 16866,
											"end": 16894,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16866,
											"end": 16894,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16920,
											"end": 16923,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16913,
											"end": 16918,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16910,
											"end": 16924,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 16907,
											"end": 16947,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16907,
											"end": 16947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 16907,
											"end": 16947,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16927,
											"end": 16945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 16927,
											"end": 16945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 16927,
											"end": 16945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16927,
											"end": 16945,
											"name": "tag",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 16927,
											"end": 16945,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16907,
											"end": 16947,
											"name": "tag",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 16907,
											"end": 16947,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16960,
											"end": 16965,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 16960,
											"end": 16965,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16729,
											"end": 16975,
											"name": "tag",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 16729,
											"end": 16975,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17000,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 17038,
											"end": 17041,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17028,
											"end": 17036,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17022,
											"end": 17026,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17019,
											"end": 17020,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 17000,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 17000,
											"end": 17042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17000,
											"end": 17042,
											"name": "tag",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 17000,
											"end": 17042,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16985,
											"end": 17042,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16985,
											"end": 17042,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16985,
											"end": 17042,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16985,
											"end": 17042,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17074,
											"end": 17078,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17069,
											"end": 17072,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17065,
											"end": 17079,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 17058,
											"end": 17063,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17055,
											"end": 17080,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 17052,
											"end": 17103,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17052,
											"end": 17103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 17052,
											"end": 17103,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17083,
											"end": 17101,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 17083,
											"end": 17101,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 17083,
											"end": 17101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17083,
											"end": 17101,
											"name": "tag",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 17083,
											"end": 17101,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17052,
											"end": 17103,
											"name": "tag",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 17052,
											"end": 17103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17132,
											"end": 17136,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17125,
											"end": 17130,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17121,
											"end": 17137,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 17112,
											"end": 17137,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17112,
											"end": 17137,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16070,
											"end": 17143,
											"name": "tag",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 16070,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16070,
											"end": 17143,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16070,
											"end": 17143,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16070,
											"end": 17143,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16070,
											"end": 17143,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16070,
											"end": 17143,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16070,
											"end": 17143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17149,
											"end": 17430,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 17149,
											"end": 17430,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17207,
											"end": 17212,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17231,
											"end": 17254,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 17249,
											"end": 17253,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17231,
											"end": 17254,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 17231,
											"end": 17254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17231,
											"end": 17254,
											"name": "tag",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 17231,
											"end": 17254,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17223,
											"end": 17254,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17223,
											"end": 17254,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17275,
											"end": 17300,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 17291,
											"end": 17299,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17275,
											"end": 17300,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 17275,
											"end": 17300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17275,
											"end": 17300,
											"name": "tag",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 17275,
											"end": 17300,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17263,
											"end": 17300,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17263,
											"end": 17300,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17319,
											"end": 17423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "579"
										},
										{
											"begin": 17356,
											"end": 17422,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17346,
											"end": 17354,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17340,
											"end": 17344,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17319,
											"end": 17423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 17319,
											"end": 17423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17319,
											"end": 17423,
											"name": "tag",
											"source": 12,
											"value": "579"
										},
										{
											"begin": 17319,
											"end": 17423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17310,
											"end": 17423,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17310,
											"end": 17423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17149,
											"end": 17430,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17149,
											"end": 17430,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17149,
											"end": 17430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17149,
											"end": 17430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17149,
											"end": 17430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17436,
											"end": 17616,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 17436,
											"end": 17616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17484,
											"end": 17561,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17481,
											"end": 17482,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17474,
											"end": 17562,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17581,
											"end": 17585,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 17578,
											"end": 17579,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 17571,
											"end": 17586,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17605,
											"end": 17609,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 17602,
											"end": 17603,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17595,
											"end": 17610,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17622,
											"end": 17807,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 17622,
											"end": 17807,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17662,
											"end": 17663,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17679,
											"end": 17699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 17697,
											"end": 17698,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17679,
											"end": 17699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 17679,
											"end": 17699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17679,
											"end": 17699,
											"name": "tag",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 17679,
											"end": 17699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17674,
											"end": 17699,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17674,
											"end": 17699,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17713,
											"end": 17733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 17731,
											"end": 17732,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17713,
											"end": 17733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 17713,
											"end": 17733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17713,
											"end": 17733,
											"name": "tag",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 17713,
											"end": 17733,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17708,
											"end": 17733,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17708,
											"end": 17733,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17752,
											"end": 17753,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17742,
											"end": 17777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 17742,
											"end": 17777,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17757,
											"end": 17775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 17757,
											"end": 17775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 17757,
											"end": 17775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17757,
											"end": 17775,
											"name": "tag",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 17757,
											"end": 17775,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17742,
											"end": 17777,
											"name": "tag",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 17742,
											"end": 17777,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17799,
											"end": 17800,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17796,
											"end": 17797,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17792,
											"end": 17801,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 17787,
											"end": 17801,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17787,
											"end": 17801,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17622,
											"end": 17807,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17622,
											"end": 17807,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17622,
											"end": 17807,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17622,
											"end": 17807,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17622,
											"end": 17807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17813,
											"end": 18004,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 17813,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17851,
											"end": 17855,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17871,
											"end": 17889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 17887,
											"end": 17888,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17871,
											"end": 17889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 17871,
											"end": 17889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17871,
											"end": 17889,
											"name": "tag",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 17871,
											"end": 17889,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17866,
											"end": 17889,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17866,
											"end": 17889,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17903,
											"end": 17921,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 17919,
											"end": 17920,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17903,
											"end": 17921,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 17903,
											"end": 17921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17903,
											"end": 17921,
											"name": "tag",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 17903,
											"end": 17921,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17898,
											"end": 17921,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17898,
											"end": 17921,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17945,
											"end": 17946,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17942,
											"end": 17943,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17938,
											"end": 17947,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17930,
											"end": 17947,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17930,
											"end": 17947,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17969,
											"end": 17973,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 17963,
											"end": 17967,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17960,
											"end": 17974,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 17957,
											"end": 17997,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17957,
											"end": 17997,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 17957,
											"end": 17997,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17977,
											"end": 17995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 17977,
											"end": 17995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 17977,
											"end": 17995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17977,
											"end": 17995,
											"name": "tag",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 17977,
											"end": 17995,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17957,
											"end": 17997,
											"name": "tag",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 17957,
											"end": 17997,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17813,
											"end": 18004,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17813,
											"end": 18004,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17813,
											"end": 18004,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17813,
											"end": 18004,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17813,
											"end": 18004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18010,
											"end": 18452,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 18010,
											"end": 18452,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18159,
											"end": 18163,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18197,
											"end": 18199,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 18186,
											"end": 18195,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18182,
											"end": 18200,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18174,
											"end": 18200,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18174,
											"end": 18200,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18210,
											"end": 18281,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 18278,
											"end": 18279,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18267,
											"end": 18276,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18263,
											"end": 18280,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18254,
											"end": 18260,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 18210,
											"end": 18281,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 18210,
											"end": 18281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18210,
											"end": 18281,
											"name": "tag",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 18210,
											"end": 18281,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18291,
											"end": 18363,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 18359,
											"end": 18361,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18348,
											"end": 18357,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18344,
											"end": 18362,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18335,
											"end": 18341,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18291,
											"end": 18363,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 18291,
											"end": 18363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18291,
											"end": 18363,
											"name": "tag",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 18291,
											"end": 18363,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18373,
											"end": 18445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 18441,
											"end": 18443,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18430,
											"end": 18439,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18426,
											"end": 18444,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18417,
											"end": 18423,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18373,
											"end": 18445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 18373,
											"end": 18445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18373,
											"end": 18445,
											"name": "tag",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 18373,
											"end": 18445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18010,
											"end": 18452,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 18010,
											"end": 18452,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 18010,
											"end": 18452,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18010,
											"end": 18452,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18010,
											"end": 18452,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18010,
											"end": 18452,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18010,
											"end": 18452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18458,
											"end": 18790,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 18458,
											"end": 18790,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18579,
											"end": 18583,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18617,
											"end": 18619,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18606,
											"end": 18615,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18602,
											"end": 18620,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18594,
											"end": 18620,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18594,
											"end": 18620,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18630,
											"end": 18701,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 18698,
											"end": 18699,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18687,
											"end": 18696,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18683,
											"end": 18700,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18674,
											"end": 18680,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18630,
											"end": 18701,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 18630,
											"end": 18701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18630,
											"end": 18701,
											"name": "tag",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 18630,
											"end": 18701,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18711,
											"end": 18783,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 18779,
											"end": 18781,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18768,
											"end": 18777,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18764,
											"end": 18782,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18755,
											"end": 18761,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18711,
											"end": 18783,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 18711,
											"end": 18783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18711,
											"end": 18783,
											"name": "tag",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 18711,
											"end": 18783,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18458,
											"end": 18790,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 18458,
											"end": 18790,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18458,
											"end": 18790,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18458,
											"end": 18790,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18458,
											"end": 18790,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18458,
											"end": 18790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18796,
											"end": 19128,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 18796,
											"end": 19128,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18917,
											"end": 18921,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18955,
											"end": 18957,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18944,
											"end": 18953,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18940,
											"end": 18958,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18932,
											"end": 18958,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18932,
											"end": 18958,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18968,
											"end": 19039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 19036,
											"end": 19037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19025,
											"end": 19034,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19021,
											"end": 19038,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19012,
											"end": 19018,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18968,
											"end": 19039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 18968,
											"end": 19039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18968,
											"end": 19039,
											"name": "tag",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 18968,
											"end": 19039,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19049,
											"end": 19121,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 19117,
											"end": 19119,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19106,
											"end": 19115,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19102,
											"end": 19120,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19093,
											"end": 19099,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19049,
											"end": 19121,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 19049,
											"end": 19121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19049,
											"end": 19121,
											"name": "tag",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 19049,
											"end": 19121,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18796,
											"end": 19128,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 18796,
											"end": 19128,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18796,
											"end": 19128,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18796,
											"end": 19128,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18796,
											"end": 19128,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18796,
											"end": 19128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/KipuBankV2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"NATIVE_TOKEN()": "31f7d964",
							"ROLE_ADMIN()": "d391014b",
							"USD_DECIMALS()": "2f6ee695",
							"bankCapUsd6()": "f9bda21f",
							"depositCount()": "2dfdf0b5",
							"depositEth()": "439370b1",
							"depositToken(address,uint256)": "338b5dea",
							"getBalance(address)": "f8b2cb4f",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getUsdBalance(address,address)": "dcb6e250",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setTokenConfig(address,bool,uint8,uint256,address)": "9c50adee",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenConfig(address)": "fe136c4e",
							"totalDepositedUsd6()": "29608ba6",
							"withdrawCount()": "4cc05a71",
							"withdrawEth(uint256)": "c311d049",
							"withdrawToken(address,uint256)": "9e281a98"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bankCapUsd6\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ethPriceFeed\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ethWithdrawLimit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"attempted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"CapExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EthTransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"PriceFeedNotSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PriceNegative\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"UnsupportedToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"attempted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"WithdrawLimitExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalanceToken\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountUsd6\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"supported\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isNative\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawLimit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"name\":\"TokenConfigured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalanceToken\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountUsd6\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NATIVE_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROLE_ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USD_DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bankCapUsd6\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUsdBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"supported\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"withdrawLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"name\":\"setTokenConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenConfig\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"supported\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isNative\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"withdrawLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDepositedUsd6\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Usa `AccessControl` (roles) + `ReentrancyGuard` + `SafeERC20` + or\\u00e1culos Chainlink\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_bankCapUsd6\":\"Cap global del banco en USD con 6 decimales\",\"ethPriceFeed\":\"Direcci\\u00f3n del or\\u00e1culo Chainlink ETH/USD\",\"ethWithdrawLimit\":\"L\\u00edmite por retiro en ETH (en wei)\"}},\"depositEth()\":{\"details\":\"Suma el valor en USD(6) al total y verifica que no supere el cap global\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setTokenConfig(address,bool,uint8,uint256,address)\":{\"details\":\"Solo `ROLE_ADMIN`\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"KipuBankV2 (OpenZeppelin edition)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"NATIVE_TOKEN()\":{\"notice\":\"Identificador del token nativo (ETH). Uso address(0)\"},\"ROLE_ADMIN()\":{\"notice\":\"Rol administrador. Puede configurar tokens y par\\u00e1metros\"},\"USD_DECIMALS()\":{\"notice\":\"Decimales internos de USD estilo USDC (6 decimales)\"},\"bankCapUsd6()\":{\"notice\":\"L\\u00edmite global del banco en USD (6 decimales). Inmutable\"},\"depositCount()\":{\"notice\":\"Contadores de operaciones\"},\"depositEth()\":{\"notice\":\"Deposita ETH en tu b\\u00f3veda personal\"},\"depositToken(address,uint256)\":{\"notice\":\"Deposita un token ERC-20 habilitado\"},\"getBalance(address)\":{\"notice\":\"Devuelve el saldo del remitente para un token (en unidades del token)\"},\"getUsdBalance(address,address)\":{\"notice\":\"Devuelve el saldo de un usuario en USD(6) estimado para un token\"},\"setTokenConfig(address,bool,uint8,uint256,address)\":{\"notice\":\"Agrega o actualiza un token ERC-20 soportado\"},\"tokenConfig(address)\":{\"notice\":\"Configuraci\\u00f3n por token. address(0) = ETH\"},\"totalDepositedUsd6()\":{\"notice\":\"Total acumulado en USD(6) depositado en el banco\"},\"withdrawEth(uint256)\":{\"notice\":\"Retira ETH de tu b\\u00f3veda personal.\"},\"withdrawToken(address,uint256)\":{\"notice\":\"Retira un token ERC-20   habilitado\"}},\"notice\":\"Versi\\u00f3n multi-token con control de acceso, bank cap en USD y conversi\\u00f3n de decimales\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/KipuBankV2.sol\":\"KipuBankV2\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"src/KipuBankV2.sol\":{\"keccak256\":\"0xc504d808aa6755f48b12588d8dd6dfccd029c09f5463a726ad4f561f9977c548\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21213c02d10ae6c44edbbfdd83700c2050395e2d67f4de2f7e81b51c2535e35f\",\"dweb:/ipfs/QmbSdwYRtCfGJyUXRqKE6JnMuG88seTQZdiegxMxMqQNmE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "src/KipuBankV2.sol:KipuBankV2",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							},
							{
								"astId": 480,
								"contract": "src/KipuBankV2.sol:KipuBankV2",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1221,
								"contract": "src/KipuBankV2.sol:KipuBankV2",
								"label": "totalDepositedUsd6",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1224,
								"contract": "src/KipuBankV2.sol:KipuBankV2",
								"label": "depositCount",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1226,
								"contract": "src/KipuBankV2.sol:KipuBankV2",
								"label": "withdrawCount",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1233,
								"contract": "src/KipuBankV2.sol:KipuBankV2",
								"label": "balances",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1239,
								"contract": "src/KipuBankV2.sol:KipuBankV2",
								"label": "tokenConfig",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(TokenConfig)1189_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(TokenConfig)1189_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct TokenConfig)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenConfig)1189_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "src/KipuBankV2.sol:KipuBankV2",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "src/KipuBankV2.sol:KipuBankV2",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(TokenConfig)1189_storage": {
								"encoding": "inplace",
								"label": "struct TokenConfig",
								"members": [
									{
										"astId": 1180,
										"contract": "src/KipuBankV2.sol:KipuBankV2",
										"label": "supported",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1182,
										"contract": "src/KipuBankV2.sol:KipuBankV2",
										"label": "isNative",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1184,
										"contract": "src/KipuBankV2.sol:KipuBankV2",
										"label": "tokenDecimals",
										"offset": 2,
										"slot": "0",
										"type": "t_uint8"
									},
									{
										"astId": 1186,
										"contract": "src/KipuBankV2.sol:KipuBankV2",
										"label": "withdrawLimit",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1188,
										"contract": "src/KipuBankV2.sol:KipuBankV2",
										"label": "priceFeed",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"NATIVE_TOKEN()": {
								"notice": "Identificador del token nativo (ETH). Uso address(0)"
							},
							"ROLE_ADMIN()": {
								"notice": "Rol administrador. Puede configurar tokens y parámetros"
							},
							"USD_DECIMALS()": {
								"notice": "Decimales internos de USD estilo USDC (6 decimales)"
							},
							"bankCapUsd6()": {
								"notice": "Límite global del banco en USD (6 decimales). Inmutable"
							},
							"depositCount()": {
								"notice": "Contadores de operaciones"
							},
							"depositEth()": {
								"notice": "Deposita ETH en tu bóveda personal"
							},
							"depositToken(address,uint256)": {
								"notice": "Deposita un token ERC-20 habilitado"
							},
							"getBalance(address)": {
								"notice": "Devuelve el saldo del remitente para un token (en unidades del token)"
							},
							"getUsdBalance(address,address)": {
								"notice": "Devuelve el saldo de un usuario en USD(6) estimado para un token"
							},
							"setTokenConfig(address,bool,uint8,uint256,address)": {
								"notice": "Agrega o actualiza un token ERC-20 soportado"
							},
							"tokenConfig(address)": {
								"notice": "Configuración por token. address(0) = ETH"
							},
							"totalDepositedUsd6()": {
								"notice": "Total acumulado en USD(6) depositado en el banco"
							},
							"withdrawEth(uint256)": {
								"notice": "Retira ETH de tu bóveda personal."
							},
							"withdrawToken(address,uint256)": {
								"notice": "Retira un token ERC-20   habilitado"
							}
						},
						"notice": "Versión multi-token con control de acceso, bank cap en USD y conversión de decimales",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							1106
						],
						"ERC165": [
							1130
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							1142
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 380,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 379,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 1107,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1106,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 1131,
							"src": "233:66:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1142,
										"src": "241:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 7,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1130,
										"src": "250:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nameLocations": [
											"1997:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1106,
										"src": "1997:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "IAccessControl",
										"nameLocations": [
											"2006:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 379,
										"src": "2006:14:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "2006:14:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "ERC165",
										"nameLocations": [
											"2022:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1130,
										"src": "2022:6:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "2022:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "301:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296,
								1130,
								1142,
								379,
								1106
							],
							"name": "AccessControl",
							"nameLocation": "1980:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 22,
									"members": [
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2094:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2061:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 18,
												"keyName": "account",
												"keyNameLocation": "2077:7:0",
												"keyType": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2061:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2088:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2119:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2111:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 20,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2111:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2042:8:0",
									"nodeType": "StructDefinition",
									"scope": 296,
									"src": "2035:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2183:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2141:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 26,
										"keyName": "role",
										"keyNameLocation": "2157:4:0",
										"keyType": {
											"id": 23,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2149:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2141:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 25,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 24,
												"name": "RoleData",
												"nameLocations": [
													"2165:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 22,
												"src": "2165:8:0"
											},
											"referencedDeclaration": 22,
											"src": "2165:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$22_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 30,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2220:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2196:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 28,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2196:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2241:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "2463:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 36,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "2484:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 35,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 94,
														"src": "2473:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2473:16:0"
											},
											{
												"id": 39,
												"nodeType": "PlaceholderStatement",
												"src": "2499:1:0"
											}
										]
									},
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "2252:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 41,
									"name": "onlyRole",
									"nameLocation": "2440:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2457:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2449:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:14:0"
									},
									"src": "2431:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1129
									],
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "2632:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 50,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "2649:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 52,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "2669:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 51,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2664:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2664:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$379",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2685:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2664:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2649:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 58,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "2724:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 56,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2700:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$296_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2706:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1129,
															"src": "2700:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2700:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2649:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 49,
												"id": 61,
												"nodeType": "Return",
												"src": "2642:94:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "2513:23:0",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2550:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 46,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2608:8:0"
									},
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2575:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2568:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 43,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2567:20:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2626:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 47,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2626:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:6:0"
									},
									"scope": 296,
									"src": "2541:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										346
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2913:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 73,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "2930:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 75,
															"indexExpression": {
																"id": 74,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "2937:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2930:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2943:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "2930:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 78,
													"indexExpression": {
														"id": 77,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "2951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2930:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 79,
												"nodeType": "Return",
												"src": "2923:36:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2749:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2839:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2855:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2847:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 65,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2869:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2861:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:31:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2907:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2906:6:0"
									},
									"scope": 296,
									"src": "2830:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "3231:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 88,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "3252:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 89,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "3258:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 87,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 115,
														"src": "3241:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "3241:30:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2972:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3203:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3195:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 83,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3194:14:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:0"
									},
									"scope": 296,
									"src": "3175:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "3481:124:0",
										"statements": [
											{
												"condition": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3495:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 103,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3504:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 104,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "3510:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 102,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "3496:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3496:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 113,
												"nodeType": "IfStatement",
												"src": "3491:108:0",
												"trueBody": {
													"id": 112,
													"nodeType": "Block",
													"src": "3520:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 108,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "3574:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 109,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "3583:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 107,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "3541:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3541:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 111,
															"nodeType": "RevertStatement",
															"src": "3534:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "3284:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3417:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 96,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3450:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3442:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3427:31:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3481:0:0"
									},
									"scope": 296,
									"src": "3408:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										354
									],
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "3860:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 123,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "3877:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 125,
														"indexExpression": {
															"id": 124,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3884:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3877:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$22_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3890:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 21,
													"src": "3877:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 122,
												"id": 127,
												"nodeType": "Return",
												"src": "3870:29:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "3611:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3795:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3816:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3808:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:14:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3851:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:9:0"
									},
									"scope": 296,
									"src": "3786:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										362
									],
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "4296:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 143,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4317:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 144,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 142,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "4306:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4306:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "4306:25:0"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "3912:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 138,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 137,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4276:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 140,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 136,
												"name": "onlyRole",
												"nameLocations": [
													"4267:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4267:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4267:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4211:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4221:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4243:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4235:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:31:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:0:0"
									},
									"scope": 296,
									"src": "4202:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										370
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "4713:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 162,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4735:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 163,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 161,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "4723:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4723:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "4723:26:0"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "4344:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 157,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 156,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4693:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 155,
												"name": "onlyRole",
												"nameLocations": [
													"4684:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4684:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4684:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4627:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4646:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4638:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 150,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:31:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4713:0:0"
									},
									"scope": 296,
									"src": "4618:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										378
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5383:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 175,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5397:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 176,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "5419:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5419:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5397:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 183,
												"nodeType": "IfStatement",
												"src": "5393:102:0",
												"trueBody": {
													"id": 182,
													"nodeType": "Block",
													"src": "5433:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 179,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "5454:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5454:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 181,
															"nodeType": "RevertStatement",
															"src": "5447:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "5517:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5523:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5505:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5505:37:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "4762:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5313:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5326:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5348:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5340:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:42:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:0"
									},
									"scope": 296,
									"src": "5304:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "5747:174:0",
										"statements": [
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5765:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "5757:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 198,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5757:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"arguments": [
														{
															"id": 201,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5798:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 200,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "5785:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5785:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5757:46:0"
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 204,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "5813:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 206,
															"indexExpression": {
																"id": 205,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5820:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5813:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "5813:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 208,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "5838:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5813:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "5813:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 212,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5879:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5885:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 214,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5904:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 211,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5862:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5862:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "EmitStatement",
												"src": "5857:57:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5555:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5683:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5705:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5697:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5719:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5711:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 194,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:33:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5747:0:0"
									},
									"scope": 296,
									"src": "5674:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "6238:233:0",
										"statements": [
											{
												"condition": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6252:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 229,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "6261:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 230,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "6267:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 228,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "6253:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6253:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 254,
													"nodeType": "Block",
													"src": "6428:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6449:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 227,
															"id": 253,
															"nodeType": "Return",
															"src": "6442:12:0"
														}
													]
												},
												"id": 255,
												"nodeType": "IfStatement",
												"src": "6248:217:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "6277:145:0",
													"statements": [
														{
															"expression": {
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 233,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6291:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 235,
																			"indexExpression": {
																				"id": 234,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 221,
																				"src": "6298:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6291:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6304:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6291:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 238,
																	"indexExpression": {
																		"id": 237,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6312:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6291:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6323:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6291:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 241,
															"nodeType": "ExpressionStatement",
															"src": "6291:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 243,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "6358:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 244,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6364:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 245,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1088,
																			"src": "6373:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 242,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "6346:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6346:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 248,
															"nodeType": "EmitStatement",
															"src": "6341:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6407:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 227,
															"id": 250,
															"nodeType": "Return",
															"src": "6400:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5927:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6164:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6183:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6175:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6197:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6189:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6174:31:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6232:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6232:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:6:0"
									},
									"scope": 296,
									"src": "6155:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "6792:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 268,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "6814:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 269,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "6820:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 267,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "6806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6806:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "6982:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7003:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 266,
															"id": 291,
															"nodeType": "Return",
															"src": "6996:12:0"
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "6802:217:0",
												"trueBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "6830:146:0",
													"statements": [
														{
															"expression": {
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 271,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6844:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 273,
																			"indexExpression": {
																				"id": 272,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 260,
																				"src": "6851:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6844:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 274,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6857:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6844:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 276,
																	"indexExpression": {
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6865:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6844:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6876:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6844:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "6844:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 281,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "6912:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 282,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6918:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 283,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1088,
																			"src": "6927:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6927:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 280,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "6900:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6900:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 286,
															"nodeType": "EmitStatement",
															"src": "6895:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 266,
															"id": 288,
															"nodeType": "Return",
															"src": "6954:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "6477:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6717:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6737:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6729:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6751:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6743:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:31:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6786:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6786:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6785:6:0"
									},
									"scope": 296,
									"src": "6708:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "1962:5065:0",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "108:6920:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							379
						]
					},
					"id": 380,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 379,
							"linearizedBaseContracts": [
								379
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 306,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 309,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 318,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 311,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 327,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 336,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 379,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 348,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 379,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 356,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 379,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 379,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 379,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 380,
							"src": "226:3116:1",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							461
						],
						"IERC165": [
							1142
						],
						"IERC20": [
							612
						]
					},
					"id": 462,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 381,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 383,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 462,
							"sourceUnit": 470,
							"src": "133:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 382,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 612,
										"src": "141:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 385,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 462,
							"sourceUnit": 466,
							"src": "170:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 384,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1142,
										"src": "178:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 387,
										"name": "IERC20",
										"nameLocations": [
											"590:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 612,
										"src": "590:6:2"
									},
									"id": 388,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:2"
								},
								{
									"baseName": {
										"id": 389,
										"name": "IERC165",
										"nameLocations": [
											"598:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1142,
										"src": "598:7:2"
									},
									"id": 390,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:2"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 386,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:2",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 461,
							"linearizedBaseContracts": [
								461,
								1142,
								612
							],
							"name": "IERC1363",
							"nameLocation": "578:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1548:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1560:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:2"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1593:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:2"
									},
									"scope": 461,
									"src": "1523:76:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2088:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2100:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2115:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 406,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:2"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2154:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:2"
									},
									"scope": 461,
									"src": "2063:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2653:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2667:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2679:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2712:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 421,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:2"
									},
									"scope": 461,
									"src": "2624:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3294:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3308:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3320:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3335:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 432,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:2"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3374:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 435,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:2"
									},
									"scope": 461,
									"src": "3265:115:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3805:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3822:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:2"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3855:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 445,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:2"
									},
									"scope": 461,
									"src": "3781:80:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4374:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4391:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4406:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:2"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4445:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:2"
									},
									"scope": 461,
									"src": "4350:101:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 462,
							"src": "568:3885:2",
							"usedErrors": [],
							"usedEvents": [
								546,
								555
							]
						}
					],
					"src": "107:4347:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1142
						]
					},
					"id": 466,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 463,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 465,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 466,
							"sourceUnit": 1143,
							"src": "133:59:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 464,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1142,
										"src": "141:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							612
						]
					},
					"id": 470,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 467,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 469,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 470,
							"sourceUnit": 613,
							"src": "132:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 468,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 612,
										"src": "140:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							534
						]
					},
					"id": 535,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 471,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 472,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:5",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 534,
							"linearizedBaseContracts": [
								534
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 475,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 534,
									"src": "1676:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 473,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 474,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 478,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 534,
									"src": "1723:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 476,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 477,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 480,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 534,
									"src": "1767:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 479,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "1811:39:5",
										"statements": [
											{
												"expression": {
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 483,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "1821:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 484,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "1831:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:5"
											}
										]
									},
									"id": 488,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:5"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:5"
									},
									"scope": 534,
									"src": "1797:53:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "2251:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 491,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "2261:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:5"
											},
											{
												"id": 494,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 495,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "2303:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:5"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:5",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 499,
									"name": "nonReentrant",
									"nameLocation": "2236:12:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:5"
									},
									"src": "2227:103:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "2375:248:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 503,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "2468:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 504,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "2479:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 502,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:5"
											},
											{
												"expression": {
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 509,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "2598:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 510,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "2608:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:5"
											}
										]
									},
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:5"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:5"
									},
									"scope": 534,
									"src": "2336:287:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "2667:171:5",
										"statements": [
											{
												"expression": {
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 517,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "2809:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 518,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "2819:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:5"
											}
										]
									},
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:5"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:5"
									},
									"scope": 534,
									"src": "2629:209:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "3081:43:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 528,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "3098:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 529,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "3109:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 527,
												"id": 531,
												"nodeType": "Return",
												"src": "3091:26:5"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:5",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:5"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "3075:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 525,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:5"
									},
									"scope": 534,
									"src": "3017:107:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 535,
							"src": "888:2238:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							612
						]
					},
					"id": 613,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 536,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 537,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:6",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 612,
							"linearizedBaseContracts": [
								612
							],
							"name": "IERC20",
							"nameLocation": "215:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 546,
									"name": "Transfer",
									"nameLocation": "397:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "406:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "428:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "448:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:6"
									},
									"src": "391:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 555,
									"name": "Approval",
									"nameLocation": "628:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "637:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "660:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "685:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:6"
									},
									"src": "622:78:6"
								},
								{
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 561,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:6"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "822:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:6"
									},
									"scope": 612,
									"src": "776:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "932:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:6"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "972:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:6"
									},
									"scope": 612,
									"src": "913:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 579,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "1223:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "1235:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:6"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "1268:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 576,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:6"
									},
									"scope": 612,
									"src": "1205:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 589,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "1568:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "1583:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:6"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "1623:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:6"
									},
									"scope": 612,
									"src": "1549:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 599,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "2327:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "2344:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:6"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "2377:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 596,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:6"
									},
									"scope": 612,
									"src": "2310:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "2713:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "2727:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "2739:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:6"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "2772:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 608,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:6"
									},
									"scope": 612,
									"src": "2691:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 613,
							"src": "205:2575:6",
							"usedErrors": [],
							"usedEvents": [
								546,
								555
							]
						}
					],
					"src": "106:2675:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							461
						],
						"IERC20": [
							612
						],
						"SafeERC20": [
							1076
						]
					},
					"id": 1077,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 614,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 616,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1077,
							"sourceUnit": 613,
							"src": "141:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 615,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 612,
										"src": "149:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 618,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1077,
							"sourceUnit": 462,
							"src": "179:58:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 617,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 461,
										"src": "187:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 619,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1076,
							"linearizedBaseContracts": [
								1076
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:7",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 624,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "823:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:7"
									},
									"src": "792:46:7"
								},
								{
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:7",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 633,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "959:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "976:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "1002:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:7"
									},
									"src": "920:109:7"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "1291:88:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 645,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "1321:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$612",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 648,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "1343:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$612",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 579,
																	"src": "1343:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 650,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 639,
																			"src": "1360:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 651,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 641,
																			"src": "1364:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 652,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 646,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$612",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 644,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "1301:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$612_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:7"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:7",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "1241:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$612",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 636,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 635,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 612,
														"src": "1241:6:7"
													},
													"referencedDeclaration": 612,
													"src": "1241:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$612",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "1255:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "1267:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:7"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:7"
									},
									"scope": 1076,
									"src": "1219:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "1708:98:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 671,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "1738:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$612",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 674,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "1760:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$612",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 611,
																	"src": "1760:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 676,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 663,
																			"src": "1781:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 677,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "1787:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 678,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 667,
																			"src": "1791:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 679,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 672,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$612",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 670,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "1718:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$612_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:7"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:7",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1644:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$612",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 660,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 659,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 612,
														"src": "1644:6:7"
													},
													"referencedDeclaration": 612,
													"src": "1644:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$612",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1658:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1672:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:7"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:7"
									},
									"scope": 1076,
									"src": "1618:188:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "2033:99:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 698,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "2074:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$612",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 701,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 688,
																		"src": "2096:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$612",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 579,
																	"src": "2096:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 703,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 690,
																			"src": "2113:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 704,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 692,
																			"src": "2117:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 705,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$612",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 697,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1075,
														"src": "2050:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$612_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 696,
												"id": 708,
												"nodeType": "Return",
												"src": "2043:82:7"
											}
										]
									},
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:7",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1968:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$612",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 687,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 686,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 612,
														"src": "1968:6:7"
													},
													"referencedDeclaration": 612,
													"src": "1968:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$612",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1982:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1994:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:7"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "2027:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 694,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:7"
									},
									"scope": 1076,
									"src": "1943:189:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "2381:109:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 726,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "2422:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$612",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 729,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 714,
																		"src": "2444:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$612",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 611,
																	"src": "2444:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 731,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 716,
																			"src": "2465:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 732,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 718,
																			"src": "2471:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 733,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 720,
																			"src": "2475:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 734,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 727,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$612",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 725,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1075,
														"src": "2398:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$612_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 724,
												"id": 737,
												"nodeType": "Return",
												"src": "2391:92:7"
											}
										]
									},
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:7",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "2302:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$612",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 713,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 712,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 612,
														"src": "2302:6:7"
													},
													"referencedDeclaration": 612,
													"src": "2302:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$612",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "2316:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "2330:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "2342:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:7"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "2375:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 722,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:7"
									},
									"scope": 1076,
									"src": "2273:217:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "3232:139:7",
										"statements": [
											{
												"assignments": [
													751
												],
												"declarations": [
													{
														"constant": false,
														"id": 751,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "3242:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 750,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 760,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 756,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1076",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1076",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 754,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 758,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "3296:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 752,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "3265:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$612",
																"typeString": "contract IERC20"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:7",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 589,
														"src": "3265:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 762,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "3327:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$612",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 763,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "3334:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 764,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 751,
																"src": "3343:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 765,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "3358:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$612",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 761,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "3314:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$612_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:7"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:7",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "3177:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$612",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 742,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 741,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 612,
														"src": "3177:6:7"
													},
													"referencedDeclaration": 612,
													"src": "3177:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$612",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "3191:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "3208:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:7"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:7"
									},
									"scope": 1076,
									"src": "3146:225:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "4137:370:7",
										"statements": [
											{
												"id": 811,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:7",
												"statements": [
													{
														"assignments": [
															782
														],
														"declarations": [
															{
																"constant": false,
																"id": 782,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:7",
																"nodeType": "VariableDeclaration",
																"scope": 811,
																"src": "4171:24:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 781,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 791,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 787,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1076",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1076",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 785,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 789,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "4229:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 783,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "4198:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$612",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:7",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 589,
																"src": "4198:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 792,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "4255:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 793,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 778,
																"src": "4274:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 802,
														"nodeType": "IfStatement",
														"src": "4251:160:7",
														"trueBody": {
															"id": 801,
															"nodeType": "Block",
															"src": "4293:118:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 796,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 776,
																				"src": "4351:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 797,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 782,
																				"src": "4360:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 798,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 778,
																				"src": "4378:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 795,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 633,
																			"src": "4318:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 800,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 804,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "4437:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$612",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 805,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "4444:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 806,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 782,
																		"src": "4453:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 807,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 778,
																		"src": "4472:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$612",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 803,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "4424:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$612_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 810,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:7",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "4070:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$612",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 773,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 772,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 612,
														"src": "4070:6:7"
													},
													"referencedDeclaration": 612,
													"src": "4070:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$612",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "4084:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "4101:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:7"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:7"
									},
									"scope": 1076,
									"src": "4039:468:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "5161:303:7",
										"statements": [
											{
												"assignments": [
													825
												],
												"declarations": [
													{
														"constant": false,
														"id": 825,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 859,
														"src": "5171:25:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 824,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 834,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 828,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 817,
																"src": "5214:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$612",
																	"typeString": "contract IERC20"
																}
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:7",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 599,
															"src": "5214:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 830,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "5230:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 831,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "5239:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 832,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 826,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:7",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:7"
											},
											{
												"condition": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:7",
													"subExpression": {
														"arguments": [
															{
																"id": 836,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 817,
																"src": "5286:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$612",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 837,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 825,
																"src": "5293:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$612",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 835,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "5262:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$612_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 858,
												"nodeType": "IfStatement",
												"src": "5257:201:7",
												"trueBody": {
													"id": 857,
													"nodeType": "Block",
													"src": "5308:150:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 841,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "5342:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$612",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 844,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 817,
																					"src": "5364:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$612",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 845,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:7",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 599,
																				"src": "5364:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 846,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 819,
																						"src": "5380:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 847,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 848,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 842,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:7",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$612",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 840,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1034,
																	"src": "5322:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$612_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 851,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 853,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "5427:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$612",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 854,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 825,
																		"src": "5434:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$612",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 852,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1034,
																	"src": "5407:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$612_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 856,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:7",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "5106:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$612",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 816,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 815,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 612,
														"src": "5106:6:7"
													},
													"referencedDeclaration": 612,
													"src": "5106:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$612",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "5120:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "5137:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:7"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:7"
									},
									"scope": 1076,
									"src": "5084:380:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "5911:219:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 873,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "5925:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 887,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "6034:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 888,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "6038:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 889,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 870,
																	"src": "6045:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 885,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 864,
																	"src": "6012:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$461",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:7",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 412,
																"src": "6012:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 900,
													"nodeType": "IfStatement",
													"src": "6007:117:7",
													"trueBody": {
														"id": 899,
														"nodeType": "Block",
														"src": "6052:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 895,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 864,
																					"src": "6106:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 894,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 893,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 892,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 624,
																		"src": "6073:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 898,
																"nodeType": "RevertStatement",
																"src": "6066:47:7"
															}
														]
													}
												},
												"id": 901,
												"nodeType": "IfStatement",
												"src": "5921:203:7",
												"trueBody": {
													"id": 884,
													"nodeType": "Block",
													"src": "5946:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 879,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 864,
																		"src": "5973:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 880,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 866,
																		"src": "5980:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 881,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 868,
																		"src": "5984:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 878,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "5960:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$612_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 883,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:7",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "5840:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$461",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 863,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 862,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 461,
														"src": "5840:8:7"
													},
													"referencedDeclaration": 461,
													"src": "5840:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$461",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "5856:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "5868:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "5883:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 869,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:7"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:7"
									},
									"scope": 1076,
									"src": "5808:322:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "6649:239:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 918,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 911,
																"src": "6663:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 933,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "6786:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 934,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "6792:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 935,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "6796:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 936,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "6803:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 931,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "6760:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$461",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:7",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 438,
																"src": "6760:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 947,
													"nodeType": "IfStatement",
													"src": "6755:127:7",
													"trueBody": {
														"id": 946,
														"nodeType": "Block",
														"src": "6810:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 942,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 907,
																					"src": "6864:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 941,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 940,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 939,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 624,
																		"src": "6831:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 945,
																"nodeType": "RevertStatement",
																"src": "6824:47:7"
															}
														]
													}
												},
												"id": 948,
												"nodeType": "IfStatement",
												"src": "6659:223:7",
												"trueBody": {
													"id": 930,
													"nodeType": "Block",
													"src": "6684:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 924,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 907,
																		"src": "6715:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 925,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 909,
																		"src": "6722:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 926,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 911,
																		"src": "6728:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 927,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 913,
																		"src": "6732:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 923,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "6698:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$612_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 929,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:7",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "6527:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$461",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 906,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 905,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 461,
														"src": "6527:8:7"
													},
													"referencedDeclaration": 461,
													"src": "6527:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$461",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "6551:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "6573:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "6593:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "6616:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 914,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:7"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:7"
									},
									"scope": 1076,
									"src": "6482:406:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "7655:218:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 963,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 956,
																"src": "7669:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 977,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "7777:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 978,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "7781:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 979,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "7788:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 975,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "7756:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$461",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:7",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 460,
																"src": "7756:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 990,
													"nodeType": "IfStatement",
													"src": "7751:116:7",
													"trueBody": {
														"id": 989,
														"nodeType": "Block",
														"src": "7795:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 985,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 954,
																					"src": "7849:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 984,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 983,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 982,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 624,
																		"src": "7816:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 988,
																"nodeType": "RevertStatement",
																"src": "7809:47:7"
															}
														]
													}
												},
												"id": 991,
												"nodeType": "IfStatement",
												"src": "7665:202:7",
												"trueBody": {
													"id": 974,
													"nodeType": "Block",
													"src": "7690:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 969,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "7717:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 970,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 956,
																		"src": "7724:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 971,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 958,
																		"src": "7728:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 968,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "7704:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$612_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 973,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:7",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "7584:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$461",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 953,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 952,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 461,
														"src": "7584:8:7"
													},
													"referencedDeclaration": 461,
													"src": "7584:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$461",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "7600:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "7612:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "7627:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 959,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:7"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:7"
									},
									"scope": 1076,
									"src": "7553:320:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "8440:650:7",
										"statements": [
											{
												"assignments": [
													1003
												],
												"declarations": [
													{
														"constant": false,
														"id": 1003,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1033,
														"src": "8450:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1002,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1004,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:7"
											},
											{
												"assignments": [
													1006
												],
												"declarations": [
													{
														"constant": false,
														"id": 1006,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1033,
														"src": "8478:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1005,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1007,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:7"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:7",
													"nodeType": "YulBlock",
													"src": "8532:396:7",
													"statements": [
														{
															"nativeSrc": "8546:75:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:7"
																		},
																		"nativeSrc": "8566:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:7",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:7"
																		},
																		"nativeSrc": "8583:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:7"
																		},
																		"nativeSrc": "8600:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:7"
																},
																"nativeSrc": "8561:60:7",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:7"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:7",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:7",
																"nodeType": "YulBlock",
																"src": "8682:157:7",
																"statements": [
																	{
																		"nativeSrc": "8700:22:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:7",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:7"
																			},
																			"nativeSrc": "8711:11:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:7"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:7",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:7"
																					},
																					"nativeSrc": "8762:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:7"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:7",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:7"
																			},
																			"nativeSrc": "8739:40:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:7"
																		},
																		"nativeSrc": "8739:40:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:7"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:7"
																					},
																					"nativeSrc": "8808:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:7"
																			},
																			"nativeSrc": "8796:29:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:7"
																		},
																		"nativeSrc": "8796:29:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:7"
																},
																"nativeSrc": "8666:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:7"
															},
															"nativeSrc": "8663:176:7",
															"nodeType": "YulIf",
															"src": "8663:176:7"
														},
														{
															"nativeSrc": "8852:30:7",
															"nodeType": "YulAssignment",
															"src": "8852:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:7"
																},
																"nativeSrc": "8866:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:7"
																}
															]
														},
														{
															"nativeSrc": "8895:23:7",
															"nodeType": "YulAssignment",
															"src": "8895:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:7"
																},
																"nativeSrc": "8910:8:7",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 999,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:7",
														"valueSize": 1
													},
													{
														"declaration": 999,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:7",
														"valueSize": 1
													},
													{
														"declaration": 1003,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:7",
														"valueSize": 1
													},
													{
														"declaration": 1006,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:7",
														"valueSize": 1
													},
													{
														"declaration": 997,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1008,
												"nodeType": "InlineAssembly",
												"src": "8507:421:7"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1009,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "8942:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1020,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "8994:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:7",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1014,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 997,
																			"src": "8968:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$612",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$612",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1012,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:7",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1032,
												"nodeType": "IfStatement",
												"src": "8938:146:7",
												"trueBody": {
													"id": 1031,
													"nodeType": "Block",
													"src": "9012:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1027,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 997,
																				"src": "9066:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$612",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$612",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1025,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1024,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "9033:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1030,
															"nodeType": "RevertStatement",
															"src": "9026:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "8399:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$612",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 996,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 995,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 612,
														"src": "8399:6:7"
													},
													"referencedDeclaration": 612,
													"src": "8399:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$612",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "8413:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 998,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:7"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:7"
									},
									"scope": 1076,
									"src": "8370:720:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "9681:391:7",
										"statements": [
											{
												"assignments": [
													1046
												],
												"declarations": [
													{
														"constant": false,
														"id": 1046,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1074,
														"src": "9691:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1045,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1047,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:7"
											},
											{
												"assignments": [
													1049
												],
												"declarations": [
													{
														"constant": false,
														"id": 1049,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1074,
														"src": "9713:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1048,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1050,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:7"
											},
											{
												"assignments": [
													1052
												],
												"declarations": [
													{
														"constant": false,
														"id": 1052,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1074,
														"src": "9741:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1051,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1053,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:7"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:7",
													"nodeType": "YulBlock",
													"src": "9795:174:7",
													"statements": [
														{
															"nativeSrc": "9809:71:7",
															"nodeType": "YulAssignment",
															"src": "9809:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:7"
																		},
																		"nativeSrc": "9825:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:7",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:7"
																		},
																		"nativeSrc": "9842:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:7"
																		},
																		"nativeSrc": "9859:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:7"
																},
																"nativeSrc": "9820:60:7",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:7"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:7"
																}
															]
														},
														{
															"nativeSrc": "9893:30:7",
															"nodeType": "YulAssignment",
															"src": "9893:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:7"
																},
																"nativeSrc": "9907:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:7"
																}
															]
														},
														{
															"nativeSrc": "9936:23:7",
															"nodeType": "YulAssignment",
															"src": "9936:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:7"
																},
																"nativeSrc": "9951:8:7",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1040,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:7",
														"valueSize": 1
													},
													{
														"declaration": 1040,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:7",
														"valueSize": 1
													},
													{
														"declaration": 1049,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:7",
														"valueSize": 1
													},
													{
														"declaration": 1052,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:7",
														"valueSize": 1
													},
													{
														"declaration": 1046,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:7",
														"valueSize": 1
													},
													{
														"declaration": 1038,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1054,
												"nodeType": "InlineAssembly",
												"src": "9770:199:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1055,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "9985:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1056,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1049,
																		"src": "9997:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1067,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1052,
																		"src": "10048:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:7",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1061,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1038,
																						"src": "10023:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$612",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$612",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1060,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1059,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1062,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1071,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1044,
												"id": 1073,
												"nodeType": "Return",
												"src": "9978:87:7"
											}
										]
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "9625:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$612",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1037,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1036,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 612,
														"src": "9625:6:7"
													},
													"referencedDeclaration": 612,
													"src": "9625:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$612",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "9639:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1039,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:7"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "9675:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1042,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:7"
									},
									"scope": 1076,
									"src": "9592:480:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1077,
							"src": "698:9376:7",
							"usedErrors": [
								624,
								633
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1106
						]
					},
					"id": 1107,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1078,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1079,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1106,
							"linearizedBaseContracts": [
								1106
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1084,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1083,
												"id": 1086,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1106,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1093,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1095,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1090,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1106,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1101,
												"id": 1103,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1106,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1107,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1130
						],
						"IERC165": [
							1142
						]
					},
					"id": 1131,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1108,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1110,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 1143,
							"src": "140:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1109,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1142,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1112,
										"name": "IERC165",
										"nameLocations": [
											"688:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1142,
										"src": "688:7:9"
									},
									"id": 1113,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1111,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1130,
							"linearizedBaseContracts": [
								1130,
								1142
							],
							"name": "ERC165",
							"nameLocation": "678:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1141
									],
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "812:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1121,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "829:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1123,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1142,
																	"src": "849:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1142_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1142_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1122,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "844:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "844:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1142",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "858:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "844:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "829:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1120,
												"id": 1127,
												"nodeType": "Return",
												"src": "822:47:9"
											}
										]
									},
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "702:23:9",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "739:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "764:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "757:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1115,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "757:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:20:9"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "806:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1118,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "806:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:6:9"
									},
									"scope": 1130,
									"src": "730:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1131,
							"src": "660:218:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:765:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1142
						]
					},
					"id": 1143,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1132,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1133,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1142,
							"linearizedBaseContracts": [
								1142
							],
							"name": "IERC165",
							"nameLocation": "433:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1134,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "819:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1135,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:10"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "862:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:10"
									},
									"scope": 1142,
									"src": "792:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1143,
							"src": "423:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:10"
				},
				"id": 10
			},
			"src/KipuBankV2.sol": {
				"ast": {
					"absolutePath": "src/KipuBankV2.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"AggregatorV3Interface": [
							1177
						],
						"Context": [
							1106
						],
						"ERC165": [
							1130
						],
						"IAccessControl": [
							379
						],
						"IERC1363": [
							461
						],
						"IERC165": [
							1142
						],
						"IERC20": [
							612
						],
						"IERC20Metadata": [
							1157
						],
						"KipuBankV2": [
							2059
						],
						"ReentrancyGuard": [
							534
						],
						"SafeERC20": [
							1076
						],
						"TokenConfig": [
							1189
						]
					},
					"id": 2060,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1144,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1145,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2060,
							"sourceUnit": 297,
							"src": "60:58:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2060,
							"sourceUnit": 535,
							"src": "120:62:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1147,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2060,
							"sourceUnit": 1077,
							"src": "184:65:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1148,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2060,
							"sourceUnit": 613,
							"src": "251:56:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1150,
										"name": "IERC20",
										"nameLocations": [
											"423:6:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 612,
										"src": "423:6:11"
									},
									"id": 1151,
									"nodeType": "InheritanceSpecifier",
									"src": "423:6:11"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1149,
								"nodeType": "StructuredDocumentation",
								"src": "311:84:11",
								"text": "@notice Extensión común de metadatos para leer `decimals()` en muchos ERC20."
							},
							"fullyImplemented": false,
							"id": 1157,
							"linearizedBaseContracts": [
								1157,
								612
							],
							"name": "IERC20Metadata",
							"nameLocation": "405:14:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 1156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "446:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "454:2:11"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "480:5:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1153,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "480:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "479:7:11"
									},
									"scope": 1157,
									"src": "437:50:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2060,
							"src": "395:95:11",
							"usedErrors": [],
							"usedEvents": [
								546,
								555
							]
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1158,
								"nodeType": "StructuredDocumentation",
								"src": "494:66:11",
								"text": "@dev Interfaz mínima de Chainlink AggregatorV3 (TOKEN/USD)."
							},
							"fullyImplemented": false,
							"id": 1177,
							"linearizedBaseContracts": [
								1177
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "570:21:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 1163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "608:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "616:2:11"
									},
									"returnParameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "642:5:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1160,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "642:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:7:11"
									},
									"scope": 1177,
									"src": "599:50:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 1176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "664:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "679:2:11"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "722:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "715:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1165,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "715:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "747:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "740:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1167,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "740:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "772:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "764:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "800:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "792:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "827:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "820:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1173,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "820:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "704:145:11"
									},
									"scope": 1177,
									"src": "655:195:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2060,
							"src": "560:293:11",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"canonicalName": "TokenConfig",
							"documentation": {
								"id": 1178,
								"nodeType": "StructuredDocumentation",
								"src": "857:135:11",
								"text": "@dev Estructura de configuración por token. Almacena parámetros\n      necesarios para depósitos/retiros y cálculos en USD"
							},
							"id": 1189,
							"members": [
								{
									"constant": false,
									"id": 1180,
									"mutability": "mutable",
									"name": "supported",
									"nameLocation": "1023:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 1189,
									"src": "1018:14:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1179,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1018:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1182,
									"mutability": "mutable",
									"name": "isNative",
									"nameLocation": "1092:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 1189,
									"src": "1087:13:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1181,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1087:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1184,
									"mutability": "mutable",
									"name": "tokenDecimals",
									"nameLocation": "1154:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 1189,
									"src": "1148:19:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1183,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1148:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1186,
									"mutability": "mutable",
									"name": "withdrawLimit",
									"nameLocation": "1220:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 1189,
									"src": "1212:21:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1185,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1212:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1188,
									"mutability": "mutable",
									"name": "priceFeed",
									"nameLocation": "1296:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 1189,
									"src": "1288:17:11",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1187,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1288:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "TokenConfig",
							"nameLocation": "999:11:11",
							"nodeType": "StructDefinition",
							"scope": 2060,
							"src": "992:371:11",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1191,
										"name": "AccessControl",
										"nameLocations": [
											"1630:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "1630:13:11"
									},
									"id": 1192,
									"nodeType": "InheritanceSpecifier",
									"src": "1630:13:11"
								},
								{
									"baseName": {
										"id": 1193,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1645:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 534,
										"src": "1645:15:11"
									},
									"id": 1194,
									"nodeType": "InheritanceSpecifier",
									"src": "1645:15:11"
								}
							],
							"canonicalName": "KipuBankV2",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1190,
								"nodeType": "StructuredDocumentation",
								"src": "1367:240:11",
								"text": "@title KipuBankV2 (OpenZeppelin edition)\n @notice Versión multi-token con control de acceso, bank cap en USD y conversión de decimales\n @dev Usa `AccessControl` (roles) + `ReentrancyGuard` + `SafeERC20` + oráculos Chainlink"
							},
							"fullyImplemented": true,
							"id": 2059,
							"linearizedBaseContracts": [
								2059,
								534,
								296,
								1130,
								1142,
								379,
								1106
							],
							"name": "KipuBankV2",
							"nameLocation": "1616:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1198,
									"libraryName": {
										"id": 1195,
										"name": "SafeERC20",
										"nameLocations": [
											"1674:9:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1076,
										"src": "1674:9:11"
									},
									"nodeType": "UsingForDirective",
									"src": "1668:27:11",
									"typeName": {
										"id": 1197,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1196,
											"name": "IERC20",
											"nameLocations": [
												"1688:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 612,
											"src": "1688:6:11"
										},
										"referencedDeclaration": 612,
										"src": "1688:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$612",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"documentation": {
										"id": 1199,
										"nodeType": "StructuredDocumentation",
										"src": "1888:68:11",
										"text": "@notice Rol administrador. Puede configurar tokens y parámetros"
									},
									"functionSelector": "d391014b",
									"id": 1204,
									"mutability": "constant",
									"name": "ROLE_ADMIN",
									"nameLocation": "1986:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 2059,
									"src": "1962:60:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1200,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1962:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "524f4c455f41444d494e",
												"id": 1202,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2009:12:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096",
													"typeString": "literal_string \"ROLE_ADMIN\""
												},
												"value": "ROLE_ADMIN"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096",
													"typeString": "literal_string \"ROLE_ADMIN\""
												}
											],
											"id": 1201,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1999:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1203,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1999:23:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "2031:64:11",
										"text": "@notice Identificador del token nativo (ETH). Uso address(0)"
									},
									"functionSelector": "31f7d964",
									"id": 1211,
									"mutability": "constant",
									"name": "NATIVE_TOKEN",
									"nameLocation": "2125:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 2059,
									"src": "2101:49:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1206,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2101:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30",
												"id": 1209,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2148:1:11",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 1208,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "2140:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 1207,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2140:7:11",
												"typeDescriptions": {}
											}
										},
										"id": 1210,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2140:10:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "2159:63:11",
										"text": "@notice Decimales internos de USD estilo USDC (6 decimales)"
									},
									"functionSelector": "2f6ee695",
									"id": 1215,
									"mutability": "constant",
									"name": "USD_DECIMALS",
									"nameLocation": "2250:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 2059,
									"src": "2228:38:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1213,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2228:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "36",
										"id": 1214,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2265:1:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6_by_1",
											"typeString": "int_const 6"
										},
										"value": "6"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "2456:68:11",
										"text": "@notice Límite global del banco en USD (6 decimales). Inmutable"
									},
									"functionSelector": "f9bda21f",
									"id": 1218,
									"mutability": "immutable",
									"name": "bankCapUsd6",
									"nameLocation": "2555:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2059,
									"src": "2530:36:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1217,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2530:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1219,
										"nodeType": "StructuredDocumentation",
										"src": "2575:60:11",
										"text": "@notice Total acumulado en USD(6) depositado en el banco"
									},
									"functionSelector": "29608ba6",
									"id": 1221,
									"mutability": "mutable",
									"name": "totalDepositedUsd6",
									"nameLocation": "2656:18:11",
									"nodeType": "VariableDeclaration",
									"scope": 2059,
									"src": "2641:33:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1220,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2641:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1222,
										"nodeType": "StructuredDocumentation",
										"src": "2683:37:11",
										"text": "@notice Contadores de operaciones"
									},
									"functionSelector": "2dfdf0b5",
									"id": 1224,
									"mutability": "mutable",
									"name": "depositCount",
									"nameLocation": "2741:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 2059,
									"src": "2726:27:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1223,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2726:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4cc05a71",
									"id": 1226,
									"mutability": "mutable",
									"name": "withdrawCount",
									"nameLocation": "2775:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 2059,
									"src": "2760:28:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1225,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2760:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1227,
										"nodeType": "StructuredDocumentation",
										"src": "2797:74:11",
										"text": "@notice Saldos: balances[token][usuario] en unidades nativas del token"
									},
									"id": 1233,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "2933:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 2059,
									"src": "2877:64:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1232,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1228,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2885:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2877:47:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1231,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1229,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2904:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2896:27:11",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1230,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2915:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1234,
										"nodeType": "StructuredDocumentation",
										"src": "2950:54:11",
										"text": "@notice Configuración por token. address(0) = ETH"
									},
									"functionSelector": "fe136c4e",
									"id": 1239,
									"mutability": "mutable",
									"name": "tokenConfig",
									"nameLocation": "3049:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2059,
									"src": "3010:50:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenConfig_$1189_storage_$",
										"typeString": "mapping(address => struct TokenConfig)"
									},
									"typeName": {
										"id": 1238,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1235,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3018:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3010:31:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenConfig_$1189_storage_$",
											"typeString": "mapping(address => struct TokenConfig)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1237,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1236,
												"name": "TokenConfig",
												"nameLocations": [
													"3029:11:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1189,
												"src": "3029:11:11"
											},
											"referencedDeclaration": 1189,
											"src": "3029:11:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenConfig_$1189_storage_ptr",
												"typeString": "struct TokenConfig"
											}
										}
									},
									"visibility": "public"
								},
								{
									"errorSelector": "1f2a2005",
									"id": 1241,
									"name": "ZeroAmount",
									"nameLocation": "3257:10:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3267:2:11"
									},
									"src": "3251:19:11"
								},
								{
									"errorSelector": "bf16aab6",
									"id": 1245,
									"name": "UnsupportedToken",
									"nameLocation": "3324:16:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3349:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "3341:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3341:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3340:15:11"
									},
									"src": "3318:38:11"
								},
								{
									"errorSelector": "8a7a791d",
									"id": 1249,
									"name": "PriceFeedNotSet",
									"nameLocation": "3403:15:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3427:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "3419:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3419:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3418:15:11"
									},
									"src": "3397:37:11"
								},
								{
									"errorSelector": "4fd58d4b",
									"id": 1251,
									"name": "PriceNegative",
									"nameLocation": "3475:13:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3488:2:11"
									},
									"src": "3469:22:11"
								},
								{
									"errorSelector": "f480e285",
									"id": 1257,
									"name": "CapExceeded",
									"nameLocation": "3547:11:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "attempted",
												"nameLocation": "3567:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "3559:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3559:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "3586:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "3578:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3578:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3558:32:11"
									},
									"src": "3541:50:11"
								},
								{
									"errorSelector": "016d0ef1",
									"id": 1263,
									"name": "WithdrawLimitExceeded",
									"nameLocation": "3646:21:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "attempted",
												"nameLocation": "3676:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "3668:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3668:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "limit",
												"nameLocation": "3695:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "3687:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3687:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3667:34:11"
									},
									"src": "3640:62:11"
								},
								{
									"errorSelector": "cf479181",
									"id": 1269,
									"name": "InsufficientBalance",
									"nameLocation": "3751:19:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "3779:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "3771:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3771:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "3796:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "3788:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3788:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3770:33:11"
									},
									"src": "3745:59:11"
								},
								{
									"errorSelector": "6d963f88",
									"id": 1271,
									"name": "EthTransferFailed",
									"nameLocation": "3846:17:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3863:2:11"
									},
									"src": "3840:26:11"
								},
								{
									"anonymous": false,
									"eventSelector": "ceec6d18b470b58eabbfc22b7d771c54609acb2bbe777747424f6e9a5a9d5a25",
									"id": 1285,
									"name": "TokenConfigured",
									"nameLocation": "4129:15:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4171:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "4155:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4155:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"indexed": false,
												"mutability": "mutable",
												"name": "supported",
												"nameLocation": "4192:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "4187:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4187:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"indexed": false,
												"mutability": "mutable",
												"name": "isNative",
												"nameLocation": "4217:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "4212:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4212:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenDecimals",
												"nameLocation": "4242:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "4236:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1278,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4236:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawLimit",
												"nameLocation": "4274:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "4266:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4266:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"indexed": false,
												"mutability": "mutable",
												"name": "priceFeed",
												"nameLocation": "4306:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "4298:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4298:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4144:178:11"
									},
									"src": "4123:200:11"
								},
								{
									"anonymous": false,
									"eventSelector": "4e2ca0515ed1aef1395f66b5303bb5d6f1bf9d61a353fa53f73f8ac9973fa9f6",
									"id": 1297,
									"name": "Deposit",
									"nameLocation": "4337:7:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4371:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "4355:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4355:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4403:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "4387:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4387:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "4429:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "4421:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4421:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBalanceToken",
												"nameLocation": "4459:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "4451:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4451:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountUsd6",
												"nameLocation": "4493:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "4485:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4485:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4344:166:11"
									},
									"src": "4331:180:11"
								},
								{
									"anonymous": false,
									"eventSelector": "ebff2602b3f468259e1e99f613fed6691f3a6526effe6ef3e768ba7ae7a36c4f",
									"id": 1309,
									"name": "Withdraw",
									"nameLocation": "4525:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4560:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4544:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4544:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4592:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4576:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4576:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "4618:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4610:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4610:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBalanceToken",
												"nameLocation": "4648:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4640:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountUsd6",
												"nameLocation": "4682:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4674:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4533:166:11"
									},
									"src": "4519:181:11"
								},
								{
									"body": {
										"id": 1391,
										"nodeType": "Block",
										"src": "5222:737:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1319,
														"name": "_bankCapUsd6",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1312,
														"src": "5237:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5253:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5237:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1325,
												"nodeType": "IfStatement",
												"src": "5233:42:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1322,
															"name": "ZeroAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "5263:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5263:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1324,
													"nodeType": "RevertStatement",
													"src": "5256:19:11"
												}
											},
											{
												"expression": {
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1326,
														"name": "bankCapUsd6",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "5290:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1327,
														"name": "_bankCapUsd6",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1312,
														"src": "5304:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5290:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "5290:26:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1331,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "5379:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1332,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5399:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5403:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5399:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1330,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "5368:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5368:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "5368:42:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1337,
															"name": "ROLE_ADMIN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "5492:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1338,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5504:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5508:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5504:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1336,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "5481:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5481:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1341,
												"nodeType": "ExpressionStatement",
												"src": "5481:34:11"
											},
											{
												"assignments": [
													1344
												],
												"declarations": [
													{
														"constant": false,
														"id": 1344,
														"mutability": "mutable",
														"name": "cfg",
														"nameLocation": "5629:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 1391,
														"src": "5610:22:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenConfig_$1189_memory_ptr",
															"typeString": "struct TokenConfig"
														},
														"typeName": {
															"id": 1343,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1342,
																"name": "TokenConfig",
																"nameLocations": [
																	"5610:11:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1189,
																"src": "5610:11:11"
															},
															"referencedDeclaration": 1189,
															"src": "5610:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$1189_storage_ptr",
																"typeString": "struct TokenConfig"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1345,
												"nodeType": "VariableDeclarationStatement",
												"src": "5610:22:11"
											},
											{
												"expression": {
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1346,
															"name": "cfg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "5643:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$1189_memory_ptr",
																"typeString": "struct TokenConfig memory"
															}
														},
														"id": 1348,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5647:9:11",
														"memberName": "supported",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1180,
														"src": "5643:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5659:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5643:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1351,
												"nodeType": "ExpressionStatement",
												"src": "5643:20:11"
											},
											{
												"expression": {
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1352,
															"name": "cfg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "5674:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$1189_memory_ptr",
																"typeString": "struct TokenConfig memory"
															}
														},
														"id": 1354,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5678:8:11",
														"memberName": "isNative",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1182,
														"src": "5674:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5689:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5674:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1357,
												"nodeType": "ExpressionStatement",
												"src": "5674:19:11"
											},
											{
												"expression": {
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1358,
															"name": "cfg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "5704:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$1189_memory_ptr",
																"typeString": "struct TokenConfig memory"
															}
														},
														"id": 1360,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5708:13:11",
														"memberName": "tokenDecimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1184,
														"src": "5704:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5724:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "5704:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1363,
												"nodeType": "ExpressionStatement",
												"src": "5704:22:11"
											},
											{
												"expression": {
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1364,
															"name": "cfg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "5739:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$1189_memory_ptr",
																"typeString": "struct TokenConfig memory"
															}
														},
														"id": 1366,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5743:13:11",
														"memberName": "withdrawLimit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1186,
														"src": "5739:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1367,
														"name": "ethWithdrawLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "5759:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5739:36:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1369,
												"nodeType": "ExpressionStatement",
												"src": "5739:36:11"
											},
											{
												"expression": {
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1370,
															"name": "cfg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "5786:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$1189_memory_ptr",
																"typeString": "struct TokenConfig memory"
															}
														},
														"id": 1372,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5790:9:11",
														"memberName": "priceFeed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1188,
														"src": "5786:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1373,
														"name": "ethPriceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "5802:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5786:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1375,
												"nodeType": "ExpressionStatement",
												"src": "5786:28:11"
											},
											{
												"expression": {
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1376,
															"name": "tokenConfig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "5825:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenConfig_$1189_storage_$",
																"typeString": "mapping(address => struct TokenConfig storage ref)"
															}
														},
														"id": 1378,
														"indexExpression": {
															"id": 1377,
															"name": "NATIVE_TOKEN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "5837:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5825:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenConfig_$1189_storage",
															"typeString": "struct TokenConfig storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1379,
														"name": "cfg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "5853:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenConfig_$1189_memory_ptr",
															"typeString": "struct TokenConfig memory"
														}
													},
													"src": "5825:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenConfig_$1189_storage",
														"typeString": "struct TokenConfig storage ref"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "5825:31:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1383,
															"name": "NATIVE_TOKEN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "5890:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5904:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"hexValue": "74727565",
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5910:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"hexValue": "3138",
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5916:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														{
															"id": 1387,
															"name": "ethWithdrawLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "5920:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1388,
															"name": "ethPriceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "5938:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1382,
														"name": "TokenConfigured",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "5874:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_bool_$_t_uint8_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,bool,bool,uint8,uint256,address)"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5874:77:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1390,
												"nodeType": "EmitStatement",
												"src": "5869:82:11"
											}
										]
									},
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "4894:206:11",
										"text": "@param _bankCapUsd6 Cap global del banco en USD con 6 decimales\n @param ethPriceFeed Dirección del oráculo Chainlink ETH/USD\n @param ethWithdrawLimit Límite por retiro en ETH (en wei)"
									},
									"id": 1392,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "_bankCapUsd6",
												"nameLocation": "5136:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "5128:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5128:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "ethPriceFeed",
												"nameLocation": "5167:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "5159:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5159:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "ethWithdrawLimit",
												"nameLocation": "5198:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "5190:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5190:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5117:104:11"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5222:0:11"
									},
									"scope": 2059,
									"src": "5106:853:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1405,
										"nodeType": "Block",
										"src": "6254:67:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1397,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1395,
														"src": "6269:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1398,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6279:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6269:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1403,
												"nodeType": "IfStatement",
												"src": "6265:36:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1400,
															"name": "ZeroAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "6289:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6289:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1402,
													"nodeType": "RevertStatement",
													"src": "6282:19:11"
												}
											},
											{
												"id": 1404,
												"nodeType": "PlaceholderStatement",
												"src": "6312:1:11"
											}
										]
									},
									"documentation": {
										"id": 1393,
										"nodeType": "StructuredDocumentation",
										"src": "6151:64:11",
										"text": "@notice Exige que el monto sea > 0 (para depósitos/retiros)"
									},
									"id": 1406,
									"name": "nonZero",
									"nameLocation": "6230:7:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6246:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "6238:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6238:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6237:16:11"
									},
									"src": "6221:100:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1422,
										"nodeType": "Block",
										"src": "6433:96:11",
										"statements": [
											{
												"condition": {
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6448:29:11",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 1411,
																"name": "tokenConfig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "6449:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenConfig_$1189_storage_$",
																	"typeString": "mapping(address => struct TokenConfig storage ref)"
																}
															},
															"id": 1413,
															"indexExpression": {
																"id": 1412,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "6461:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6449:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$1189_storage",
																"typeString": "struct TokenConfig storage ref"
															}
														},
														"id": 1414,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6468:9:11",
														"memberName": "supported",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1180,
														"src": "6449:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1420,
												"nodeType": "IfStatement",
												"src": "6444:65:11",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1417,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "6503:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1416,
															"name": "UnsupportedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "6486:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																"typeString": "function (address) pure returns (error)"
															}
														},
														"id": 1418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6486:23:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1419,
													"nodeType": "RevertStatement",
													"src": "6479:30:11"
												}
											},
											{
												"id": 1421,
												"nodeType": "PlaceholderStatement",
												"src": "6520:1:11"
											}
										]
									},
									"documentation": {
										"id": 1407,
										"nodeType": "StructuredDocumentation",
										"src": "6329:59:11",
										"text": "@notice Exige que el token esté soportado (habilitado)"
									},
									"id": 1423,
									"name": "tokenSupported",
									"nameLocation": "6403:14:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6426:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "6418:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6418:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6417:15:11"
									},
									"src": "6394:135:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1437,
										"nodeType": "Block",
										"src": "6654:88:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1428,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "6669:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1429,
														"name": "NATIVE_TOKEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "6678:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6669:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1435,
												"nodeType": "IfStatement",
												"src": "6665:57:11",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1432,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "6716:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1431,
															"name": "UnsupportedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "6699:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																"typeString": "function (address) pure returns (error)"
															}
														},
														"id": 1433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6699:23:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1434,
													"nodeType": "RevertStatement",
													"src": "6692:30:11"
												}
											},
											{
												"id": 1436,
												"nodeType": "PlaceholderStatement",
												"src": "6733:1:11"
											}
										]
									},
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "6537:77:11",
										"text": "@notice Exige que el token NO sea ETH (para funciones que esperan ERC-20)"
									},
									"id": 1438,
									"name": "notNative",
									"nameLocation": "6629:9:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6647:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "6639:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6639:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6638:15:11"
									},
									"src": "6620:122:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "6895:172:11",
										"statements": [
											{
												"assignments": [
													1447
												],
												"declarations": [
													{
														"constant": false,
														"id": 1447,
														"mutability": "mutable",
														"name": "cfg",
														"nameLocation": "6925:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 1464,
														"src": "6906:22:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenConfig_$1189_memory_ptr",
															"typeString": "struct TokenConfig"
														},
														"typeName": {
															"id": 1446,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1445,
																"name": "TokenConfig",
																"nameLocations": [
																	"6906:11:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1189,
																"src": "6906:11:11"
															},
															"referencedDeclaration": 1189,
															"src": "6906:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$1189_storage_ptr",
																"typeString": "struct TokenConfig"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1451,
												"initialValue": {
													"baseExpression": {
														"id": 1448,
														"name": "tokenConfig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "6931:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenConfig_$1189_storage_$",
															"typeString": "mapping(address => struct TokenConfig storage ref)"
														}
													},
													"id": 1450,
													"indexExpression": {
														"id": 1449,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "6943:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6931:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenConfig_$1189_storage",
														"typeString": "struct TokenConfig storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6906:43:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1452,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "6964:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1453,
															"name": "cfg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1447,
															"src": "6973:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$1189_memory_ptr",
																"typeString": "struct TokenConfig memory"
															}
														},
														"id": 1454,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6977:13:11",
														"memberName": "withdrawLimit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1186,
														"src": "6973:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6964:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1462,
												"nodeType": "IfStatement",
												"src": "6960:87:11",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1457,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1443,
																"src": "7021:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1458,
																	"name": "cfg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1447,
																	"src": "7029:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenConfig_$1189_memory_ptr",
																		"typeString": "struct TokenConfig memory"
																	}
																},
																"id": 1459,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7033:13:11",
																"memberName": "withdrawLimit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1186,
																"src": "7029:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1456,
															"name": "WithdrawLimitExceeded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "6999:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																"typeString": "function (uint256,uint256) pure returns (error)"
															}
														},
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6999:48:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1461,
													"nodeType": "RevertStatement",
													"src": "6992:55:11"
												}
											},
											{
												"id": 1463,
												"nodeType": "PlaceholderStatement",
												"src": "7058:1:11"
											}
										]
									},
									"documentation": {
										"id": 1439,
										"nodeType": "StructuredDocumentation",
										"src": "6750:80:11",
										"text": "@notice Exige que el retiro no supere el límite por transacción del token."
									},
									"id": 1465,
									"name": "underWithdrawLimit",
									"nameLocation": "6845:18:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6872:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "6864:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6864:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6887:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "6879:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6879:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6863:31:11"
									},
									"src": "6836:231:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1568,
										"nodeType": "Block",
										"src": "7564:1036:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1482,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "7579:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1483,
														"name": "NATIVE_TOKEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "7588:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7579:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1489,
												"nodeType": "IfStatement",
												"src": "7575:57:11",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1486,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "7626:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1485,
															"name": "UnsupportedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "7609:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																"typeString": "function (address) pure returns (error)"
															}
														},
														"id": 1487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7609:23:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1488,
													"nodeType": "RevertStatement",
													"src": "7602:30:11"
												}
											},
											{
												"assignments": [
													1492
												],
												"declarations": [
													{
														"constant": false,
														"id": 1492,
														"mutability": "mutable",
														"name": "cfg",
														"nameLocation": "7665:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 1568,
														"src": "7645:23:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenConfig_$1189_storage_ptr",
															"typeString": "struct TokenConfig"
														},
														"typeName": {
															"id": 1491,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1490,
																"name": "TokenConfig",
																"nameLocations": [
																	"7645:11:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1189,
																"src": "7645:11:11"
															},
															"referencedDeclaration": 1189,
															"src": "7645:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$1189_storage_ptr",
																"typeString": "struct TokenConfig"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1496,
												"initialValue": {
													"baseExpression": {
														"id": 1493,
														"name": "tokenConfig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "7671:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenConfig_$1189_storage_$",
															"typeString": "mapping(address => struct TokenConfig storage ref)"
														}
													},
													"id": 1495,
													"indexExpression": {
														"id": 1494,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "7683:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7671:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenConfig_$1189_storage",
														"typeString": "struct TokenConfig storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7645:44:11"
											},
											{
												"expression": {
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1497,
															"name": "cfg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "7700:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$1189_storage_ptr",
																"typeString": "struct TokenConfig storage pointer"
															}
														},
														"id": 1499,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7704:9:11",
														"memberName": "supported",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1180,
														"src": "7700:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1500,
														"name": "supported",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "7718:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7700:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1502,
												"nodeType": "ExpressionStatement",
												"src": "7700:27:11"
											},
											{
												"expression": {
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1503,
															"name": "cfg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "7738:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$1189_storage_ptr",
																"typeString": "struct TokenConfig storage pointer"
															}
														},
														"id": 1505,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7742:8:11",
														"memberName": "isNative",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1182,
														"src": "7738:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7756:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "7738:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1508,
												"nodeType": "ExpressionStatement",
												"src": "7738:23:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1509,
														"name": "tokenDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1472,
														"src": "7864:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7881:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7864:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1544,
													"nodeType": "Block",
													"src": "8255:60:11",
													"statements": [
														{
															"expression": {
																"id": 1542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1538,
																		"name": "cfg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1492,
																		"src": "8270:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenConfig_$1189_storage_ptr",
																			"typeString": "struct TokenConfig storage pointer"
																		}
																	},
																	"id": 1540,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8274:13:11",
																	"memberName": "tokenDecimals",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1184,
																	"src": "8270:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1541,
																	"name": "tokenDecimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1472,
																	"src": "8290:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "8270:33:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1543,
															"nodeType": "ExpressionStatement",
															"src": "8270:33:11"
														}
													]
												},
												"id": 1545,
												"nodeType": "IfStatement",
												"src": "7860:455:11",
												"trueBody": {
													"id": 1537,
													"nodeType": "Block",
													"src": "7884:365:11",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1526,
																		"nodeType": "Block",
																		"src": "8039:58:11",
																		"statements": [
																			{
																				"expression": {
																					"id": 1524,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 1520,
																							"name": "cfg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1492,
																							"src": "8058:3:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenConfig_$1189_storage_ptr",
																								"typeString": "struct TokenConfig storage pointer"
																							}
																						},
																						"id": 1522,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "8062:13:11",
																						"memberName": "tokenDecimals",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1184,
																						"src": "8058:17:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 1523,
																						"name": "dec",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1518,
																						"src": "8078:3:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "8058:23:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"id": 1525,
																				"nodeType": "ExpressionStatement",
																				"src": "8058:23:11"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1527,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1519,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1518,
																				"mutability": "mutable",
																				"name": "dec",
																				"nameLocation": "8034:3:11",
																				"nodeType": "VariableDeclaration",
																				"scope": 1527,
																				"src": "8028:9:11",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"typeName": {
																					"id": 1517,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "8028:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "8027:11:11"
																	},
																	"src": "8019:78:11"
																},
																{
																	"block": {
																		"id": 1534,
																		"nodeType": "Block",
																		"src": "8104:134:11",
																		"statements": [
																			{
																				"expression": {
																					"id": 1532,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 1528,
																							"name": "cfg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1492,
																							"src": "8200:3:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenConfig_$1189_storage_ptr",
																								"typeString": "struct TokenConfig storage pointer"
																							}
																						},
																						"id": 1530,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "8204:13:11",
																						"memberName": "tokenDecimals",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1184,
																						"src": "8200:17:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "3138",
																						"id": 1531,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "8220:2:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_18_by_1",
																							"typeString": "int_const 18"
																						},
																						"value": "18"
																					},
																					"src": "8200:22:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"id": 1533,
																				"nodeType": "ExpressionStatement",
																				"src": "8200:22:11"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1535,
																	"nodeType": "TryCatchClause",
																	"src": "8098:140:11"
																}
															],
															"externalCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1513,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1468,
																				"src": "8001:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1512,
																			"name": "IERC20Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "7986:14:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$1157_$",
																				"typeString": "type(contract IERC20Metadata)"
																			}
																		},
																		"id": 1514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7986:21:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Metadata_$1157",
																			"typeString": "contract IERC20Metadata"
																		}
																	},
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8008:8:11",
																	"memberName": "decimals",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1156,
																	"src": "7986:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																		"typeString": "function () view external returns (uint8)"
																	}
																},
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7986:32:11",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1536,
															"nodeType": "TryStatement",
															"src": "7982:256:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1546,
															"name": "cfg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "8327:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$1189_storage_ptr",
																"typeString": "struct TokenConfig storage pointer"
															}
														},
														"id": 1548,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8331:13:11",
														"memberName": "withdrawLimit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1186,
														"src": "8327:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1549,
														"name": "withdrawLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "8347:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8327:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1551,
												"nodeType": "ExpressionStatement",
												"src": "8327:33:11"
											},
											{
												"expression": {
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1552,
															"name": "cfg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "8371:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$1189_storage_ptr",
																"typeString": "struct TokenConfig storage pointer"
															}
														},
														"id": 1554,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8375:9:11",
														"memberName": "priceFeed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1188,
														"src": "8371:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1555,
														"name": "priceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1476,
														"src": "8391:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8371:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "8371:29:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1559,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "8448:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1560,
															"name": "supported",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "8468:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8492:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"expression": {
																"id": 1562,
																"name": "cfg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1492,
																"src": "8512:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenConfig_$1189_storage_ptr",
																	"typeString": "struct TokenConfig storage pointer"
																}
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8516:13:11",
															"memberName": "tokenDecimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1184,
															"src": "8512:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1564,
															"name": "withdrawLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "8544:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1565,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "8572:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1558,
														"name": "TokenConfigured",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "8418:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_bool_$_t_uint8_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,bool,bool,uint8,uint256,address)"
														}
													},
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8418:174:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1567,
												"nodeType": "EmitStatement",
												"src": "8413:179:11"
											}
										]
									},
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "7270:88:11",
										"text": "@notice Agrega o actualiza un token ERC-20 soportado\n @dev Solo `ROLE_ADMIN`"
									},
									"functionSelector": "9c50adee",
									"id": 1569,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1479,
													"name": "ROLE_ADMIN",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1204,
													"src": "7552:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1480,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1478,
												"name": "onlyRole",
												"nameLocations": [
													"7543:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "7543:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "7543:20:11"
										}
									],
									"name": "setTokenConfig",
									"nameLocation": "7373:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7406:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "7398:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7398:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "supported",
												"nameLocation": "7427:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "7422:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1469,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7422:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "tokenDecimals",
												"nameLocation": "7453:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "7447:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1471,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7447:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "withdrawLimit",
												"nameLocation": "7485:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "7477:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7477:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "priceFeed",
												"nameLocation": "7517:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "7509:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7509:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7387:146:11"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7564:0:11"
									},
									"scope": 2059,
									"src": "7364:1236:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1638,
										"nodeType": "Block",
										"src": "9082:550:11",
										"statements": [
											{
												"assignments": [
													1583
												],
												"declarations": [
													{
														"constant": false,
														"id": 1583,
														"mutability": "mutable",
														"name": "usd6",
														"nameLocation": "9154:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1638,
														"src": "9146:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1582,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9146:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1589,
												"initialValue": {
													"arguments": [
														{
															"id": 1585,
															"name": "NATIVE_TOKEN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "9168:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1586,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9182:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9186:5:11",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "9182:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1584,
														"name": "_toUsd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2058,
														"src": "9161:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9161:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9146:46:11"
											},
											{
												"assignments": [
													1591
												],
												"declarations": [
													{
														"constant": false,
														"id": 1591,
														"mutability": "mutable",
														"name": "attemptedUsd",
														"nameLocation": "9211:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 1638,
														"src": "9203:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1590,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9203:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1595,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1592,
														"name": "totalDepositedUsd6",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "9226:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1593,
														"name": "usd6",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "9247:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9226:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9203:48:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1596,
														"name": "attemptedUsd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1591,
														"src": "9266:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1597,
														"name": "bankCapUsd6",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "9281:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9266:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1604,
												"nodeType": "IfStatement",
												"src": "9262:77:11",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1600,
																"name": "attemptedUsd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1591,
																"src": "9313:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1601,
																"name": "bankCapUsd6",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "9327:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1599,
															"name": "CapExceeded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "9301:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																"typeString": "function (uint256,uint256) pure returns (error)"
															}
														},
														"id": 1602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9301:38:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1603,
													"nodeType": "RevertStatement",
													"src": "9294:45:11"
												}
											},
											{
												"expression": {
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1605,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "9372:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1609,
															"indexExpression": {
																"id": 1606,
																"name": "NATIVE_TOKEN",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "9381:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9372:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1610,
														"indexExpression": {
															"expression": {
																"id": 1607,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9395:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9399:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9395:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9372:34:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1611,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "9410:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9414:5:11",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "9410:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9372:47:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1614,
												"nodeType": "ExpressionStatement",
												"src": "9372:47:11"
											},
											{
												"expression": {
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1615,
														"name": "totalDepositedUsd6",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "9430:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1616,
														"name": "attemptedUsd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1591,
														"src": "9451:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9430:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1618,
												"nodeType": "ExpressionStatement",
												"src": "9430:33:11"
											},
											{
												"id": 1622,
												"nodeType": "UncheckedBlock",
												"src": "9474:29:11",
												"statements": [
													{
														"expression": {
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "9486:14:11",
															"subExpression": {
																"id": 1619,
																"name": "depositCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1224,
																"src": "9486:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1621,
														"nodeType": "ExpressionStatement",
														"src": "9486:14:11"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1624,
															"name": "NATIVE_TOKEN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "9546:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1625,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9560:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9564:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9560:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1627,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9572:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9576:5:11",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "9572:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1629,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "9583:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 1631,
																"indexExpression": {
																	"id": 1630,
																	"name": "NATIVE_TOKEN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1211,
																	"src": "9592:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9583:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1634,
															"indexExpression": {
																"expression": {
																	"id": 1632,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9606:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9610:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9606:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9583:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1635,
															"name": "usd6",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "9619:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1623,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "9538:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9538:86:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1637,
												"nodeType": "EmitStatement",
												"src": "9533:91:11"
											}
										]
									},
									"documentation": {
										"id": 1570,
										"nodeType": "StructuredDocumentation",
										"src": "8793:133:11",
										"text": "@notice Deposita ETH en tu bóveda personal\n @dev Suma el valor en USD(6) al total y verifica que no supere el cap global"
									},
									"functionSelector": "439370b1",
									"id": 1639,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1573,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1572,
												"name": "nonReentrant",
												"nameLocations": [
													"8998:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 499,
												"src": "8998:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "8998:12:11"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1575,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "9028:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9032:5:11",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "9028:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1577,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1574,
												"name": "nonZero",
												"nameLocations": [
													"9020:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1406,
												"src": "9020:7:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "9020:18:11"
										},
										{
											"arguments": [
												{
													"id": 1579,
													"name": "NATIVE_TOKEN",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1211,
													"src": "9063:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1580,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1578,
												"name": "tokenSupported",
												"nameLocations": [
													"9048:14:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1423,
												"src": "9048:14:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "9048:28:11"
										}
									],
									"name": "depositEth",
									"nameLocation": "8941:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8951:2:11"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9082:0:11"
									},
									"scope": 2059,
									"src": "8932:700:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1724,
										"nodeType": "Block",
										"src": "9873:639:11",
										"statements": [
											{
												"assignments": [
													1659
												],
												"declarations": [
													{
														"constant": false,
														"id": 1659,
														"mutability": "mutable",
														"name": "usd6",
														"nameLocation": "9945:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1724,
														"src": "9937:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1658,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9937:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1664,
												"initialValue": {
													"arguments": [
														{
															"id": 1661,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "9959:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1662,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "9966:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1660,
														"name": "_toUsd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2058,
														"src": "9952:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9952:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9937:36:11"
											},
											{
												"assignments": [
													1666
												],
												"declarations": [
													{
														"constant": false,
														"id": 1666,
														"mutability": "mutable",
														"name": "attemptedUsd",
														"nameLocation": "9992:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 1724,
														"src": "9984:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1665,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9984:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1670,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1667,
														"name": "totalDepositedUsd6",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "10007:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1668,
														"name": "usd6",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "10028:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10007:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9984:48:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1671,
														"name": "attemptedUsd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1666,
														"src": "10047:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1672,
														"name": "bankCapUsd6",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "10062:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10047:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1679,
												"nodeType": "IfStatement",
												"src": "10043:77:11",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1675,
																"name": "attemptedUsd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1666,
																"src": "10094:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1676,
																"name": "bankCapUsd6",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "10108:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1674,
															"name": "CapExceeded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "10082:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																"typeString": "function (uint256,uint256) pure returns (error)"
															}
														},
														"id": 1677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10082:38:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1678,
													"nodeType": "RevertStatement",
													"src": "10075:45:11"
												}
											},
											{
												"expression": {
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1680,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "10153:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1684,
															"indexExpression": {
																"id": 1681,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1642,
																"src": "10162:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10153:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1685,
														"indexExpression": {
															"expression": {
																"id": 1682,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10169:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10173:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10169:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10153:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1686,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1644,
														"src": "10184:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10153:37:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1688,
												"nodeType": "ExpressionStatement",
												"src": "10153:37:11"
											},
											{
												"expression": {
													"id": 1691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1689,
														"name": "totalDepositedUsd6",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "10201:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1690,
														"name": "attemptedUsd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1666,
														"src": "10222:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10201:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1692,
												"nodeType": "ExpressionStatement",
												"src": "10201:33:11"
											},
											{
												"id": 1696,
												"nodeType": "UncheckedBlock",
												"src": "10245:29:11",
												"statements": [
													{
														"expression": {
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "10257:14:11",
															"subExpression": {
																"id": 1693,
																"name": "depositCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1224,
																"src": "10257:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1695,
														"nodeType": "ExpressionStatement",
														"src": "10257:14:11"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1701,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10365:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10369:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10365:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1705,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10385:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_KipuBankV2_$2059",
																		"typeString": "contract KipuBankV2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_KipuBankV2_$2059",
																		"typeString": "contract KipuBankV2"
																	}
																],
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10377:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1703,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10377:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10377:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1707,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "10392:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1698,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "10341:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1697,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "10334:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$612_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10334:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$612",
																"typeString": "contract IERC20"
															}
														},
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10348:16:11",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 684,
														"src": "10334:30:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$612_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$612_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10334:65:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1709,
												"nodeType": "ExpressionStatement",
												"src": "10334:65:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1711,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "10443:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1712,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10450:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10454:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10450:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1714,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "10462:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1715,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "10470:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 1717,
																"indexExpression": {
																	"id": 1716,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "10479:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10470:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1720,
															"indexExpression": {
																"expression": {
																	"id": 1718,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10486:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10490:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "10486:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10470:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1721,
															"name": "usd6",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "10499:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1710,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "10435:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10435:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1723,
												"nodeType": "EmitStatement",
												"src": "10430:74:11"
											}
										]
									},
									"documentation": {
										"id": 1640,
										"nodeType": "StructuredDocumentation",
										"src": "9640:47:11",
										"text": "@notice Deposita un token ERC-20 habilitado"
									},
									"functionSelector": "338b5dea",
									"id": 1725,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1647,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1646,
												"name": "nonReentrant",
												"nameLocations": [
													"9773:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 499,
												"src": "9773:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "9773:12:11"
										},
										{
											"arguments": [
												{
													"id": 1649,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1644,
													"src": "9803:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1650,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1648,
												"name": "nonZero",
												"nameLocations": [
													"9795:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1406,
												"src": "9795:7:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "9795:15:11"
										},
										{
											"arguments": [
												{
													"id": 1652,
													"name": "token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1642,
													"src": "9830:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1653,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1651,
												"name": "notNative",
												"nameLocations": [
													"9820:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1438,
												"src": "9820:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "9820:16:11"
										},
										{
											"arguments": [
												{
													"id": 1655,
													"name": "token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1642,
													"src": "9861:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1656,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1654,
												"name": "tokenSupported",
												"nameLocations": [
													"9846:14:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1423,
												"src": "9846:14:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "9846:21:11"
										}
									],
									"name": "depositToken",
									"nameLocation": "9702:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9723:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "9715:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9738:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "9730:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9730:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9714:31:11"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9873:0:11"
									},
									"scope": 2059,
									"src": "9693:819:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1809,
										"nodeType": "Block",
										"src": "10950:565:11",
										"statements": [
											{
												"assignments": [
													1744
												],
												"declarations": [
													{
														"constant": false,
														"id": 1744,
														"mutability": "mutable",
														"name": "userBal",
														"nameLocation": "10969:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1809,
														"src": "10961:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1743,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10961:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1751,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1745,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "10979:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1747,
														"indexExpression": {
															"id": 1746,
															"name": "NATIVE_TOKEN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "10988:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10979:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1750,
													"indexExpression": {
														"expression": {
															"id": 1748,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "11002:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11006:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "11002:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10979:34:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10961:52:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1752,
														"name": "userBal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1744,
														"src": "11028:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1753,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1728,
														"src": "11038:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11028:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1760,
												"nodeType": "IfStatement",
												"src": "11024:65:11",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1756,
																"name": "userBal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "11073:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1757,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1728,
																"src": "11082:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1755,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "11053:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																"typeString": "function (uint256,uint256) pure returns (error)"
															}
														},
														"id": 1758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11053:36:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1759,
													"nodeType": "RevertStatement",
													"src": "11046:43:11"
												}
											},
											{
												"expression": {
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1761,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "11122:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1765,
															"indexExpression": {
																"id": 1762,
																"name": "NATIVE_TOKEN",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "11131:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11122:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1766,
														"indexExpression": {
															"expression": {
																"id": 1763,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11145:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11149:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11145:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11122:34:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1767,
															"name": "userBal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "11159:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1768,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "11169:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11159:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11122:53:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1771,
												"nodeType": "ExpressionStatement",
												"src": "11122:53:11"
											},
											{
												"id": 1775,
												"nodeType": "UncheckedBlock",
												"src": "11186:30:11",
												"statements": [
													{
														"expression": {
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "11198:15:11",
															"subExpression": {
																"id": 1772,
																"name": "withdrawCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "11198:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1774,
														"nodeType": "ExpressionStatement",
														"src": "11198:15:11"
													}
												]
											},
											{
												"assignments": [
													1777,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1777,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "11289:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1809,
														"src": "11284:9:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1776,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11284:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1785,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11330:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"expression": {
																	"id": 1778,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "11299:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11303:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "11299:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11310:4:11",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "11299:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1781,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1728,
																"src": "11322:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "11299:30:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11299:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11283:50:11"
											},
											{
												"condition": {
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11348:5:11",
													"subExpression": {
														"id": 1786,
														"name": "sent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "11349:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1791,
												"nodeType": "IfStatement",
												"src": "11344:37:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1788,
															"name": "EthTransferFailed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "11362:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11362:19:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1790,
													"nodeType": "RevertStatement",
													"src": "11355:26:11"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1793,
															"name": "NATIVE_TOKEN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "11408:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1794,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11422:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11426:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11422:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1796,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "11434:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1797,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "11442:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 1799,
																"indexExpression": {
																	"id": 1798,
																	"name": "NATIVE_TOKEN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1211,
																	"src": "11451:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11442:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1802,
															"indexExpression": {
																"expression": {
																	"id": 1800,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "11465:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11469:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "11465:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11442:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1804,
																	"name": "NATIVE_TOKEN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1211,
																	"src": "11485:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1805,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1728,
																	"src": "11499:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1803,
																"name": "_toUsd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2058,
																"src": "11478:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (address,uint256) view returns (uint256)"
																}
															},
															"id": 1806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11478:28:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1792,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "11399:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11399:108:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1808,
												"nodeType": "EmitStatement",
												"src": "11394:113:11"
											}
										]
									},
									"documentation": {
										"id": 1726,
										"nodeType": "StructuredDocumentation",
										"src": "10703:46:11",
										"text": "@notice Retira ETH de tu bóveda personal."
									},
									"functionSelector": "c311d049",
									"id": 1810,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1731,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1730,
												"name": "nonReentrant",
												"nameLocations": [
													"10819:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 499,
												"src": "10819:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "10819:12:11"
										},
										{
											"arguments": [
												{
													"id": 1733,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1728,
													"src": "10849:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1734,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1732,
												"name": "nonZero",
												"nameLocations": [
													"10841:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1406,
												"src": "10841:7:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "10841:15:11"
										},
										{
											"arguments": [
												{
													"id": 1736,
													"name": "NATIVE_TOKEN",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1211,
													"src": "10881:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1737,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1735,
												"name": "tokenSupported",
												"nameLocations": [
													"10866:14:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1423,
												"src": "10866:14:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "10866:28:11"
										},
										{
											"arguments": [
												{
													"id": 1739,
													"name": "NATIVE_TOKEN",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1211,
													"src": "10923:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1740,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1728,
													"src": "10937:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1741,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1738,
												"name": "underWithdrawLimit",
												"nameLocations": [
													"10904:18:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1465,
												"src": "10904:18:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "10904:40:11"
										}
									],
									"name": "withdrawEth",
									"nameLocation": "10764:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10784:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "10776:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10776:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10775:16:11"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10950:0:11"
									},
									"scope": 2059,
									"src": "10755:760:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1892,
										"nodeType": "Block",
										"src": "11800:472:11",
										"statements": [
											{
												"assignments": [
													1834
												],
												"declarations": [
													{
														"constant": false,
														"id": 1834,
														"mutability": "mutable",
														"name": "userBal",
														"nameLocation": "11819:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1892,
														"src": "11811:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1833,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11811:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1841,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1835,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "11829:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1837,
														"indexExpression": {
															"id": 1836,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "11838:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11829:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1840,
													"indexExpression": {
														"expression": {
															"id": 1838,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "11845:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11849:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "11845:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11829:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11811:45:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1842,
														"name": "userBal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1834,
														"src": "11871:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1843,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1815,
														"src": "11881:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11871:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1850,
												"nodeType": "IfStatement",
												"src": "11867:65:11",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1846,
																"name": "userBal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "11916:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1847,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1815,
																"src": "11925:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1845,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "11896:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																"typeString": "function (uint256,uint256) pure returns (error)"
															}
														},
														"id": 1848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11896:36:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1849,
													"nodeType": "RevertStatement",
													"src": "11889:43:11"
												}
											},
											{
												"expression": {
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1851,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "11965:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1855,
															"indexExpression": {
																"id": 1852,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "11974:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11965:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1856,
														"indexExpression": {
															"expression": {
																"id": 1853,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11981:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11985:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11981:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11965:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1857,
															"name": "userBal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "11995:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1858,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1815,
															"src": "12005:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11995:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11965:46:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1861,
												"nodeType": "ExpressionStatement",
												"src": "11965:46:11"
											},
											{
												"id": 1865,
												"nodeType": "UncheckedBlock",
												"src": "12022:30:11",
												"statements": [
													{
														"expression": {
															"id": 1863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "12034:15:11",
															"subExpression": {
																"id": 1862,
																"name": "withdrawCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "12034:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1864,
														"nodeType": "ExpressionStatement",
														"src": "12034:15:11"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1870,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12140:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12144:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12140:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1872,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1815,
															"src": "12152:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1867,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "12120:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1866,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "12113:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$612_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12113:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$612",
																"typeString": "contract IERC20"
															}
														},
														"id": 1869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12127:12:11",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 657,
														"src": "12113:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$612_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$612_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12113:46:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1874,
												"nodeType": "ExpressionStatement",
												"src": "12113:46:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1876,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "12186:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1877,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12193:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12197:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12193:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1879,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1815,
															"src": "12205:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1880,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "12213:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 1882,
																"indexExpression": {
																	"id": 1881,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "12222:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12213:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1885,
															"indexExpression": {
																"expression": {
																	"id": 1883,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "12229:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12233:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "12229:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12213:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1887,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "12249:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1888,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1815,
																	"src": "12256:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1886,
																"name": "_toUsd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2058,
																"src": "12242:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (address,uint256) view returns (uint256)"
																}
															},
															"id": 1889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12242:21:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1875,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "12177:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12177:87:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1891,
												"nodeType": "EmitStatement",
												"src": "12172:92:11"
											}
										]
									},
									"documentation": {
										"id": 1811,
										"nodeType": "StructuredDocumentation",
										"src": "11523:47:11",
										"text": "@notice Retira un token ERC-20   habilitado"
									},
									"functionSelector": "9e281a98",
									"id": 1893,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1818,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1817,
												"name": "nonReentrant",
												"nameLocations": [
													"11657:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 499,
												"src": "11657:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "11657:12:11"
										},
										{
											"arguments": [
												{
													"id": 1820,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1815,
													"src": "11687:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1821,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1819,
												"name": "nonZero",
												"nameLocations": [
													"11679:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1406,
												"src": "11679:7:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "11679:15:11"
										},
										{
											"arguments": [
												{
													"id": 1823,
													"name": "token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1813,
													"src": "11714:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1824,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1822,
												"name": "notNative",
												"nameLocations": [
													"11704:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1438,
												"src": "11704:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "11704:16:11"
										},
										{
											"arguments": [
												{
													"id": 1826,
													"name": "token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1813,
													"src": "11745:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1827,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1825,
												"name": "tokenSupported",
												"nameLocations": [
													"11730:14:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1423,
												"src": "11730:14:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "11730:21:11"
										},
										{
											"arguments": [
												{
													"id": 1829,
													"name": "token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1813,
													"src": "11780:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1830,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1815,
													"src": "11787:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1831,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1828,
												"name": "underWithdrawLimit",
												"nameLocations": [
													"11761:18:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1465,
												"src": "11761:18:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "11761:33:11"
										}
									],
									"name": "withdrawToken",
									"nameLocation": "11585:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "11607:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "11599:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11599:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11622:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "11614:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11614:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11598:31:11"
									},
									"returnParameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11800:0:11"
									},
									"scope": 2059,
									"src": "11576:696:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1908,
										"nodeType": "Block",
										"src": "12618:53:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1901,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "12636:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1903,
														"indexExpression": {
															"id": 1902,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "12645:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12636:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1906,
													"indexExpression": {
														"expression": {
															"id": 1904,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "12652:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12656:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "12652:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12636:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1900,
												"id": 1907,
												"nodeType": "Return",
												"src": "12629:34:11"
											}
										]
									},
									"documentation": {
										"id": 1894,
										"nodeType": "StructuredDocumentation",
										"src": "12464:81:11",
										"text": "@notice Devuelve el saldo del remitente para un token (en unidades del token)"
									},
									"functionSelector": "f8b2cb4f",
									"id": 1909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "12560:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "12579:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "12571:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12571:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12570:15:11"
									},
									"returnParameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "12609:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12609:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12608:9:11"
									},
									"scope": 2059,
									"src": "12551:120:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1932,
										"nodeType": "Block",
										"src": "12845:90:11",
										"statements": [
											{
												"assignments": [
													1920
												],
												"declarations": [
													{
														"constant": false,
														"id": 1920,
														"mutability": "mutable",
														"name": "amt",
														"nameLocation": "12864:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 1932,
														"src": "12856:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1919,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12856:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1926,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1921,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "12870:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1923,
														"indexExpression": {
															"id": 1922,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1912,
															"src": "12879:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12870:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1925,
													"indexExpression": {
														"id": 1924,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1914,
														"src": "12886:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12870:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12856:35:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1928,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1912,
															"src": "12916:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1929,
															"name": "amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1920,
															"src": "12923:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1927,
														"name": "_toUsd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2058,
														"src": "12909:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12909:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1918,
												"id": 1931,
												"nodeType": "Return",
												"src": "12902:25:11"
											}
										]
									},
									"documentation": {
										"id": 1910,
										"nodeType": "StructuredDocumentation",
										"src": "12679:76:11",
										"text": "@notice Devuelve el saldo de un usuario en USD(6) estimado para un token"
									},
									"functionSelector": "dcb6e250",
									"id": 1933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUsdBalance",
									"nameLocation": "12770:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "12792:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "12784:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12784:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "12807:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "12799:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12799:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12783:29:11"
									},
									"returnParameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "12836:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12836:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12835:9:11"
									},
									"scope": 2059,
									"src": "12761:174:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2057,
										"nodeType": "Block",
										"src": "13302:1111:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1943,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "13317:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1944,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13327:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13317:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1948,
												"nodeType": "IfStatement",
												"src": "13313:25:11",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1946,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13337:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1942,
													"id": 1947,
													"nodeType": "Return",
													"src": "13330:8:11"
												}
											},
											{
												"assignments": [
													1951
												],
												"declarations": [
													{
														"constant": false,
														"id": 1951,
														"mutability": "mutable",
														"name": "cfg",
														"nameLocation": "13368:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 2057,
														"src": "13349:22:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenConfig_$1189_memory_ptr",
															"typeString": "struct TokenConfig"
														},
														"typeName": {
															"id": 1950,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1949,
																"name": "TokenConfig",
																"nameLocations": [
																	"13349:11:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1189,
																"src": "13349:11:11"
															},
															"referencedDeclaration": 1189,
															"src": "13349:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$1189_storage_ptr",
																"typeString": "struct TokenConfig"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1955,
												"initialValue": {
													"baseExpression": {
														"id": 1952,
														"name": "tokenConfig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "13374:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenConfig_$1189_storage_$",
															"typeString": "mapping(address => struct TokenConfig storage ref)"
														}
													},
													"id": 1954,
													"indexExpression": {
														"id": 1953,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1936,
														"src": "13386:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13374:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenConfig_$1189_storage",
														"typeString": "struct TokenConfig storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13349:43:11"
											},
											{
												"assignments": [
													1957
												],
												"declarations": [
													{
														"constant": false,
														"id": 1957,
														"mutability": "mutable",
														"name": "feed",
														"nameLocation": "13411:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 2057,
														"src": "13403:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1956,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13403:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1960,
												"initialValue": {
													"expression": {
														"id": 1958,
														"name": "cfg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1951,
														"src": "13418:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenConfig_$1189_memory_ptr",
															"typeString": "struct TokenConfig memory"
														}
													},
													"id": 1959,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "13422:9:11",
													"memberName": "priceFeed",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1188,
													"src": "13418:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13403:28:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1961,
														"name": "feed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1957,
														"src": "13446:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13462:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13454:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1962,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13454:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13454:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13446:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1971,
												"nodeType": "IfStatement",
												"src": "13442:53:11",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1968,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1936,
																"src": "13489:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1967,
															"name": "PriceFeedNotSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "13473:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																"typeString": "function (address) pure returns (error)"
															}
														},
														"id": 1969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13473:22:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1970,
													"nodeType": "RevertStatement",
													"src": "13466:29:11"
												}
											},
											{
												"assignments": [
													null,
													1973,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1973,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "13555:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2057,
														"src": "13548:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1972,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "13548:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1979,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1975,
																	"name": "feed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1957,
																	"src": "13590:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1974,
																"name": "AggregatorV3Interface",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "13568:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1177_$",
																	"typeString": "type(contract AggregatorV3Interface)"
																}
															},
															"id": 1976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13568:27:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$1177",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13596:15:11",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1176,
														"src": "13568:43:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13568:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13545:68:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1980,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1973,
														"src": "13628:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1981,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13637:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13628:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1986,
												"nodeType": "IfStatement",
												"src": "13624:38:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1983,
															"name": "PriceNegative",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "13647:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13647:15:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1985,
													"nodeType": "RevertStatement",
													"src": "13640:22:11"
												}
											},
											{
												"assignments": [
													1988
												],
												"declarations": [
													{
														"constant": false,
														"id": 1988,
														"mutability": "mutable",
														"name": "priceDecimals",
														"nameLocation": "13681:13:11",
														"nodeType": "VariableDeclaration",
														"scope": 2057,
														"src": "13675:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1987,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "13675:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1994,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1990,
																	"name": "feed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1957,
																	"src": "13719:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1989,
																"name": "AggregatorV3Interface",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "13697:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1177_$",
																	"typeString": "type(contract AggregatorV3Interface)"
																}
															},
															"id": 1991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13697:27:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$1177",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13725:8:11",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1163,
														"src": "13697:36:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13697:38:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13675:60:11"
											},
											{
												"assignments": [
													1996
												],
												"declarations": [
													{
														"constant": false,
														"id": 1996,
														"mutability": "mutable",
														"name": "numerator",
														"nameLocation": "13832:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 2057,
														"src": "13824:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1995,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13824:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2003,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1997,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "13844:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"arguments": [
															{
																"id": 2000,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "13861:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1999,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13853:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1998,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13853:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 2001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13853:14:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13844:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13824:43:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2004,
														"name": "priceDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1988,
														"src": "13947:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13963:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13947:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2017,
												"nodeType": "IfStatement",
												"src": "13943:95:11",
												"trueBody": {
													"id": 2016,
													"nodeType": "Block",
													"src": "13966:72:11",
													"statements": [
														{
															"expression": {
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2007,
																	"name": "numerator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1996,
																	"src": "13981:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2008,
																		"name": "numerator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "13993:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 2009,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14006:2:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"id": 2010,
																					"name": "priceDecimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1988,
																					"src": "14012:13:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "14006:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2012,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "14005:21:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13993:33:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13981:45:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2015,
															"nodeType": "ExpressionStatement",
															"src": "13981:45:11"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2018,
															"name": "cfg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1951,
															"src": "14117:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$1189_memory_ptr",
																"typeString": "struct TokenConfig memory"
															}
														},
														"id": 2019,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14121:13:11",
														"memberName": "tokenDecimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1184,
														"src": "14117:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 2020,
														"name": "USD_DECIMALS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "14138:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "14117:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2055,
													"nodeType": "Block",
													"src": "14282:124:11",
													"statements": [
														{
															"assignments": [
																2040
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2040,
																	"mutability": "mutable",
																	"name": "factor",
																	"nameLocation": "14305:6:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 2055,
																	"src": "14297:14:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2039,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "14297:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2048,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14314:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 2045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2042,
																				"name": "USD_DECIMALS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1215,
																				"src": "14321:12:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"expression": {
																					"id": 2043,
																					"name": "cfg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1951,
																					"src": "14336:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenConfig_$1189_memory_ptr",
																						"typeString": "struct TokenConfig memory"
																					}
																				},
																				"id": 2044,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "14340:13:11",
																				"memberName": "tokenDecimals",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1184,
																				"src": "14336:17:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "14321:32:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 2046,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "14320:34:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "14314:40:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14297:57:11"
														},
														{
															"expression": {
																"id": 2053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2049,
																	"name": "usd6",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1941,
																	"src": "14369:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2050,
																		"name": "numerator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "14376:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2051,
																		"name": "factor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2040,
																		"src": "14388:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14376:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14369:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2054,
															"nodeType": "ExpressionStatement",
															"src": "14369:25:11"
														}
													]
												},
												"id": 2056,
												"nodeType": "IfStatement",
												"src": "14113:293:11",
												"trueBody": {
													"id": 2038,
													"nodeType": "Block",
													"src": "14152:124:11",
													"statements": [
														{
															"assignments": [
																2023
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2023,
																	"mutability": "mutable",
																	"name": "factor",
																	"nameLocation": "14175:6:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 2038,
																	"src": "14167:14:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2022,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "14167:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2031,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14184:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 2028,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2025,
																					"name": "cfg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1951,
																					"src": "14191:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenConfig_$1189_memory_ptr",
																						"typeString": "struct TokenConfig memory"
																					}
																				},
																				"id": 2026,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "14195:13:11",
																				"memberName": "tokenDecimals",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1184,
																				"src": "14191:17:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2027,
																				"name": "USD_DECIMALS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1215,
																				"src": "14211:12:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "14191:32:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 2029,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "14190:34:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "14184:40:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14167:57:11"
														},
														{
															"expression": {
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2032,
																	"name": "usd6",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1941,
																	"src": "14239:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2033,
																		"name": "numerator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "14246:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2034,
																		"name": "factor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2023,
																		"src": "14258:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14246:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14239:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2037,
															"nodeType": "ExpressionStatement",
															"src": "14239:25:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1934,
										"nodeType": "StructuredDocumentation",
										"src": "13135:77:11",
										"text": "@dev Convierte un monto de `token` a USD con 6 decimales usando Chainlink"
									},
									"id": 2058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toUsd",
									"nameLocation": "13227:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "13242:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "13234:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13234:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13257:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "13249:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13249:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13233:31:11"
									},
									"returnParameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "usd6",
												"nameLocation": "13296:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "13288:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13288:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13287:14:11"
									},
									"scope": 2059,
									"src": "13218:1195:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2060,
							"src": "1607:12809:11",
							"usedErrors": [
								306,
								309,
								624,
								1241,
								1245,
								1249,
								1251,
								1257,
								1263,
								1269,
								1271
							],
							"usedEvents": [
								318,
								327,
								336,
								1285,
								1297,
								1309
							]
						}
					],
					"src": "33:14385:11"
				},
				"id": 11
			}
		}
	}
}